syntax = "proto3";

package cerasusV3;

option go_package = "github.com/ansanych/cerasus-proto";

message PingRequest {
    string message = 1;
}

message PingReply {
    string message = 1;
}

message SearchRequest {
    Auth auth = 1;
    string search = 2;
    string shop = 3;
    repeated string params = 4;
}

message RequestByShop {
    Auth auth = 1;
    string shop = 2;
    repeated string params = 3;
}

message RequestByID {
    Auth auth = 1;
    int64 ID = 2;
    string shop = 3;
    repeated string params = 4;
}

message RequestByIDS {
    Auth auth = 1;
    repeated int64 ID = 2;
    string shop = 3;
    repeated string params = 4;
}

message RequestActivate {
    Auth auth = 1;
    int64 ID = 2;
    bool activate = 3;
}

message RequestByDates {
    Auth auth = 1;
    string from = 2;
    string to = 3;
    int64 ID = 4;
    repeated int64 IDS = 5;
    string shop = 6;
    string step = 7;
    int32 page = 8;
    int32 limit = 9;
    repeated string params = 10;
}

message ImageRequest {
    int64 fileID = 1;
    string filename = 2;
    string code = 3;
    string folder = 4;
}

message ImageReply {
    string filename = 1;
    bytes chunk = 2;
}

message Pagination {
    int32 page = 1;
    int32 pages = 2;
}

message QueuerJob {
    int64 ID = 1;
    int64 companyID = 2;
    string name = 3;
    int32 status = 4;
    bool done = 5;
    string error = 6;
    string shop = 7;
}

message QueuerJobs {
    repeated QueuerJob jobs = 1;
}

message Log {
    string service = 1;
    string resource = 2;
    string uuid = 3;
    string datetime = 4;
    int64 duration = 5;
    string level = 6;
    string message = 7;
    int64 userID = 8;
    int64 companyID = 9;
    int64 jobID = 10;
    bool viewed = 11;
    int64 time = 12;
}

message Logs {
    repeated Log logs = 1;
}

enum SortOrder {
    ASC = 0;
    DESC = 1;
}

enum Status {
    UNKNOWN = 0;
    OK = 1;
    ERROR = 2;
    TRUE = 3;
    FALSE = 4;
}

enum Level {
    NOLEVEL = 0;
    INFERIOR = 1;
    LOW = 2;
    MIDDLE = 3;
    HIGH = 4;
    SUPERIOR = 5;
}

message StatusReply {
    Status status = 1;
}

message Auth {
    bool tokenValidation = 1;
    int64 userID = 2;
    int64 companyID = 3;
    repeated Role roles = 4;
}

message Company {
    int64 ID = 1;
    string name = 2;
    bool brand = 3;
    bool active = 4;
    bool statistic = 5;
}

message CompanyList {
    repeated Company companies = 1;
    Pagination pagination = 2;
}

message Role {
    int64 ID = 1;
    string title = 2;
    string code = 3;
}

message Roles {
    repeated Role roles = 1;
}

message Count {
    int32 count = 1;
}

message User {
    int64 ID = 1;
    string name = 2;
    string email = 3;
    bool verifyEmail = 4;
    string phone = 5;
    bool verifyPhone = 6;
    Company company = 7;
    repeated Role roles = 8;
    bool active = 9;
    string password = 10;
}

message Users {
    repeated User users = 1;
}

message Brand {
    int64 ID = 1;
    string name = 2;
    string description = 3;
    string logo = 4;
    string url = 5;
    bool global = 6;
    bool linked = 7;
}

message Brands {
    repeated Brand brands = 1;
}

message ReplyIDS {
    repeated int64 ID = 1;
}

message ShopProduct {
    int64 ID = 1;
    string title = 2;
    string article = 3;
    string preview = 4;
    string url = 5;
    repeated string wbSkus = 6;
    int64 ozProductID = 7;
    string ymOfferID = 8;
    int64 wbNMID = 9;
    int64 ozSku = 10;
    int64 companyID = 11;
    int64 ymSku = 12;
    int32 count = 13;
    float shopPrice = 14;
}

message ShopProductLinks {
    string shopCode = 1;
    repeated int64 shopProductID = 2;
    repeated ShopProduct shopProducts = 3;
}

message Product {
    int64 ID = 1;
    string title = 2;
    string comment = 3;
    bool active = 4;
    string preview = 5;
    repeated ShopProductLinks shopProductLinks = 6;
    Brand brand = 7;
    float purchase = 8;
}

message ProductList {
    repeated Product products = 1;
    Pagination pagination = 2;
}

message Purchase {
    float purchase = 1;
    string date_from = 2;
    int64 ID = 3;
}

message ShopProductList {
    repeated ShopProduct shopProducts = 1;
}

message Shop {
    int64 ID = 1;
    string title = 2;
    string code = 3;
    string logo = 4;
    string url = 5;
    bool active = 6;
}

message AppShopData {
    Shop shop = 1;
    bool auth = 2;
    bool products = 3;
    bool sales = 4;
    bool orders = 5;
    bool days = 6;
    bool active = 7;
    bool access = 8;
}

message UserAppData {
    repeated AppShopData shops = 1;
    bool pricer = 2;
    bool statistic = 3;
}

message Tax {
    int32 year = 1;
    float value = 2;
    string name = 3;
    string description = 4;
    int64 ID = 5;
}

message Taxes {
    repeated Tax data = 1;
}

message AppTaxes {
    repeated Tax taxes = 1;
    repeated int32 years = 2;
}

message ShopProductUrlSetter {
    Auth auth = 1;
    string shop = 2;
    int64 shopProductID = 3;
    string url = 5;
}

message GeoPlace {
    int64 ID = 1;
    string name = 2;
    float lat = 3;
    float lon = 4;
}

message GeoPlaceData {
    GeoPlace country = 1;
    GeoPlace region = 2;
    GeoPlace city = 3;   
}

message Order {
    int64 ID = 1;
    int64 companyID = 2;
    string orderDatetime = 3;
    string shop = 4;
    string deliveryScheme = 5;
    int64 orderShopID = 6;
    Product product = 7;
    ShopProduct shopProduct = 8;
    float price = 9;
    int32 count = 10;
    bool cancelled = 11;
    int64 productID = 12;
    int64 shopProductID = 13;
    string orderType = 14;
    GeoPlaceData place = 15;
    string orderDate = 16;
}

message Orders {
    repeated Order orders = 1;
}

message SaleDetail {
    string name = 1;
    string date = 2;
    float value = 3;
}

message Sale {
    int64 ID = 1;
    int64 companyID = 2;
    string saleDate = 3;
    string shop = 4;
    string deliveryScheme = 5;
    int64 shopSaleID = 6;
    ShopProduct shopProduct = 7;
    Product product = 8;
    int64 shopProductID = 9;
    int64 productID = 10;
    float realisation = 11;
    float pay = 12;
    int32 count = 13;
    float tax = 14;
    float purchase = 15;
    float margin = 16;
    float marginality = 17;
    bool final = 18;
    int32 returns = 19;
    Level marginalityLevel = 20;
    string type = 21;
    repeated SaleDetail details = 22;
    string date = 23;
}

message Sales {
    repeated Sale sales = 1;
    Pagination pagination = 2;
}

message Warehouse {
    string name = 1;
    int64 officeID = 2;
    int64 warehouseID = 3;
    int32 cargoType = 4;
    int32 deliveryType = 5;
    bool active = 6;
    string updated = 7;
}

message Warehouses {
    repeated Warehouse warehouses = 1;
}

message LineGraphDataset {
    string type = 1;
    repeated float data = 2;
    float min = 3;
    float max = 4;
}

message LineGraphShop {
    string shop = 1;
    int32 index = 2;
}

message LineGraph {
    repeated string labels = 1;
    repeated LineGraphDataset datasets = 2;
    repeated LineGraphShop shops = 3;
    string graphicName = 4;
}

message LineGraphics {
    repeated LineGraph graphics = 1;
}

message LineGraphRequest {
    Auth auth = 1;
    string t = 2;
    string p = 3;
    string o = 4;
    string type = 5;
    repeated int64 ID = 6;
    string shop = 7;
}

message WeekGraphic {
    float min = 1;
    float mid = 2;
    float max = 3;
    float now = 4;
}

message CompanyDataShop {
    string shop = 1;
    bool authActive = 2;
    bool authError = 3;
    string authUpdate = 4;
    int32 productsCount = 5;
}

message CompanyDataPricer {
    string shop = 1;
    int32 limitItems = 2;
    int32 activeItems = 3;
    string startDate = 4;
    string endDate = 5;
    bool active = 6;
    string updated = 7;
    bool enable = 8;
}

message CompanyData {
    Company company = 1;
    repeated CompanyDataShop shopsData = 2;
    repeated CompanyDataPricer pricersData = 3;
}

message CompaniesData {
    repeated CompanyData data = 1;
    Pagination pagination = 2;
}

message TestProto {
    bool test = 1;
}

message ShopPriceRequest {
    Auth auth = 1;
    repeated string article = 2;
}

message ShopPrice {
    string article = 1;
    int32 price = 2;
}

message ShopPriceReply {
    repeated ShopPrice data = 1;
}