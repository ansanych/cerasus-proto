// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v3.21.12
// source: productsV3.proto

package cerasus_proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ProductListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Auth     *Auth     `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"`
	Shop     string    `protobuf:"bytes,2,opt,name=shop,proto3" json:"shop,omitempty"`
	Brands   []int64   `protobuf:"varint,3,rep,packed,name=brands,proto3" json:"brands,omitempty"`
	Page     int32     `protobuf:"varint,4,opt,name=page,proto3" json:"page,omitempty"`
	Sort     string    `protobuf:"bytes,5,opt,name=sort,proto3" json:"sort,omitempty"`
	Order    SortOrder `protobuf:"varint,6,opt,name=order,proto3,enum=cerasusV3.SortOrder" json:"order,omitempty"`
	Limit    int32     `protobuf:"varint,7,opt,name=limit,proto3" json:"limit,omitempty"`
	Pricer   bool      `protobuf:"varint,8,opt,name=pricer,proto3" json:"pricer,omitempty"`
	Counter  bool      `protobuf:"varint,9,opt,name=counter,proto3" json:"counter,omitempty"`
	Purchase bool      `protobuf:"varint,10,opt,name=purchase,proto3" json:"purchase,omitempty"`
}

func (x *ProductListRequest) Reset() {
	*x = ProductListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_productsV3_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductListRequest) ProtoMessage() {}

func (x *ProductListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_productsV3_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductListRequest.ProtoReflect.Descriptor instead.
func (*ProductListRequest) Descriptor() ([]byte, []int) {
	return file_productsV3_proto_rawDescGZIP(), []int{0}
}

func (x *ProductListRequest) GetAuth() *Auth {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *ProductListRequest) GetShop() string {
	if x != nil {
		return x.Shop
	}
	return ""
}

func (x *ProductListRequest) GetBrands() []int64 {
	if x != nil {
		return x.Brands
	}
	return nil
}

func (x *ProductListRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ProductListRequest) GetSort() string {
	if x != nil {
		return x.Sort
	}
	return ""
}

func (x *ProductListRequest) GetOrder() SortOrder {
	if x != nil {
		return x.Order
	}
	return SortOrder_ASC
}

func (x *ProductListRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ProductListRequest) GetPricer() bool {
	if x != nil {
		return x.Pricer
	}
	return false
}

func (x *ProductListRequest) GetCounter() bool {
	if x != nil {
		return x.Counter
	}
	return false
}

func (x *ProductListRequest) GetPurchase() bool {
	if x != nil {
		return x.Purchase
	}
	return false
}

type ShopProductsMatch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductID     int64 `protobuf:"varint,1,opt,name=productID,proto3" json:"productID,omitempty"`
	ShopProductID int64 `protobuf:"varint,2,opt,name=shopProductID,proto3" json:"shopProductID,omitempty"`
}

func (x *ShopProductsMatch) Reset() {
	*x = ShopProductsMatch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_productsV3_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShopProductsMatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShopProductsMatch) ProtoMessage() {}

func (x *ShopProductsMatch) ProtoReflect() protoreflect.Message {
	mi := &file_productsV3_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShopProductsMatch.ProtoReflect.Descriptor instead.
func (*ShopProductsMatch) Descriptor() ([]byte, []int) {
	return file_productsV3_proto_rawDescGZIP(), []int{1}
}

func (x *ShopProductsMatch) GetProductID() int64 {
	if x != nil {
		return x.ProductID
	}
	return 0
}

func (x *ShopProductsMatch) GetShopProductID() int64 {
	if x != nil {
		return x.ShopProductID
	}
	return 0
}

type ShopProductsMatches struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Shop string               `protobuf:"bytes,1,opt,name=shop,proto3" json:"shop,omitempty"`
	Data []*ShopProductsMatch `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *ShopProductsMatches) Reset() {
	*x = ShopProductsMatches{}
	if protoimpl.UnsafeEnabled {
		mi := &file_productsV3_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShopProductsMatches) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShopProductsMatches) ProtoMessage() {}

func (x *ShopProductsMatches) ProtoReflect() protoreflect.Message {
	mi := &file_productsV3_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShopProductsMatches.ProtoReflect.Descriptor instead.
func (*ShopProductsMatches) Descriptor() ([]byte, []int) {
	return file_productsV3_proto_rawDescGZIP(), []int{2}
}

func (x *ShopProductsMatches) GetShop() string {
	if x != nil {
		return x.Shop
	}
	return ""
}

func (x *ShopProductsMatches) GetData() []*ShopProductsMatch {
	if x != nil {
		return x.Data
	}
	return nil
}

type ProductPurchases struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductID int64       `protobuf:"varint,1,opt,name=productID,proto3" json:"productID,omitempty"`
	Purchase  []*Purchase `protobuf:"bytes,2,rep,name=purchase,proto3" json:"purchase,omitempty"`
	Actual    *Purchase   `protobuf:"bytes,3,opt,name=actual,proto3" json:"actual,omitempty"`
}

func (x *ProductPurchases) Reset() {
	*x = ProductPurchases{}
	if protoimpl.UnsafeEnabled {
		mi := &file_productsV3_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductPurchases) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductPurchases) ProtoMessage() {}

func (x *ProductPurchases) ProtoReflect() protoreflect.Message {
	mi := &file_productsV3_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductPurchases.ProtoReflect.Descriptor instead.
func (*ProductPurchases) Descriptor() ([]byte, []int) {
	return file_productsV3_proto_rawDescGZIP(), []int{3}
}

func (x *ProductPurchases) GetProductID() int64 {
	if x != nil {
		return x.ProductID
	}
	return 0
}

func (x *ProductPurchases) GetPurchase() []*Purchase {
	if x != nil {
		return x.Purchase
	}
	return nil
}

func (x *ProductPurchases) GetActual() *Purchase {
	if x != nil {
		return x.Actual
	}
	return nil
}

type ProductsPurchases struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*ProductPurchases `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *ProductsPurchases) Reset() {
	*x = ProductsPurchases{}
	if protoimpl.UnsafeEnabled {
		mi := &file_productsV3_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductsPurchases) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductsPurchases) ProtoMessage() {}

func (x *ProductsPurchases) ProtoReflect() protoreflect.Message {
	mi := &file_productsV3_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductsPurchases.ProtoReflect.Descriptor instead.
func (*ProductsPurchases) Descriptor() ([]byte, []int) {
	return file_productsV3_proto_rawDescGZIP(), []int{4}
}

func (x *ProductsPurchases) GetData() []*ProductPurchases {
	if x != nil {
		return x.Data
	}
	return nil
}

type ShopUnsortedCount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Shop  string `protobuf:"bytes,1,opt,name=shop,proto3" json:"shop,omitempty"`
	Count int32  `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *ShopUnsortedCount) Reset() {
	*x = ShopUnsortedCount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_productsV3_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShopUnsortedCount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShopUnsortedCount) ProtoMessage() {}

func (x *ShopUnsortedCount) ProtoReflect() protoreflect.Message {
	mi := &file_productsV3_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShopUnsortedCount.ProtoReflect.Descriptor instead.
func (*ShopUnsortedCount) Descriptor() ([]byte, []int) {
	return file_productsV3_proto_rawDescGZIP(), []int{5}
}

func (x *ShopUnsortedCount) GetShop() string {
	if x != nil {
		return x.Shop
	}
	return ""
}

func (x *ShopUnsortedCount) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type UnsortedCount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*ShopUnsortedCount `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *UnsortedCount) Reset() {
	*x = UnsortedCount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_productsV3_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnsortedCount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnsortedCount) ProtoMessage() {}

func (x *UnsortedCount) ProtoReflect() protoreflect.Message {
	mi := &file_productsV3_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnsortedCount.ProtoReflect.Descriptor instead.
func (*UnsortedCount) Descriptor() ([]byte, []int) {
	return file_productsV3_proto_rawDescGZIP(), []int{6}
}

func (x *UnsortedCount) GetData() []*ShopUnsortedCount {
	if x != nil {
		return x.Data
	}
	return nil
}

type ConnectUnsortedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Auth         *Auth   `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"`
	Name         string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Product      int64   `protobuf:"varint,3,opt,name=product,proto3" json:"product,omitempty"`
	ShopProducts []int64 `protobuf:"varint,4,rep,packed,name=shopProducts,proto3" json:"shopProducts,omitempty"`
	Shop         string  `protobuf:"bytes,5,opt,name=shop,proto3" json:"shop,omitempty"`
}

func (x *ConnectUnsortedRequest) Reset() {
	*x = ConnectUnsortedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_productsV3_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectUnsortedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectUnsortedRequest) ProtoMessage() {}

func (x *ConnectUnsortedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_productsV3_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectUnsortedRequest.ProtoReflect.Descriptor instead.
func (*ConnectUnsortedRequest) Descriptor() ([]byte, []int) {
	return file_productsV3_proto_rawDescGZIP(), []int{7}
}

func (x *ConnectUnsortedRequest) GetAuth() *Auth {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *ConnectUnsortedRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ConnectUnsortedRequest) GetProduct() int64 {
	if x != nil {
		return x.Product
	}
	return 0
}

func (x *ConnectUnsortedRequest) GetShopProducts() []int64 {
	if x != nil {
		return x.ShopProducts
	}
	return nil
}

func (x *ConnectUnsortedRequest) GetShop() string {
	if x != nil {
		return x.Shop
	}
	return ""
}

type UpdateProductRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Auth    *Auth  `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"`
	ID      int64  `protobuf:"varint,2,opt,name=ID,proto3" json:"ID,omitempty"`
	Active  bool   `protobuf:"varint,3,opt,name=active,proto3" json:"active,omitempty"`
	Title   string `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	Comment string `protobuf:"bytes,5,opt,name=comment,proto3" json:"comment,omitempty"`
}

func (x *UpdateProductRequest) Reset() {
	*x = UpdateProductRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_productsV3_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateProductRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProductRequest) ProtoMessage() {}

func (x *UpdateProductRequest) ProtoReflect() protoreflect.Message {
	mi := &file_productsV3_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProductRequest.ProtoReflect.Descriptor instead.
func (*UpdateProductRequest) Descriptor() ([]byte, []int) {
	return file_productsV3_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateProductRequest) GetAuth() *Auth {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *UpdateProductRequest) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *UpdateProductRequest) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *UpdateProductRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UpdateProductRequest) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

type SetProductPurchaseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Auth  *Auth   `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"`
	ID    int64   `protobuf:"varint,2,opt,name=ID,proto3" json:"ID,omitempty"`
	Value float32 `protobuf:"fixed32,3,opt,name=value,proto3" json:"value,omitempty"`
	Date  string  `protobuf:"bytes,4,opt,name=date,proto3" json:"date,omitempty"`
}

func (x *SetProductPurchaseRequest) Reset() {
	*x = SetProductPurchaseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_productsV3_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetProductPurchaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetProductPurchaseRequest) ProtoMessage() {}

func (x *SetProductPurchaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_productsV3_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetProductPurchaseRequest.ProtoReflect.Descriptor instead.
func (*SetProductPurchaseRequest) Descriptor() ([]byte, []int) {
	return file_productsV3_proto_rawDescGZIP(), []int{9}
}

func (x *SetProductPurchaseRequest) GetAuth() *Auth {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *SetProductPurchaseRequest) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *SetProductPurchaseRequest) GetValue() float32 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *SetProductPurchaseRequest) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

type SetProductBrandRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Auth    *Auth `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"`
	ID      int64 `protobuf:"varint,2,opt,name=ID,proto3" json:"ID,omitempty"`
	BrandID int64 `protobuf:"varint,3,opt,name=brandID,proto3" json:"brandID,omitempty"`
}

func (x *SetProductBrandRequest) Reset() {
	*x = SetProductBrandRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_productsV3_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetProductBrandRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetProductBrandRequest) ProtoMessage() {}

func (x *SetProductBrandRequest) ProtoReflect() protoreflect.Message {
	mi := &file_productsV3_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetProductBrandRequest.ProtoReflect.Descriptor instead.
func (*SetProductBrandRequest) Descriptor() ([]byte, []int) {
	return file_productsV3_proto_rawDescGZIP(), []int{10}
}

func (x *SetProductBrandRequest) GetAuth() *Auth {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *SetProductBrandRequest) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *SetProductBrandRequest) GetBrandID() int64 {
	if x != nil {
		return x.BrandID
	}
	return 0
}

type ProductLink struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID          int64        `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	ShopProduct *ShopProduct `protobuf:"bytes,2,opt,name=shopProduct,proto3" json:"shopProduct,omitempty"`
}

func (x *ProductLink) Reset() {
	*x = ProductLink{}
	if protoimpl.UnsafeEnabled {
		mi := &file_productsV3_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductLink) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductLink) ProtoMessage() {}

func (x *ProductLink) ProtoReflect() protoreflect.Message {
	mi := &file_productsV3_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductLink.ProtoReflect.Descriptor instead.
func (*ProductLink) Descriptor() ([]byte, []int) {
	return file_productsV3_proto_rawDescGZIP(), []int{11}
}

func (x *ProductLink) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *ProductLink) GetShopProduct() *ShopProduct {
	if x != nil {
		return x.ShopProduct
	}
	return nil
}

type ProductLinkShop struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Shop  string         `protobuf:"bytes,1,opt,name=shop,proto3" json:"shop,omitempty"`
	Links []*ProductLink `protobuf:"bytes,2,rep,name=links,proto3" json:"links,omitempty"`
}

func (x *ProductLinkShop) Reset() {
	*x = ProductLinkShop{}
	if protoimpl.UnsafeEnabled {
		mi := &file_productsV3_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductLinkShop) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductLinkShop) ProtoMessage() {}

func (x *ProductLinkShop) ProtoReflect() protoreflect.Message {
	mi := &file_productsV3_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductLinkShop.ProtoReflect.Descriptor instead.
func (*ProductLinkShop) Descriptor() ([]byte, []int) {
	return file_productsV3_proto_rawDescGZIP(), []int{12}
}

func (x *ProductLinkShop) GetShop() string {
	if x != nil {
		return x.Shop
	}
	return ""
}

func (x *ProductLinkShop) GetLinks() []*ProductLink {
	if x != nil {
		return x.Links
	}
	return nil
}

type ProductLinks struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*ProductLinkShop `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *ProductLinks) Reset() {
	*x = ProductLinks{}
	if protoimpl.UnsafeEnabled {
		mi := &file_productsV3_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductLinks) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductLinks) ProtoMessage() {}

func (x *ProductLinks) ProtoReflect() protoreflect.Message {
	mi := &file_productsV3_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductLinks.ProtoReflect.Descriptor instead.
func (*ProductLinks) Descriptor() ([]byte, []int) {
	return file_productsV3_proto_rawDescGZIP(), []int{13}
}

func (x *ProductLinks) GetData() []*ProductLinkShop {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_productsV3_proto protoreflect.FileDescriptor

var file_productsV3_proto_rawDesc = []byte{
	0x0a, 0x10, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x56, 0x33, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x09, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x1a, 0x0f, 0x63,
	0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x9d,
	0x02, 0x0a, 0x12, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e,
	0x41, 0x75, 0x74, 0x68, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x68,
	0x6f, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x68, 0x6f, 0x70, 0x12, 0x16,
	0x0a, 0x06, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x03, 0x52, 0x06,
	0x62, 0x72, 0x61, 0x6e, 0x64, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f,
	0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x2a,
	0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e,
	0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x70, 0x72, 0x69, 0x63, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x70, 0x72, 0x69, 0x63, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x22, 0x57,
	0x0a, 0x11, 0x53, 0x68, 0x6f, 0x70, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x4d, 0x61,
	0x74, 0x63, 0x68, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49,
	0x44, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x68, 0x6f, 0x70, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x73, 0x68, 0x6f, 0x70, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x22, 0x5b, 0x0a, 0x13, 0x53, 0x68, 0x6f, 0x70, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x73, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x68, 0x6f, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x68,
	0x6f, 0x70, 0x12, 0x30, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x53, 0x68, 0x6f,
	0x70, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0x8e, 0x01, 0x0a, 0x10, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x12, 0x2f, 0x0a, 0x08, 0x70, 0x75, 0x72, 0x63, 0x68,
	0x61, 0x73, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63, 0x65, 0x72, 0x61,
	0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x52, 0x08,
	0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x75,
	0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73,
	0x75, 0x73, 0x56, 0x33, 0x2e, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x52, 0x06, 0x61,
	0x63, 0x74, 0x75, 0x61, 0x6c, 0x22, 0x44, 0x0a, 0x11, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x73, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x73, 0x12, 0x2f, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73,
	0x75, 0x73, 0x56, 0x33, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x50, 0x75, 0x72, 0x63,
	0x68, 0x61, 0x73, 0x65, 0x73, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x3d, 0x0a, 0x11, 0x53,
	0x68, 0x6f, 0x70, 0x55, 0x6e, 0x73, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x73, 0x68, 0x6f, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x73, 0x68, 0x6f, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x41, 0x0a, 0x0d, 0x55, 0x6e,
	0x73, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x30, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x65, 0x72, 0x61,
	0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x53, 0x68, 0x6f, 0x70, 0x55, 0x6e, 0x73, 0x6f, 0x72, 0x74,
	0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xa3, 0x01,
	0x0a, 0x16, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x55, 0x6e, 0x73, 0x6f, 0x72, 0x74, 0x65,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73,
	0x56, 0x33, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x73,
	0x68, 0x6f, 0x70, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x03, 0x52, 0x0c, 0x73, 0x68, 0x6f, 0x70, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x12,
	0x12, 0x0a, 0x04, 0x73, 0x68, 0x6f, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73,
	0x68, 0x6f, 0x70, 0x22, 0x93, 0x01, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x04,
	0x61, 0x75, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x65, 0x72,
	0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x04, 0x61, 0x75, 0x74,
	0x68, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49,
	0x44, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x7a, 0x0a, 0x19, 0x53, 0x65, 0x74,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33,
	0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x12, 0x0e, 0x0a, 0x02, 0x49,
	0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x65, 0x22, 0x67, 0x0a, 0x16, 0x53, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x23, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x04,
	0x61, 0x75, 0x74, 0x68, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x49, 0x44, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x49, 0x44, 0x22, 0x57,
	0x0a, 0x0b, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x0e, 0x0a,
	0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x44, 0x12, 0x38, 0x0a,
	0x0b, 0x73, 0x68, 0x6f, 0x70, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x53,
	0x68, 0x6f, 0x70, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x0b, 0x73, 0x68, 0x6f, 0x70,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x22, 0x53, 0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x53, 0x68, 0x6f, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x68,
	0x6f, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x68, 0x6f, 0x70, 0x12, 0x2c,
	0x0a, 0x05, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x05, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x22, 0x3e, 0x0a, 0x0c,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x12, 0x2e, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63, 0x65, 0x72,
	0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x69,
	0x6e, 0x6b, 0x53, 0x68, 0x6f, 0x70, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x32, 0xd4, 0x0b, 0x0a,
	0x08, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x12, 0x36, 0x0a, 0x04, 0x50, 0x69, 0x6e,
	0x67, 0x12, 0x16, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x50, 0x69,
	0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x63, 0x65, 0x72, 0x61,
	0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x00, 0x12, 0x49, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x1d, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x16, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x10,
	0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x12, 0x18, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x63, 0x65, 0x72,
	0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x22, 0x00, 0x12, 0x3a, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x12, 0x16, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x79, 0x49, 0x44, 0x1a, 0x12, 0x2e, 0x63, 0x65, 0x72,
	0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x22, 0x00,
	0x12, 0x51, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x70, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x73, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x12, 0x17, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73,
	0x75, 0x73, 0x56, 0x33, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x79, 0x49, 0x44,
	0x53, 0x1a, 0x1e, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x53, 0x68,
	0x6f, 0x70, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x65,
	0x73, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61,
	0x73, 0x65, 0x73, 0x12, 0x17, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x79, 0x49, 0x44, 0x53, 0x1a, 0x1c, 0x2e, 0x63,
	0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x73, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x73, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x18,
	0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x55, 0x6e, 0x73, 0x6f, 0x72,
	0x74, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x0f, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73,
	0x75, 0x73, 0x56, 0x33, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x1a, 0x18, 0x2e, 0x63, 0x65, 0x72, 0x61,
	0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x55, 0x6e, 0x73, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x22, 0x00, 0x12, 0x4e, 0x0a, 0x0f, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x55, 0x6e, 0x73, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x12, 0x21, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73,
	0x75, 0x73, 0x56, 0x33, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x55, 0x6e, 0x73, 0x6f,
	0x72, 0x74, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x63, 0x65,
	0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x4a, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x1f, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73,
	0x56, 0x33, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75,
	0x73, 0x56, 0x33, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x00, 0x12, 0x4b, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x50,
	0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x12, 0x16, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75,
	0x73, 0x56, 0x33, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x79, 0x49, 0x44, 0x1a,
	0x1b, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x73, 0x22, 0x00, 0x12, 0x54,
	0x0a, 0x12, 0x53, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x50, 0x75, 0x72, 0x63,
	0x68, 0x61, 0x73, 0x65, 0x12, 0x24, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33,
	0x2e, 0x53, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x50, 0x75, 0x72, 0x63, 0x68,
	0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x63, 0x65, 0x72,
	0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x00, 0x12, 0x49, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x12, 0x16, 0x2e,
	0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x42, 0x79, 0x49, 0x44, 0x1a, 0x16, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56,
	0x33, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12,
	0x4e, 0x0a, 0x0f, 0x53, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x42, 0x72, 0x61,
	0x6e, 0x64, 0x12, 0x21, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x53,
	0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56,
	0x33, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12,
	0x44, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x69, 0x6e,
	0x6b, 0x73, 0x12, 0x16, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x79, 0x49, 0x44, 0x1a, 0x17, 0x2e, 0x63, 0x65, 0x72,
	0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x69,
	0x6e, 0x6b, 0x73, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x16, 0x2e, 0x63, 0x65, 0x72,
	0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x79,
	0x49, 0x44, 0x1a, 0x16, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x51, 0x0a, 0x17,
	0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x55, 0x6e, 0x73, 0x6f, 0x72,
	0x74, 0x65, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x18, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75,
	0x73, 0x56, 0x33, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1a, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x53, 0x68,
	0x6f, 0x70, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x00, 0x12,
	0x45, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x42, 0x79,
	0x49, 0x44, 0x53, 0x12, 0x17, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x79, 0x49, 0x44, 0x53, 0x1a, 0x16, 0x2e, 0x63,
	0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f,
	0x70, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x41, 0x70, 0x70, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x18, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x79, 0x53, 0x68, 0x6f, 0x70, 0x1a, 0x10, 0x2e, 0x63, 0x65,
	0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x00, 0x12,
	0x4c, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x70, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x73, 0x55, 0x6e, 0x73, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x18, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x42, 0x79, 0x53, 0x68, 0x6f, 0x70, 0x1a, 0x10, 0x2e, 0x63, 0x65, 0x72, 0x61,
	0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x00, 0x12, 0x44, 0x0a,
	0x14, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x70, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56,
	0x33, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x79, 0x53, 0x68, 0x6f, 0x70, 0x1a,
	0x10, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x22, 0x00, 0x42, 0x23, 0x5a, 0x21, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x61, 0x6e, 0x73, 0x61, 0x6e, 0x79, 0x63, 0x68, 0x2f, 0x63, 0x65, 0x72, 0x61, 0x73,
	0x75, 0x73, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_productsV3_proto_rawDescOnce sync.Once
	file_productsV3_proto_rawDescData = file_productsV3_proto_rawDesc
)

func file_productsV3_proto_rawDescGZIP() []byte {
	file_productsV3_proto_rawDescOnce.Do(func() {
		file_productsV3_proto_rawDescData = protoimpl.X.CompressGZIP(file_productsV3_proto_rawDescData)
	})
	return file_productsV3_proto_rawDescData
}

var file_productsV3_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_productsV3_proto_goTypes = []interface{}{
	(*ProductListRequest)(nil),        // 0: cerasusV3.ProductListRequest
	(*ShopProductsMatch)(nil),         // 1: cerasusV3.ShopProductsMatch
	(*ShopProductsMatches)(nil),       // 2: cerasusV3.ShopProductsMatches
	(*ProductPurchases)(nil),          // 3: cerasusV3.ProductPurchases
	(*ProductsPurchases)(nil),         // 4: cerasusV3.ProductsPurchases
	(*ShopUnsortedCount)(nil),         // 5: cerasusV3.ShopUnsortedCount
	(*UnsortedCount)(nil),             // 6: cerasusV3.UnsortedCount
	(*ConnectUnsortedRequest)(nil),    // 7: cerasusV3.ConnectUnsortedRequest
	(*UpdateProductRequest)(nil),      // 8: cerasusV3.UpdateProductRequest
	(*SetProductPurchaseRequest)(nil), // 9: cerasusV3.SetProductPurchaseRequest
	(*SetProductBrandRequest)(nil),    // 10: cerasusV3.SetProductBrandRequest
	(*ProductLink)(nil),               // 11: cerasusV3.ProductLink
	(*ProductLinkShop)(nil),           // 12: cerasusV3.ProductLinkShop
	(*ProductLinks)(nil),              // 13: cerasusV3.ProductLinks
	(*Auth)(nil),                      // 14: cerasusV3.Auth
	(SortOrder)(0),                    // 15: cerasusV3.SortOrder
	(*Purchase)(nil),                  // 16: cerasusV3.Purchase
	(*ShopProduct)(nil),               // 17: cerasusV3.ShopProduct
	(*PingRequest)(nil),               // 18: cerasusV3.PingRequest
	(*SearchRequest)(nil),             // 19: cerasusV3.SearchRequest
	(*RequestByID)(nil),               // 20: cerasusV3.RequestByID
	(*RequestByIDS)(nil),              // 21: cerasusV3.RequestByIDS
	(*RequestByShop)(nil),             // 22: cerasusV3.RequestByShop
	(*PingReply)(nil),                 // 23: cerasusV3.PingReply
	(*ProductList)(nil),               // 24: cerasusV3.ProductList
	(*Product)(nil),                   // 25: cerasusV3.Product
	(*StatusReply)(nil),               // 26: cerasusV3.StatusReply
	(*ShopProductList)(nil),           // 27: cerasusV3.ShopProductList
	(*Count)(nil),                     // 28: cerasusV3.Count
}
var file_productsV3_proto_depIdxs = []int32{
	14, // 0: cerasusV3.ProductListRequest.auth:type_name -> cerasusV3.Auth
	15, // 1: cerasusV3.ProductListRequest.order:type_name -> cerasusV3.SortOrder
	1,  // 2: cerasusV3.ShopProductsMatches.data:type_name -> cerasusV3.ShopProductsMatch
	16, // 3: cerasusV3.ProductPurchases.purchase:type_name -> cerasusV3.Purchase
	16, // 4: cerasusV3.ProductPurchases.actual:type_name -> cerasusV3.Purchase
	3,  // 5: cerasusV3.ProductsPurchases.data:type_name -> cerasusV3.ProductPurchases
	5,  // 6: cerasusV3.UnsortedCount.data:type_name -> cerasusV3.ShopUnsortedCount
	14, // 7: cerasusV3.ConnectUnsortedRequest.auth:type_name -> cerasusV3.Auth
	14, // 8: cerasusV3.UpdateProductRequest.auth:type_name -> cerasusV3.Auth
	14, // 9: cerasusV3.SetProductPurchaseRequest.auth:type_name -> cerasusV3.Auth
	14, // 10: cerasusV3.SetProductBrandRequest.auth:type_name -> cerasusV3.Auth
	17, // 11: cerasusV3.ProductLink.shopProduct:type_name -> cerasusV3.ShopProduct
	11, // 12: cerasusV3.ProductLinkShop.links:type_name -> cerasusV3.ProductLink
	12, // 13: cerasusV3.ProductLinks.data:type_name -> cerasusV3.ProductLinkShop
	18, // 14: cerasusV3.Products.Ping:input_type -> cerasusV3.PingRequest
	0,  // 15: cerasusV3.Products.GetProductList:input_type -> cerasusV3.ProductListRequest
	19, // 16: cerasusV3.Products.GetProductSearch:input_type -> cerasusV3.SearchRequest
	20, // 17: cerasusV3.Products.GetProduct:input_type -> cerasusV3.RequestByID
	21, // 18: cerasusV3.Products.GetShopProductsMatch:input_type -> cerasusV3.RequestByIDS
	21, // 19: cerasusV3.Products.GetPurchases:input_type -> cerasusV3.RequestByIDS
	14, // 20: cerasusV3.Products.GetProductsUnsortedCount:input_type -> cerasusV3.Auth
	7,  // 21: cerasusV3.Products.ConnectUnsorted:input_type -> cerasusV3.ConnectUnsortedRequest
	8,  // 22: cerasusV3.Products.UpdateProduct:input_type -> cerasusV3.UpdateProductRequest
	20, // 23: cerasusV3.Products.GetProductPurchase:input_type -> cerasusV3.RequestByID
	9,  // 24: cerasusV3.Products.SetProductPurchase:input_type -> cerasusV3.SetProductPurchaseRequest
	20, // 25: cerasusV3.Products.DeleteProductPurchase:input_type -> cerasusV3.RequestByID
	10, // 26: cerasusV3.Products.SetProductBrand:input_type -> cerasusV3.SetProductBrandRequest
	20, // 27: cerasusV3.Products.GetProductLinks:input_type -> cerasusV3.RequestByID
	20, // 28: cerasusV3.Products.DeleteProductLink:input_type -> cerasusV3.RequestByID
	19, // 29: cerasusV3.Products.GetProductsUnsortedList:input_type -> cerasusV3.SearchRequest
	21, // 30: cerasusV3.Products.GetProductsByIDS:input_type -> cerasusV3.RequestByIDS
	22, // 31: cerasusV3.Products.GetShopProductsAppCount:input_type -> cerasusV3.RequestByShop
	22, // 32: cerasusV3.Products.GetShopProductsUnsortedCount:input_type -> cerasusV3.RequestByShop
	22, // 33: cerasusV3.Products.GetShopProductsCount:input_type -> cerasusV3.RequestByShop
	23, // 34: cerasusV3.Products.Ping:output_type -> cerasusV3.PingReply
	24, // 35: cerasusV3.Products.GetProductList:output_type -> cerasusV3.ProductList
	24, // 36: cerasusV3.Products.GetProductSearch:output_type -> cerasusV3.ProductList
	25, // 37: cerasusV3.Products.GetProduct:output_type -> cerasusV3.Product
	2,  // 38: cerasusV3.Products.GetShopProductsMatch:output_type -> cerasusV3.ShopProductsMatches
	4,  // 39: cerasusV3.Products.GetPurchases:output_type -> cerasusV3.ProductsPurchases
	6,  // 40: cerasusV3.Products.GetProductsUnsortedCount:output_type -> cerasusV3.UnsortedCount
	26, // 41: cerasusV3.Products.ConnectUnsorted:output_type -> cerasusV3.StatusReply
	26, // 42: cerasusV3.Products.UpdateProduct:output_type -> cerasusV3.StatusReply
	3,  // 43: cerasusV3.Products.GetProductPurchase:output_type -> cerasusV3.ProductPurchases
	26, // 44: cerasusV3.Products.SetProductPurchase:output_type -> cerasusV3.StatusReply
	26, // 45: cerasusV3.Products.DeleteProductPurchase:output_type -> cerasusV3.StatusReply
	26, // 46: cerasusV3.Products.SetProductBrand:output_type -> cerasusV3.StatusReply
	13, // 47: cerasusV3.Products.GetProductLinks:output_type -> cerasusV3.ProductLinks
	26, // 48: cerasusV3.Products.DeleteProductLink:output_type -> cerasusV3.StatusReply
	27, // 49: cerasusV3.Products.GetProductsUnsortedList:output_type -> cerasusV3.ShopProductList
	24, // 50: cerasusV3.Products.GetProductsByIDS:output_type -> cerasusV3.ProductList
	28, // 51: cerasusV3.Products.GetShopProductsAppCount:output_type -> cerasusV3.Count
	28, // 52: cerasusV3.Products.GetShopProductsUnsortedCount:output_type -> cerasusV3.Count
	28, // 53: cerasusV3.Products.GetShopProductsCount:output_type -> cerasusV3.Count
	34, // [34:54] is the sub-list for method output_type
	14, // [14:34] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_productsV3_proto_init() }
func file_productsV3_proto_init() {
	if File_productsV3_proto != nil {
		return
	}
	file_cerasusV3_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_productsV3_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_productsV3_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShopProductsMatch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_productsV3_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShopProductsMatches); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_productsV3_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductPurchases); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_productsV3_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductsPurchases); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_productsV3_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShopUnsortedCount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_productsV3_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnsortedCount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_productsV3_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectUnsortedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_productsV3_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateProductRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_productsV3_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetProductPurchaseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_productsV3_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetProductBrandRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_productsV3_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductLink); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_productsV3_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductLinkShop); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_productsV3_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductLinks); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_productsV3_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_productsV3_proto_goTypes,
		DependencyIndexes: file_productsV3_proto_depIdxs,
		MessageInfos:      file_productsV3_proto_msgTypes,
	}.Build()
	File_productsV3_proto = out.File
	file_productsV3_proto_rawDesc = nil
	file_productsV3_proto_goTypes = nil
	file_productsV3_proto_depIdxs = nil
}
