// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v3.21.12
// source: settingsV3.proto

package cerasus_proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetMarginRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Auth    *Auth `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"`
	BrandID int64 `protobuf:"varint,2,opt,name=brandID,proto3" json:"brandID,omitempty"`
}

func (x *GetMarginRequest) Reset() {
	*x = GetMarginRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_settingsV3_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMarginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMarginRequest) ProtoMessage() {}

func (x *GetMarginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_settingsV3_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMarginRequest.ProtoReflect.Descriptor instead.
func (*GetMarginRequest) Descriptor() ([]byte, []int) {
	return file_settingsV3_proto_rawDescGZIP(), []int{0}
}

func (x *GetMarginRequest) GetAuth() *Auth {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *GetMarginRequest) GetBrandID() int64 {
	if x != nil {
		return x.BrandID
	}
	return 0
}

type MarginData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID   int64   `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Min  float32 `protobuf:"fixed32,2,opt,name=min,proto3" json:"min,omitempty"`
	Mid  float32 `protobuf:"fixed32,3,opt,name=mid,proto3" json:"mid,omitempty"`
	Max  float32 `protobuf:"fixed32,4,opt,name=max,proto3" json:"max,omitempty"`
	Date string  `protobuf:"bytes,5,opt,name=date,proto3" json:"date,omitempty"`
}

func (x *MarginData) Reset() {
	*x = MarginData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_settingsV3_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarginData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarginData) ProtoMessage() {}

func (x *MarginData) ProtoReflect() protoreflect.Message {
	mi := &file_settingsV3_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarginData.ProtoReflect.Descriptor instead.
func (*MarginData) Descriptor() ([]byte, []int) {
	return file_settingsV3_proto_rawDescGZIP(), []int{1}
}

func (x *MarginData) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *MarginData) GetMin() float32 {
	if x != nil {
		return x.Min
	}
	return 0
}

func (x *MarginData) GetMid() float32 {
	if x != nil {
		return x.Mid
	}
	return 0
}

func (x *MarginData) GetMax() float32 {
	if x != nil {
		return x.Max
	}
	return 0
}

func (x *MarginData) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

type MarginHistory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*MarginData `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *MarginHistory) Reset() {
	*x = MarginHistory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_settingsV3_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarginHistory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarginHistory) ProtoMessage() {}

func (x *MarginHistory) ProtoReflect() protoreflect.Message {
	mi := &file_settingsV3_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarginHistory.ProtoReflect.Descriptor instead.
func (*MarginHistory) Descriptor() ([]byte, []int) {
	return file_settingsV3_proto_rawDescGZIP(), []int{2}
}

func (x *MarginHistory) GetData() []*MarginData {
	if x != nil {
		return x.Data
	}
	return nil
}

type MarginSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data    *MarginData    `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	History *MarginHistory `protobuf:"bytes,2,opt,name=history,proto3" json:"history,omitempty"`
}

func (x *MarginSettings) Reset() {
	*x = MarginSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_settingsV3_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarginSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarginSettings) ProtoMessage() {}

func (x *MarginSettings) ProtoReflect() protoreflect.Message {
	mi := &file_settingsV3_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarginSettings.ProtoReflect.Descriptor instead.
func (*MarginSettings) Descriptor() ([]byte, []int) {
	return file_settingsV3_proto_rawDescGZIP(), []int{3}
}

func (x *MarginSettings) GetData() *MarginData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *MarginSettings) GetHistory() *MarginHistory {
	if x != nil {
		return x.History
	}
	return nil
}

type SetMarginRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Auth    *Auth       `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"`
	Data    *MarginData `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	BrandID int64       `protobuf:"varint,3,opt,name=brandID,proto3" json:"brandID,omitempty"`
}

func (x *SetMarginRequest) Reset() {
	*x = SetMarginRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_settingsV3_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetMarginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetMarginRequest) ProtoMessage() {}

func (x *SetMarginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_settingsV3_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetMarginRequest.ProtoReflect.Descriptor instead.
func (*SetMarginRequest) Descriptor() ([]byte, []int) {
	return file_settingsV3_proto_rawDescGZIP(), []int{4}
}

func (x *SetMarginRequest) GetAuth() *Auth {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *SetMarginRequest) GetData() *MarginData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *SetMarginRequest) GetBrandID() int64 {
	if x != nil {
		return x.BrandID
	}
	return 0
}

type CreateCompanyBrandRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Auth  *Auth  `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"`
	Brand *Brand `protobuf:"bytes,2,opt,name=brand,proto3" json:"brand,omitempty"`
}

func (x *CreateCompanyBrandRequest) Reset() {
	*x = CreateCompanyBrandRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_settingsV3_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCompanyBrandRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCompanyBrandRequest) ProtoMessage() {}

func (x *CreateCompanyBrandRequest) ProtoReflect() protoreflect.Message {
	mi := &file_settingsV3_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCompanyBrandRequest.ProtoReflect.Descriptor instead.
func (*CreateCompanyBrandRequest) Descriptor() ([]byte, []int) {
	return file_settingsV3_proto_rawDescGZIP(), []int{5}
}

func (x *CreateCompanyBrandRequest) GetAuth() *Auth {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *CreateCompanyBrandRequest) GetBrand() *Brand {
	if x != nil {
		return x.Brand
	}
	return nil
}

type SetTaxRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Auth  *Auth   `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"`
	Year  int32   `protobuf:"varint,2,opt,name=year,proto3" json:"year,omitempty"`
	ID    int64   `protobuf:"varint,3,opt,name=ID,proto3" json:"ID,omitempty"`
	Value float32 `protobuf:"fixed32,4,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *SetTaxRequest) Reset() {
	*x = SetTaxRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_settingsV3_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetTaxRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetTaxRequest) ProtoMessage() {}

func (x *SetTaxRequest) ProtoReflect() protoreflect.Message {
	mi := &file_settingsV3_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetTaxRequest.ProtoReflect.Descriptor instead.
func (*SetTaxRequest) Descriptor() ([]byte, []int) {
	return file_settingsV3_proto_rawDescGZIP(), []int{6}
}

func (x *SetTaxRequest) GetAuth() *Auth {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *SetTaxRequest) GetYear() int32 {
	if x != nil {
		return x.Year
	}
	return 0
}

func (x *SetTaxRequest) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *SetTaxRequest) GetValue() float32 {
	if x != nil {
		return x.Value
	}
	return 0
}

type MarginLevel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Level Level   `protobuf:"varint,1,opt,name=level,proto3,enum=cerasusV3.Level" json:"level,omitempty"`
	Value float32 `protobuf:"fixed32,2,opt,name=value,proto3" json:"value,omitempty"`
	Date  string  `protobuf:"bytes,3,opt,name=date,proto3" json:"date,omitempty"`
}

func (x *MarginLevel) Reset() {
	*x = MarginLevel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_settingsV3_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarginLevel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarginLevel) ProtoMessage() {}

func (x *MarginLevel) ProtoReflect() protoreflect.Message {
	mi := &file_settingsV3_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarginLevel.ProtoReflect.Descriptor instead.
func (*MarginLevel) Descriptor() ([]byte, []int) {
	return file_settingsV3_proto_rawDescGZIP(), []int{7}
}

func (x *MarginLevel) GetLevel() Level {
	if x != nil {
		return x.Level
	}
	return Level_NOLEVEL
}

func (x *MarginLevel) GetValue() float32 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *MarginLevel) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

type MarginLevelsBrand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Brand  *Brand         `protobuf:"bytes,1,opt,name=brand,proto3" json:"brand,omitempty"`
	Levels []*MarginLevel `protobuf:"bytes,2,rep,name=levels,proto3" json:"levels,omitempty"`
}

func (x *MarginLevelsBrand) Reset() {
	*x = MarginLevelsBrand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_settingsV3_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarginLevelsBrand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarginLevelsBrand) ProtoMessage() {}

func (x *MarginLevelsBrand) ProtoReflect() protoreflect.Message {
	mi := &file_settingsV3_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarginLevelsBrand.ProtoReflect.Descriptor instead.
func (*MarginLevelsBrand) Descriptor() ([]byte, []int) {
	return file_settingsV3_proto_rawDescGZIP(), []int{8}
}

func (x *MarginLevelsBrand) GetBrand() *Brand {
	if x != nil {
		return x.Brand
	}
	return nil
}

func (x *MarginLevelsBrand) GetLevels() []*MarginLevel {
	if x != nil {
		return x.Levels
	}
	return nil
}

type MarginLevels struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Levels      []*MarginLevel       `protobuf:"bytes,1,rep,name=levels,proto3" json:"levels,omitempty"`
	BrandLevels []*MarginLevelsBrand `protobuf:"bytes,2,rep,name=brandLevels,proto3" json:"brandLevels,omitempty"`
}

func (x *MarginLevels) Reset() {
	*x = MarginLevels{}
	if protoimpl.UnsafeEnabled {
		mi := &file_settingsV3_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarginLevels) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarginLevels) ProtoMessage() {}

func (x *MarginLevels) ProtoReflect() protoreflect.Message {
	mi := &file_settingsV3_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarginLevels.ProtoReflect.Descriptor instead.
func (*MarginLevels) Descriptor() ([]byte, []int) {
	return file_settingsV3_proto_rawDescGZIP(), []int{9}
}

func (x *MarginLevels) GetLevels() []*MarginLevel {
	if x != nil {
		return x.Levels
	}
	return nil
}

func (x *MarginLevels) GetBrandLevels() []*MarginLevelsBrand {
	if x != nil {
		return x.BrandLevels
	}
	return nil
}

var File_settingsV3_proto protoreflect.FileDescriptor

var file_settingsV3_proto_rawDesc = []byte{
	0x0a, 0x10, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x56, 0x33, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x09, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x1a, 0x0f, 0x63,
	0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x51,
	0x0a, 0x10, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x23, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x41, 0x75, 0x74,
	0x68, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x72, 0x61, 0x6e, 0x64,
	0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x49,
	0x44, 0x22, 0x66, 0x0a, 0x0a, 0x4d, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x44, 0x12,
	0x10, 0x0a, 0x03, 0x6d, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03, 0x6d, 0x69,
	0x6e, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03,
	0x6d, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x61, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x03, 0x6d, 0x61, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x22, 0x3a, 0x0a, 0x0d, 0x4d, 0x61, 0x72,
	0x67, 0x69, 0x6e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x29, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73,
	0x75, 0x73, 0x56, 0x33, 0x2e, 0x4d, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x6f, 0x0a, 0x0e, 0x4d, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x29, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56,
	0x33, 0x2e, 0x4d, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x32, 0x0a, 0x07, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e,
	0x4d, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x07, 0x68,
	0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x22, 0x7c, 0x0a, 0x10, 0x53, 0x65, 0x74, 0x4d, 0x61, 0x72,
	0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x04, 0x61, 0x75,
	0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73,
	0x75, 0x73, 0x56, 0x33, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x12,
	0x29, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x4d, 0x61, 0x72, 0x67, 0x69, 0x6e,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x72,
	0x61, 0x6e, 0x64, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x62, 0x72, 0x61,
	0x6e, 0x64, 0x49, 0x44, 0x22, 0x68, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x23, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x41, 0x75, 0x74, 0x68,
	0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x12, 0x26, 0x0a, 0x05, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56,
	0x33, 0x2e, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x52, 0x05, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x22, 0x6e,
	0x0a, 0x0d, 0x53, 0x65, 0x74, 0x54, 0x61, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x23, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x04,
	0x61, 0x75, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x79, 0x65, 0x61, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x79, 0x65, 0x61, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x5f,
	0x0a, 0x0b, 0x4d, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x26, 0x0a,
	0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x63,
	0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x05,
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x22,
	0x6b, 0x0a, 0x11, 0x4d, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x73, 0x42,
	0x72, 0x61, 0x6e, 0x64, 0x12, 0x26, 0x0a, 0x05, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e,
	0x42, 0x72, 0x61, 0x6e, 0x64, 0x52, 0x05, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x12, 0x2e, 0x0a, 0x06,
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63,
	0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x4d, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x52, 0x06, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x73, 0x22, 0x7e, 0x0a, 0x0c,
	0x4d, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x73, 0x12, 0x2e, 0x0a, 0x06,
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63,
	0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x4d, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x52, 0x06, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x73, 0x12, 0x3e, 0x0a, 0x0b,
	0x62, 0x72, 0x61, 0x6e, 0x64, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x4d, 0x61,
	0x72, 0x67, 0x69, 0x6e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x73, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x52,
	0x0b, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x73, 0x32, 0xbf, 0x07, 0x0a,
	0x08, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x36, 0x0a, 0x04, 0x50, 0x69, 0x6e,
	0x67, 0x12, 0x16, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x50, 0x69,
	0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x63, 0x65, 0x72, 0x61,
	0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x00, 0x12, 0x3b, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x70, 0x70, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x0f, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e,
	0x41, 0x75, 0x74, 0x68, 0x1a, 0x16, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x70, 0x70, 0x44, 0x61, 0x74, 0x61, 0x22, 0x00, 0x12, 0x3c,
	0x0a, 0x08, 0x47, 0x65, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x17, 0x2e, 0x63, 0x65, 0x72,
	0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x09,
	0x47, 0x65, 0x74, 0x4d, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x12, 0x1b, 0x2e, 0x63, 0x65, 0x72, 0x61,
	0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73,
	0x56, 0x33, 0x2e, 0x4d, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x22, 0x00, 0x12, 0x42, 0x0a, 0x09, 0x53, 0x65, 0x74, 0x4d, 0x61, 0x72, 0x67, 0x69, 0x6e,
	0x12, 0x1b, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x53, 0x65, 0x74,
	0x4d, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e,
	0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4d, 0x61,
	0x72, 0x67, 0x69, 0x6e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x73, 0x12, 0x0f, 0x2e, 0x63, 0x65, 0x72,
	0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x1a, 0x17, 0x2e, 0x63, 0x65,
	0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x4d, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x73, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x4d, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x12, 0x16, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73,
	0x56, 0x33, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x79, 0x49, 0x44, 0x1a, 0x16,
	0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x38, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x43,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x73, 0x12, 0x0f, 0x2e, 0x63,
	0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x1a, 0x11, 0x2e,
	0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x73,
	0x22, 0x00, 0x12, 0x36, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x12, 0x16,
	0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x42, 0x79, 0x49, 0x44, 0x1a, 0x10, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73,
	0x56, 0x33, 0x2e, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x0c, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x73, 0x12, 0x18, 0x2e, 0x63, 0x65, 0x72,
	0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33,
	0x2e, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x73, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x13, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x42, 0x72, 0x61, 0x6e, 0x64,
	0x12, 0x16, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x42, 0x79, 0x49, 0x44, 0x1a, 0x16, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73,
	0x75, 0x73, 0x56, 0x33, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x00, 0x12, 0x54, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x12, 0x24, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73,
	0x75, 0x73, 0x56, 0x33, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16,
	0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x2f, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x54,
	0x61, 0x78, 0x65, 0x73, 0x12, 0x0f, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33,
	0x2e, 0x41, 0x75, 0x74, 0x68, 0x1a, 0x10, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56,
	0x33, 0x2e, 0x54, 0x61, 0x78, 0x65, 0x73, 0x22, 0x00, 0x12, 0x35, 0x0a, 0x0b, 0x47, 0x65, 0x74,
	0x41, 0x70, 0x70, 0x54, 0x61, 0x78, 0x65, 0x73, 0x12, 0x0f, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73,
	0x75, 0x73, 0x56, 0x33, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x1a, 0x13, 0x2e, 0x63, 0x65, 0x72, 0x61,
	0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x41, 0x70, 0x70, 0x54, 0x61, 0x78, 0x65, 0x73, 0x22, 0x00,
	0x12, 0x3c, 0x0a, 0x06, 0x53, 0x65, 0x74, 0x54, 0x61, 0x78, 0x12, 0x18, 0x2e, 0x63, 0x65, 0x72,
	0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x53, 0x65, 0x74, 0x54, 0x61, 0x78, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x42, 0x23,
	0x5a, 0x21, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x6e, 0x73,
	0x61, 0x6e, 0x79, 0x63, 0x68, 0x2f, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x2d, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_settingsV3_proto_rawDescOnce sync.Once
	file_settingsV3_proto_rawDescData = file_settingsV3_proto_rawDesc
)

func file_settingsV3_proto_rawDescGZIP() []byte {
	file_settingsV3_proto_rawDescOnce.Do(func() {
		file_settingsV3_proto_rawDescData = protoimpl.X.CompressGZIP(file_settingsV3_proto_rawDescData)
	})
	return file_settingsV3_proto_rawDescData
}

var file_settingsV3_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_settingsV3_proto_goTypes = []interface{}{
	(*GetMarginRequest)(nil),          // 0: cerasusV3.GetMarginRequest
	(*MarginData)(nil),                // 1: cerasusV3.MarginData
	(*MarginHistory)(nil),             // 2: cerasusV3.MarginHistory
	(*MarginSettings)(nil),            // 3: cerasusV3.MarginSettings
	(*SetMarginRequest)(nil),          // 4: cerasusV3.SetMarginRequest
	(*CreateCompanyBrandRequest)(nil), // 5: cerasusV3.CreateCompanyBrandRequest
	(*SetTaxRequest)(nil),             // 6: cerasusV3.SetTaxRequest
	(*MarginLevel)(nil),               // 7: cerasusV3.MarginLevel
	(*MarginLevelsBrand)(nil),         // 8: cerasusV3.MarginLevelsBrand
	(*MarginLevels)(nil),              // 9: cerasusV3.MarginLevels
	(*Auth)(nil),                      // 10: cerasusV3.Auth
	(*Brand)(nil),                     // 11: cerasusV3.Brand
	(Level)(0),                        // 12: cerasusV3.Level
	(*PingRequest)(nil),               // 13: cerasusV3.PingRequest
	(*ImageRequest)(nil),              // 14: cerasusV3.ImageRequest
	(*RequestByID)(nil),               // 15: cerasusV3.RequestByID
	(*SearchRequest)(nil),             // 16: cerasusV3.SearchRequest
	(*PingReply)(nil),                 // 17: cerasusV3.PingReply
	(*UserAppData)(nil),               // 18: cerasusV3.UserAppData
	(*ImageReply)(nil),                // 19: cerasusV3.ImageReply
	(*StatusReply)(nil),               // 20: cerasusV3.StatusReply
	(*Brands)(nil),                    // 21: cerasusV3.Brands
	(*Taxes)(nil),                     // 22: cerasusV3.Taxes
	(*AppTaxes)(nil),                  // 23: cerasusV3.AppTaxes
}
var file_settingsV3_proto_depIdxs = []int32{
	10, // 0: cerasusV3.GetMarginRequest.auth:type_name -> cerasusV3.Auth
	1,  // 1: cerasusV3.MarginHistory.data:type_name -> cerasusV3.MarginData
	1,  // 2: cerasusV3.MarginSettings.data:type_name -> cerasusV3.MarginData
	2,  // 3: cerasusV3.MarginSettings.history:type_name -> cerasusV3.MarginHistory
	10, // 4: cerasusV3.SetMarginRequest.auth:type_name -> cerasusV3.Auth
	1,  // 5: cerasusV3.SetMarginRequest.data:type_name -> cerasusV3.MarginData
	10, // 6: cerasusV3.CreateCompanyBrandRequest.auth:type_name -> cerasusV3.Auth
	11, // 7: cerasusV3.CreateCompanyBrandRequest.brand:type_name -> cerasusV3.Brand
	10, // 8: cerasusV3.SetTaxRequest.auth:type_name -> cerasusV3.Auth
	12, // 9: cerasusV3.MarginLevel.level:type_name -> cerasusV3.Level
	11, // 10: cerasusV3.MarginLevelsBrand.brand:type_name -> cerasusV3.Brand
	7,  // 11: cerasusV3.MarginLevelsBrand.levels:type_name -> cerasusV3.MarginLevel
	7,  // 12: cerasusV3.MarginLevels.levels:type_name -> cerasusV3.MarginLevel
	8,  // 13: cerasusV3.MarginLevels.brandLevels:type_name -> cerasusV3.MarginLevelsBrand
	13, // 14: cerasusV3.Settings.Ping:input_type -> cerasusV3.PingRequest
	10, // 15: cerasusV3.Settings.GetUserAppData:input_type -> cerasusV3.Auth
	14, // 16: cerasusV3.Settings.GetImage:input_type -> cerasusV3.ImageRequest
	0,  // 17: cerasusV3.Settings.GetMargin:input_type -> cerasusV3.GetMarginRequest
	4,  // 18: cerasusV3.Settings.SetMargin:input_type -> cerasusV3.SetMarginRequest
	10, // 19: cerasusV3.Settings.GetMarginLevels:input_type -> cerasusV3.Auth
	15, // 20: cerasusV3.Settings.DeleteMargin:input_type -> cerasusV3.RequestByID
	10, // 21: cerasusV3.Settings.GetCompanyBrands:input_type -> cerasusV3.Auth
	15, // 22: cerasusV3.Settings.GetBrand:input_type -> cerasusV3.RequestByID
	16, // 23: cerasusV3.Settings.SearchBrands:input_type -> cerasusV3.SearchRequest
	15, // 24: cerasusV3.Settings.ConnectCompanyBrand:input_type -> cerasusV3.RequestByID
	5,  // 25: cerasusV3.Settings.CreateCompanyBrand:input_type -> cerasusV3.CreateCompanyBrandRequest
	10, // 26: cerasusV3.Settings.GetTaxes:input_type -> cerasusV3.Auth
	10, // 27: cerasusV3.Settings.GetAppTaxes:input_type -> cerasusV3.Auth
	6,  // 28: cerasusV3.Settings.SetTax:input_type -> cerasusV3.SetTaxRequest
	17, // 29: cerasusV3.Settings.Ping:output_type -> cerasusV3.PingReply
	18, // 30: cerasusV3.Settings.GetUserAppData:output_type -> cerasusV3.UserAppData
	19, // 31: cerasusV3.Settings.GetImage:output_type -> cerasusV3.ImageReply
	3,  // 32: cerasusV3.Settings.GetMargin:output_type -> cerasusV3.MarginSettings
	20, // 33: cerasusV3.Settings.SetMargin:output_type -> cerasusV3.StatusReply
	9,  // 34: cerasusV3.Settings.GetMarginLevels:output_type -> cerasusV3.MarginLevels
	20, // 35: cerasusV3.Settings.DeleteMargin:output_type -> cerasusV3.StatusReply
	21, // 36: cerasusV3.Settings.GetCompanyBrands:output_type -> cerasusV3.Brands
	11, // 37: cerasusV3.Settings.GetBrand:output_type -> cerasusV3.Brand
	21, // 38: cerasusV3.Settings.SearchBrands:output_type -> cerasusV3.Brands
	20, // 39: cerasusV3.Settings.ConnectCompanyBrand:output_type -> cerasusV3.StatusReply
	20, // 40: cerasusV3.Settings.CreateCompanyBrand:output_type -> cerasusV3.StatusReply
	22, // 41: cerasusV3.Settings.GetTaxes:output_type -> cerasusV3.Taxes
	23, // 42: cerasusV3.Settings.GetAppTaxes:output_type -> cerasusV3.AppTaxes
	20, // 43: cerasusV3.Settings.SetTax:output_type -> cerasusV3.StatusReply
	29, // [29:44] is the sub-list for method output_type
	14, // [14:29] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_settingsV3_proto_init() }
func file_settingsV3_proto_init() {
	if File_settingsV3_proto != nil {
		return
	}
	file_cerasusV3_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_settingsV3_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMarginRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_settingsV3_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MarginData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_settingsV3_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MarginHistory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_settingsV3_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MarginSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_settingsV3_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetMarginRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_settingsV3_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCompanyBrandRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_settingsV3_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetTaxRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_settingsV3_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MarginLevel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_settingsV3_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MarginLevelsBrand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_settingsV3_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MarginLevels); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_settingsV3_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_settingsV3_proto_goTypes,
		DependencyIndexes: file_settingsV3_proto_depIdxs,
		MessageInfos:      file_settingsV3_proto_msgTypes,
	}.Build()
	File_settingsV3_proto = out.File
	file_settingsV3_proto_rawDesc = nil
	file_settingsV3_proto_goTypes = nil
	file_settingsV3_proto_depIdxs = nil
}
