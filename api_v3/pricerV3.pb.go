// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.12.4
// source: pricerV3.proto

package cerasus_proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PricerListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Auth   *Auth   `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"`
	Shop   string  `protobuf:"bytes,2,opt,name=shop,proto3" json:"shop,omitempty"`
	Pricer bool    `protobuf:"varint,3,opt,name=pricer,proto3" json:"pricer,omitempty"`
	Dumper bool    `protobuf:"varint,4,opt,name=dumper,proto3" json:"dumper,omitempty"`
	Brands []int64 `protobuf:"varint,5,rep,packed,name=brands,proto3" json:"brands,omitempty"`
}

func (x *PricerListRequest) Reset() {
	*x = PricerListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pricerV3_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PricerListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PricerListRequest) ProtoMessage() {}

func (x *PricerListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pricerV3_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PricerListRequest.ProtoReflect.Descriptor instead.
func (*PricerListRequest) Descriptor() ([]byte, []int) {
	return file_pricerV3_proto_rawDescGZIP(), []int{0}
}

func (x *PricerListRequest) GetAuth() *Auth {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *PricerListRequest) GetShop() string {
	if x != nil {
		return x.Shop
	}
	return ""
}

func (x *PricerListRequest) GetPricer() bool {
	if x != nil {
		return x.Pricer
	}
	return false
}

func (x *PricerListRequest) GetDumper() bool {
	if x != nil {
		return x.Dumper
	}
	return false
}

func (x *PricerListRequest) GetBrands() []int64 {
	if x != nil {
		return x.Brands
	}
	return nil
}

type PricerListItemShop struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Shop                 string `protobuf:"bytes,1,opt,name=shop,proto3" json:"shop,omitempty"`
	Primary              bool   `protobuf:"varint,2,opt,name=primary,proto3" json:"primary,omitempty"`
	LastChange           string `protobuf:"bytes,3,opt,name=lastChange,proto3" json:"lastChange,omitempty"`
	LastChangeTime       int64  `protobuf:"varint,4,opt,name=lastChangeTime,proto3" json:"lastChangeTime,omitempty"`
	Pricer               bool   `protobuf:"varint,5,opt,name=pricer,proto3" json:"pricer,omitempty"`
	PricerTarget         int32  `protobuf:"varint,6,opt,name=pricerTarget,proto3" json:"pricerTarget,omitempty"`
	Dumping              bool   `protobuf:"varint,7,opt,name=dumping,proto3" json:"dumping,omitempty"`
	DumpingNightTarget   int32  `protobuf:"varint,8,opt,name=dumpingNightTarget,proto3" json:"dumpingNightTarget,omitempty"`
	DumpingWeekendTarget int32  `protobuf:"varint,9,opt,name=dumpingWeekendTarget,proto3" json:"dumpingWeekendTarget,omitempty"`
}

func (x *PricerListItemShop) Reset() {
	*x = PricerListItemShop{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pricerV3_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PricerListItemShop) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PricerListItemShop) ProtoMessage() {}

func (x *PricerListItemShop) ProtoReflect() protoreflect.Message {
	mi := &file_pricerV3_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PricerListItemShop.ProtoReflect.Descriptor instead.
func (*PricerListItemShop) Descriptor() ([]byte, []int) {
	return file_pricerV3_proto_rawDescGZIP(), []int{1}
}

func (x *PricerListItemShop) GetShop() string {
	if x != nil {
		return x.Shop
	}
	return ""
}

func (x *PricerListItemShop) GetPrimary() bool {
	if x != nil {
		return x.Primary
	}
	return false
}

func (x *PricerListItemShop) GetLastChange() string {
	if x != nil {
		return x.LastChange
	}
	return ""
}

func (x *PricerListItemShop) GetLastChangeTime() int64 {
	if x != nil {
		return x.LastChangeTime
	}
	return 0
}

func (x *PricerListItemShop) GetPricer() bool {
	if x != nil {
		return x.Pricer
	}
	return false
}

func (x *PricerListItemShop) GetPricerTarget() int32 {
	if x != nil {
		return x.PricerTarget
	}
	return 0
}

func (x *PricerListItemShop) GetDumping() bool {
	if x != nil {
		return x.Dumping
	}
	return false
}

func (x *PricerListItemShop) GetDumpingNightTarget() int32 {
	if x != nil {
		return x.DumpingNightTarget
	}
	return 0
}

func (x *PricerListItemShop) GetDumpingWeekendTarget() int32 {
	if x != nil {
		return x.DumpingWeekendTarget
	}
	return 0
}

type PricerListItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Product        *Product              `protobuf:"bytes,1,opt,name=product,proto3" json:"product,omitempty"`
	Shops          []*PricerListItemShop `protobuf:"bytes,2,rep,name=shops,proto3" json:"shops,omitempty"`
	PrimaryShop    string                `protobuf:"bytes,3,opt,name=primaryShop,proto3" json:"primaryShop,omitempty"`
	Sort           int32                 `protobuf:"varint,4,opt,name=sort,proto3" json:"sort,omitempty"`
	Alert          bool                  `protobuf:"varint,5,opt,name=alert,proto3" json:"alert,omitempty"`
	LastChange     string                `protobuf:"bytes,6,opt,name=lastChange,proto3" json:"lastChange,omitempty"`
	LastChangeTime int64                 `protobuf:"varint,7,opt,name=lastChangeTime,proto3" json:"lastChangeTime,omitempty"`
}

func (x *PricerListItem) Reset() {
	*x = PricerListItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pricerV3_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PricerListItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PricerListItem) ProtoMessage() {}

func (x *PricerListItem) ProtoReflect() protoreflect.Message {
	mi := &file_pricerV3_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PricerListItem.ProtoReflect.Descriptor instead.
func (*PricerListItem) Descriptor() ([]byte, []int) {
	return file_pricerV3_proto_rawDescGZIP(), []int{2}
}

func (x *PricerListItem) GetProduct() *Product {
	if x != nil {
		return x.Product
	}
	return nil
}

func (x *PricerListItem) GetShops() []*PricerListItemShop {
	if x != nil {
		return x.Shops
	}
	return nil
}

func (x *PricerListItem) GetPrimaryShop() string {
	if x != nil {
		return x.PrimaryShop
	}
	return ""
}

func (x *PricerListItem) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *PricerListItem) GetAlert() bool {
	if x != nil {
		return x.Alert
	}
	return false
}

func (x *PricerListItem) GetLastChange() string {
	if x != nil {
		return x.LastChange
	}
	return ""
}

func (x *PricerListItem) GetLastChangeTime() int64 {
	if x != nil {
		return x.LastChangeTime
	}
	return 0
}

type PricerList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*PricerListItem `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *PricerList) Reset() {
	*x = PricerList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pricerV3_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PricerList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PricerList) ProtoMessage() {}

func (x *PricerList) ProtoReflect() protoreflect.Message {
	mi := &file_pricerV3_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PricerList.ProtoReflect.Descriptor instead.
func (*PricerList) Descriptor() ([]byte, []int) {
	return file_pricerV3_proto_rawDescGZIP(), []int{3}
}

func (x *PricerList) GetData() []*PricerListItem {
	if x != nil {
		return x.Data
	}
	return nil
}

type UserPricerParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Shop        string `protobuf:"bytes,1,opt,name=shop,proto3" json:"shop,omitempty"`
	LimitItems  int32  `protobuf:"varint,2,opt,name=limitItems,proto3" json:"limitItems,omitempty"`
	ActiveItems int32  `protobuf:"varint,3,opt,name=activeItems,proto3" json:"activeItems,omitempty"`
	StartDate   string `protobuf:"bytes,4,opt,name=startDate,proto3" json:"startDate,omitempty"`
	EndDate     string `protobuf:"bytes,5,opt,name=endDate,proto3" json:"endDate,omitempty"`
	Active      bool   `protobuf:"varint,6,opt,name=active,proto3" json:"active,omitempty"`
	Updated     string `protobuf:"bytes,7,opt,name=updated,proto3" json:"updated,omitempty"`
}

func (x *UserPricerParam) Reset() {
	*x = UserPricerParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pricerV3_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserPricerParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserPricerParam) ProtoMessage() {}

func (x *UserPricerParam) ProtoReflect() protoreflect.Message {
	mi := &file_pricerV3_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserPricerParam.ProtoReflect.Descriptor instead.
func (*UserPricerParam) Descriptor() ([]byte, []int) {
	return file_pricerV3_proto_rawDescGZIP(), []int{4}
}

func (x *UserPricerParam) GetShop() string {
	if x != nil {
		return x.Shop
	}
	return ""
}

func (x *UserPricerParam) GetLimitItems() int32 {
	if x != nil {
		return x.LimitItems
	}
	return 0
}

func (x *UserPricerParam) GetActiveItems() int32 {
	if x != nil {
		return x.ActiveItems
	}
	return 0
}

func (x *UserPricerParam) GetStartDate() string {
	if x != nil {
		return x.StartDate
	}
	return ""
}

func (x *UserPricerParam) GetEndDate() string {
	if x != nil {
		return x.EndDate
	}
	return ""
}

func (x *UserPricerParam) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *UserPricerParam) GetUpdated() string {
	if x != nil {
		return x.Updated
	}
	return ""
}

type UserPricerParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*UserPricerParam `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *UserPricerParams) Reset() {
	*x = UserPricerParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pricerV3_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserPricerParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserPricerParams) ProtoMessage() {}

func (x *UserPricerParams) ProtoReflect() protoreflect.Message {
	mi := &file_pricerV3_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserPricerParams.ProtoReflect.Descriptor instead.
func (*UserPricerParams) Descriptor() ([]byte, []int) {
	return file_pricerV3_proto_rawDescGZIP(), []int{5}
}

func (x *UserPricerParams) GetData() []*UserPricerParam {
	if x != nil {
		return x.Data
	}
	return nil
}

type ParserGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Parser string `protobuf:"bytes,1,opt,name=parser,proto3" json:"parser,omitempty"`
}

func (x *ParserGetRequest) Reset() {
	*x = ParserGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pricerV3_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParserGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParserGetRequest) ProtoMessage() {}

func (x *ParserGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pricerV3_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParserGetRequest.ProtoReflect.Descriptor instead.
func (*ParserGetRequest) Descriptor() ([]byte, []int) {
	return file_pricerV3_proto_rawDescGZIP(), []int{6}
}

func (x *ParserGetRequest) GetParser() string {
	if x != nil {
		return x.Parser
	}
	return ""
}

type ParserJob struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Parser      string `protobuf:"bytes,1,opt,name=parser,proto3" json:"parser,omitempty"`
	QueueDataID int64  `protobuf:"varint,2,opt,name=queueDataID,proto3" json:"queueDataID,omitempty"`
	Url         string `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
	Client      string `protobuf:"bytes,4,opt,name=client,proto3" json:"client,omitempty"`
}

func (x *ParserJob) Reset() {
	*x = ParserJob{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pricerV3_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParserJob) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParserJob) ProtoMessage() {}

func (x *ParserJob) ProtoReflect() protoreflect.Message {
	mi := &file_pricerV3_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParserJob.ProtoReflect.Descriptor instead.
func (*ParserJob) Descriptor() ([]byte, []int) {
	return file_pricerV3_proto_rawDescGZIP(), []int{7}
}

func (x *ParserJob) GetParser() string {
	if x != nil {
		return x.Parser
	}
	return ""
}

func (x *ParserJob) GetQueueDataID() int64 {
	if x != nil {
		return x.QueueDataID
	}
	return 0
}

func (x *ParserJob) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *ParserJob) GetClient() string {
	if x != nil {
		return x.Client
	}
	return ""
}

type ParserSetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Parser      string `protobuf:"bytes,1,opt,name=parser,proto3" json:"parser,omitempty"`
	QueueDataID int64  `protobuf:"varint,2,opt,name=queueDataID,proto3" json:"queueDataID,omitempty"`
	File        []byte `protobuf:"bytes,3,opt,name=file,proto3" json:"file,omitempty"`
}

func (x *ParserSetRequest) Reset() {
	*x = ParserSetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pricerV3_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParserSetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParserSetRequest) ProtoMessage() {}

func (x *ParserSetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pricerV3_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParserSetRequest.ProtoReflect.Descriptor instead.
func (*ParserSetRequest) Descriptor() ([]byte, []int) {
	return file_pricerV3_proto_rawDescGZIP(), []int{8}
}

func (x *ParserSetRequest) GetParser() string {
	if x != nil {
		return x.Parser
	}
	return ""
}

func (x *ParserSetRequest) GetQueueDataID() int64 {
	if x != nil {
		return x.QueueDataID
	}
	return 0
}

func (x *ParserSetRequest) GetFile() []byte {
	if x != nil {
		return x.File
	}
	return nil
}

type DetectorGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Detector     string `protobuf:"bytes,1,opt,name=detector,proto3" json:"detector,omitempty"`
	DetectorType string `protobuf:"bytes,2,opt,name=detectorType,proto3" json:"detectorType,omitempty"`
}

func (x *DetectorGetRequest) Reset() {
	*x = DetectorGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pricerV3_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DetectorGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetectorGetRequest) ProtoMessage() {}

func (x *DetectorGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pricerV3_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetectorGetRequest.ProtoReflect.Descriptor instead.
func (*DetectorGetRequest) Descriptor() ([]byte, []int) {
	return file_pricerV3_proto_rawDescGZIP(), []int{9}
}

func (x *DetectorGetRequest) GetDetector() string {
	if x != nil {
		return x.Detector
	}
	return ""
}

func (x *DetectorGetRequest) GetDetectorType() string {
	if x != nil {
		return x.DetectorType
	}
	return ""
}

type DetectorCount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Waiting int32 `protobuf:"varint,1,opt,name=waiting,proto3" json:"waiting,omitempty"`
	Done    int32 `protobuf:"varint,2,opt,name=done,proto3" json:"done,omitempty"`
	Error   int32 `protobuf:"varint,3,opt,name=error,proto3" json:"error,omitempty"`
	Unknown int32 `protobuf:"varint,4,opt,name=unknown,proto3" json:"unknown,omitempty"`
}

func (x *DetectorCount) Reset() {
	*x = DetectorCount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pricerV3_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DetectorCount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetectorCount) ProtoMessage() {}

func (x *DetectorCount) ProtoReflect() protoreflect.Message {
	mi := &file_pricerV3_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetectorCount.ProtoReflect.Descriptor instead.
func (*DetectorCount) Descriptor() ([]byte, []int) {
	return file_pricerV3_proto_rawDescGZIP(), []int{10}
}

func (x *DetectorCount) GetWaiting() int32 {
	if x != nil {
		return x.Waiting
	}
	return 0
}

func (x *DetectorCount) GetDone() int32 {
	if x != nil {
		return x.Done
	}
	return 0
}

func (x *DetectorCount) GetError() int32 {
	if x != nil {
		return x.Error
	}
	return 0
}

func (x *DetectorCount) GetUnknown() int32 {
	if x != nil {
		return x.Unknown
	}
	return 0
}

type DetectorWork struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobID int64  `protobuf:"varint,1,opt,name=jobID,proto3" json:"jobID,omitempty"`
	File  []byte `protobuf:"bytes,2,opt,name=file,proto3" json:"file,omitempty"`
	Shop  string `protobuf:"bytes,3,opt,name=shop,proto3" json:"shop,omitempty"`
}

func (x *DetectorWork) Reset() {
	*x = DetectorWork{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pricerV3_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DetectorWork) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetectorWork) ProtoMessage() {}

func (x *DetectorWork) ProtoReflect() protoreflect.Message {
	mi := &file_pricerV3_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetectorWork.ProtoReflect.Descriptor instead.
func (*DetectorWork) Descriptor() ([]byte, []int) {
	return file_pricerV3_proto_rawDescGZIP(), []int{11}
}

func (x *DetectorWork) GetJobID() int64 {
	if x != nil {
		return x.JobID
	}
	return 0
}

func (x *DetectorWork) GetFile() []byte {
	if x != nil {
		return x.File
	}
	return nil
}

func (x *DetectorWork) GetShop() string {
	if x != nil {
		return x.Shop
	}
	return ""
}

type DetectorGetReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Detector string           `protobuf:"bytes,1,opt,name=detector,proto3" json:"detector,omitempty"`
	Client   string           `protobuf:"bytes,2,opt,name=client,proto3" json:"client,omitempty"`
	Work     *DetectorWork    `protobuf:"bytes,3,opt,name=work,proto3" json:"work,omitempty"`
	Count    []*DetectorCount `protobuf:"bytes,4,rep,name=count,proto3" json:"count,omitempty"`
	TestMode bool             `protobuf:"varint,5,opt,name=testMode,proto3" json:"testMode,omitempty"`
}

func (x *DetectorGetReply) Reset() {
	*x = DetectorGetReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pricerV3_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DetectorGetReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetectorGetReply) ProtoMessage() {}

func (x *DetectorGetReply) ProtoReflect() protoreflect.Message {
	mi := &file_pricerV3_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetectorGetReply.ProtoReflect.Descriptor instead.
func (*DetectorGetReply) Descriptor() ([]byte, []int) {
	return file_pricerV3_proto_rawDescGZIP(), []int{12}
}

func (x *DetectorGetReply) GetDetector() string {
	if x != nil {
		return x.Detector
	}
	return ""
}

func (x *DetectorGetReply) GetClient() string {
	if x != nil {
		return x.Client
	}
	return ""
}

func (x *DetectorGetReply) GetWork() *DetectorWork {
	if x != nil {
		return x.Work
	}
	return nil
}

func (x *DetectorGetReply) GetCount() []*DetectorCount {
	if x != nil {
		return x.Count
	}
	return nil
}

func (x *DetectorGetReply) GetTestMode() bool {
	if x != nil {
		return x.TestMode
	}
	return false
}

type DetectorSetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Detector     string `protobuf:"bytes,1,opt,name=detector,proto3" json:"detector,omitempty"`
	DetectorType string `protobuf:"bytes,2,opt,name=detectorType,proto3" json:"detectorType,omitempty"`
	Result       string `protobuf:"bytes,3,opt,name=result,proto3" json:"result,omitempty"`
	Description  string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Parse        int32  `protobuf:"varint,5,opt,name=parse,proto3" json:"parse,omitempty"`
	JobID        int64  `protobuf:"varint,6,opt,name=jobID,proto3" json:"jobID,omitempty"`
}

func (x *DetectorSetRequest) Reset() {
	*x = DetectorSetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pricerV3_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DetectorSetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetectorSetRequest) ProtoMessage() {}

func (x *DetectorSetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pricerV3_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetectorSetRequest.ProtoReflect.Descriptor instead.
func (*DetectorSetRequest) Descriptor() ([]byte, []int) {
	return file_pricerV3_proto_rawDescGZIP(), []int{13}
}

func (x *DetectorSetRequest) GetDetector() string {
	if x != nil {
		return x.Detector
	}
	return ""
}

func (x *DetectorSetRequest) GetDetectorType() string {
	if x != nil {
		return x.DetectorType
	}
	return ""
}

func (x *DetectorSetRequest) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

func (x *DetectorSetRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *DetectorSetRequest) GetParse() int32 {
	if x != nil {
		return x.Parse
	}
	return 0
}

func (x *DetectorSetRequest) GetJobID() int64 {
	if x != nil {
		return x.JobID
	}
	return 0
}

var File_pricerV3_proto protoreflect.FileDescriptor

var file_pricerV3_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x70, 0x72, 0x69, 0x63, 0x65, 0x72, 0x56, 0x33, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x09, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x1a, 0x0f, 0x63, 0x65, 0x72,
	0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x94, 0x01, 0x0a,
	0x11, 0x50, 0x72, 0x69, 0x63, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x23, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x41, 0x75, 0x74,
	0x68, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x68, 0x6f, 0x70, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x68, 0x6f, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x75, 0x6d, 0x70, 0x65, 0x72, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x06, 0x64, 0x75, 0x6d, 0x70, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x62,
	0x72, 0x61, 0x6e, 0x64, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x03, 0x52, 0x06, 0x62, 0x72, 0x61,
	0x6e, 0x64, 0x73, 0x22, 0xc4, 0x02, 0x0a, 0x12, 0x50, 0x72, 0x69, 0x63, 0x65, 0x72, 0x4c, 0x69,
	0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x68, 0x6f, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x68,
	0x6f, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x68, 0x6f, 0x70, 0x12, 0x18,
	0x0a, 0x07, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x6c, 0x61, 0x73, 0x74,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x61,
	0x73, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x6c, 0x61, 0x73, 0x74,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x70, 0x72, 0x69, 0x63, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x70, 0x72, 0x69, 0x63, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x72, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x72, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x64, 0x75, 0x6d, 0x70, 0x69, 0x6e, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x64,
	0x75, 0x6d, 0x70, 0x69, 0x6e, 0x67, 0x12, 0x2e, 0x0a, 0x12, 0x64, 0x75, 0x6d, 0x70, 0x69, 0x6e,
	0x67, 0x4e, 0x69, 0x67, 0x68, 0x74, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x12, 0x64, 0x75, 0x6d, 0x70, 0x69, 0x6e, 0x67, 0x4e, 0x69, 0x67, 0x68, 0x74,
	0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x32, 0x0a, 0x14, 0x64, 0x75, 0x6d, 0x70, 0x69, 0x6e,
	0x67, 0x57, 0x65, 0x65, 0x6b, 0x65, 0x6e, 0x64, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x14, 0x64, 0x75, 0x6d, 0x70, 0x69, 0x6e, 0x67, 0x57, 0x65, 0x65,
	0x6b, 0x65, 0x6e, 0x64, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x22, 0x87, 0x02, 0x0a, 0x0e, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x2c, 0x0a,
	0x07, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x33, 0x0a, 0x05, 0x73,
	0x68, 0x6f, 0x70, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x63, 0x65, 0x72,
	0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x72, 0x4c, 0x69, 0x73,
	0x74, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x68, 0x6f, 0x70, 0x52, 0x05, 0x73, 0x68, 0x6f, 0x70, 0x73,
	0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x53, 0x68, 0x6f, 0x70, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x53, 0x68,
	0x6f, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x12, 0x1e, 0x0a, 0x0a,
	0x6c, 0x61, 0x73, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x26, 0x0a, 0x0e,
	0x6c, 0x61, 0x73, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x22, 0x3b, 0x0a, 0x0a, 0x50, 0x72, 0x69, 0x63, 0x65, 0x72, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x2d, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x22, 0xd1, 0x01, 0x0a, 0x0f, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x69, 0x63, 0x65, 0x72,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x68, 0x6f, 0x70, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x68, 0x6f, 0x70, 0x12, 0x1e, 0x0a, 0x0a, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64,
	0x44, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x44,
	0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x22, 0x42, 0x0a, 0x10, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x2e, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75,
	0x73, 0x56, 0x33, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x69, 0x63, 0x65, 0x72, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x2a, 0x0a, 0x10, 0x50, 0x61, 0x72,
	0x73, 0x65, 0x72, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x70, 0x61, 0x72, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70,
	0x61, 0x72, 0x73, 0x65, 0x72, 0x22, 0x6f, 0x0a, 0x09, 0x50, 0x61, 0x72, 0x73, 0x65, 0x72, 0x4a,
	0x6f, 0x62, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x73, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x71, 0x75,
	0x65, 0x75, 0x65, 0x44, 0x61, 0x74, 0x61, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0b, 0x71, 0x75, 0x65, 0x75, 0x65, 0x44, 0x61, 0x74, 0x61, 0x49, 0x44, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x16,
	0x0a, 0x06, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x22, 0x60, 0x0a, 0x10, 0x50, 0x61, 0x72, 0x73, 0x65, 0x72,
	0x53, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61,
	0x72, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x73,
	0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x71, 0x75, 0x65, 0x75, 0x65, 0x44, 0x61, 0x74, 0x61, 0x49,
	0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x71, 0x75, 0x65, 0x75, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x22, 0x54, 0x0a, 0x12, 0x44, 0x65, 0x74, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x65,
	0x74, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x22, 0x6d,
	0x0a, 0x0d, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x77, 0x61, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x77, 0x61, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x6f, 0x6e,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x64, 0x6f, 0x6e, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x22, 0x4c, 0x0a,
	0x0c, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x57, 0x6f, 0x72, 0x6b, 0x12, 0x14, 0x0a,
	0x05, 0x6a, 0x6f, 0x62, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6a, 0x6f,
	0x62, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x68, 0x6f, 0x70, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x68, 0x6f, 0x70, 0x22, 0xbf, 0x01, 0x0a, 0x10,
	0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x16, 0x0a, 0x06,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x12, 0x2b, 0x0a, 0x04, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x44,
	0x65, 0x74, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x57, 0x6f, 0x72, 0x6b, 0x52, 0x04, 0x77, 0x6f, 0x72,
	0x6b, 0x12, 0x2e, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x44, 0x65, 0x74,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x08, 0x74, 0x65, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x22, 0xba, 0x01,
	0x0a, 0x12, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x53, 0x65, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x12, 0x22, 0x0a, 0x0c, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14,
	0x0a, 0x05, 0x70, 0x61, 0x72, 0x73, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x70,
	0x61, 0x72, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x44, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x44, 0x32, 0xca, 0x05, 0x0a, 0x06, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x72, 0x12, 0x36, 0x0a, 0x04, 0x50, 0x69, 0x6e, 0x67, 0x12, 0x16, 0x2e,
	0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56,
	0x33, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x42, 0x0a,
	0x15, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x57, 0x69, 0x74, 0x68,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x72, 0x12, 0x12, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73,
	0x56, 0x33, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x1a, 0x13, 0x2e, 0x63, 0x65, 0x72,
	0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x49, 0x44, 0x53, 0x22,
	0x00, 0x12, 0x51, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65,
	0x64, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x69, 0x65, 0x73, 0x42, 0x79, 0x53, 0x68, 0x6f, 0x70,
	0x12, 0x18, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x42, 0x79, 0x53, 0x68, 0x6f, 0x70, 0x1a, 0x16, 0x2e, 0x63, 0x65, 0x72,
	0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x4c, 0x69,
	0x73, 0x74, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x0b, 0x53, 0x65, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65,
	0x4a, 0x6f, 0x62, 0x12, 0x14, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e,
	0x51, 0x75, 0x65, 0x75, 0x65, 0x72, 0x4a, 0x6f, 0x62, 0x1a, 0x16, 0x2e, 0x63, 0x65, 0x72, 0x61,
	0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x50, 0x61, 0x72, 0x73, 0x65, 0x72,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x1b, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33,
	0x2e, 0x50, 0x61, 0x72, 0x73, 0x65, 0x72, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x14, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x50, 0x61,
	0x72, 0x73, 0x65, 0x72, 0x4a, 0x6f, 0x62, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x0d, 0x53, 0x65, 0x74,
	0x50, 0x61, 0x72, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1b, 0x2e, 0x63, 0x65, 0x72,
	0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x50, 0x61, 0x72, 0x73, 0x65, 0x72, 0x53, 0x65, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75,
	0x73, 0x56, 0x33, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x00, 0x12, 0x4f, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x1d, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33,
	0x2e, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e,
	0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x00, 0x12, 0x4a, 0x0a, 0x0f, 0x53, 0x65, 0x74, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1d, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56,
	0x33, 0x2e, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x53, 0x65, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x3f,
	0x0a, 0x0d, 0x47, 0x65, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x0f, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x41, 0x75, 0x74, 0x68,
	0x1a, 0x1b, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x50, 0x72, 0x69, 0x63, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x00, 0x12,
	0x46, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x1c, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15,
	0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x72, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x00, 0x42, 0x23, 0x5a, 0x21, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x6e, 0x73, 0x61, 0x6e, 0x79, 0x63, 0x68, 0x2f, 0x63,
	0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pricerV3_proto_rawDescOnce sync.Once
	file_pricerV3_proto_rawDescData = file_pricerV3_proto_rawDesc
)

func file_pricerV3_proto_rawDescGZIP() []byte {
	file_pricerV3_proto_rawDescOnce.Do(func() {
		file_pricerV3_proto_rawDescData = protoimpl.X.CompressGZIP(file_pricerV3_proto_rawDescData)
	})
	return file_pricerV3_proto_rawDescData
}

var file_pricerV3_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_pricerV3_proto_goTypes = []interface{}{
	(*PricerListRequest)(nil),  // 0: cerasusV3.PricerListRequest
	(*PricerListItemShop)(nil), // 1: cerasusV3.PricerListItemShop
	(*PricerListItem)(nil),     // 2: cerasusV3.PricerListItem
	(*PricerList)(nil),         // 3: cerasusV3.PricerList
	(*UserPricerParam)(nil),    // 4: cerasusV3.UserPricerParam
	(*UserPricerParams)(nil),   // 5: cerasusV3.UserPricerParams
	(*ParserGetRequest)(nil),   // 6: cerasusV3.ParserGetRequest
	(*ParserJob)(nil),          // 7: cerasusV3.ParserJob
	(*ParserSetRequest)(nil),   // 8: cerasusV3.ParserSetRequest
	(*DetectorGetRequest)(nil), // 9: cerasusV3.DetectorGetRequest
	(*DetectorCount)(nil),      // 10: cerasusV3.DetectorCount
	(*DetectorWork)(nil),       // 11: cerasusV3.DetectorWork
	(*DetectorGetReply)(nil),   // 12: cerasusV3.DetectorGetReply
	(*DetectorSetRequest)(nil), // 13: cerasusV3.DetectorSetRequest
	(*Auth)(nil),               // 14: cerasusV3.Auth
	(*Product)(nil),            // 15: cerasusV3.Product
	(*PingRequest)(nil),        // 16: cerasusV3.PingRequest
	(*Company)(nil),            // 17: cerasusV3.Company
	(*RequestByShop)(nil),      // 18: cerasusV3.RequestByShop
	(*QueuerJob)(nil),          // 19: cerasusV3.QueuerJob
	(*PingReply)(nil),          // 20: cerasusV3.PingReply
	(*ReplyIDS)(nil),           // 21: cerasusV3.ReplyIDS
	(*CompanyList)(nil),        // 22: cerasusV3.CompanyList
	(*StatusReply)(nil),        // 23: cerasusV3.StatusReply
}
var file_pricerV3_proto_depIdxs = []int32{
	14, // 0: cerasusV3.PricerListRequest.auth:type_name -> cerasusV3.Auth
	15, // 1: cerasusV3.PricerListItem.product:type_name -> cerasusV3.Product
	1,  // 2: cerasusV3.PricerListItem.shops:type_name -> cerasusV3.PricerListItemShop
	2,  // 3: cerasusV3.PricerList.data:type_name -> cerasusV3.PricerListItem
	4,  // 4: cerasusV3.UserPricerParams.data:type_name -> cerasusV3.UserPricerParam
	11, // 5: cerasusV3.DetectorGetReply.work:type_name -> cerasusV3.DetectorWork
	10, // 6: cerasusV3.DetectorGetReply.count:type_name -> cerasusV3.DetectorCount
	16, // 7: cerasusV3.Pricer.Ping:input_type -> cerasusV3.PingRequest
	17, // 8: cerasusV3.Pricer.GetProductsWithPricer:input_type -> cerasusV3.Company
	18, // 9: cerasusV3.Pricer.GetConnectedCompaniesByShop:input_type -> cerasusV3.RequestByShop
	19, // 10: cerasusV3.Pricer.SetQueueJob:input_type -> cerasusV3.QueuerJob
	6,  // 11: cerasusV3.Pricer.GetParserData:input_type -> cerasusV3.ParserGetRequest
	8,  // 12: cerasusV3.Pricer.SetParserData:input_type -> cerasusV3.ParserSetRequest
	9,  // 13: cerasusV3.Pricer.GetDetectorData:input_type -> cerasusV3.DetectorGetRequest
	13, // 14: cerasusV3.Pricer.SetDetectorData:input_type -> cerasusV3.DetectorSetRequest
	14, // 15: cerasusV3.Pricer.GetPricerData:input_type -> cerasusV3.Auth
	0,  // 16: cerasusV3.Pricer.GetPricerList:input_type -> cerasusV3.PricerListRequest
	20, // 17: cerasusV3.Pricer.Ping:output_type -> cerasusV3.PingReply
	21, // 18: cerasusV3.Pricer.GetProductsWithPricer:output_type -> cerasusV3.ReplyIDS
	22, // 19: cerasusV3.Pricer.GetConnectedCompaniesByShop:output_type -> cerasusV3.CompanyList
	23, // 20: cerasusV3.Pricer.SetQueueJob:output_type -> cerasusV3.StatusReply
	7,  // 21: cerasusV3.Pricer.GetParserData:output_type -> cerasusV3.ParserJob
	23, // 22: cerasusV3.Pricer.SetParserData:output_type -> cerasusV3.StatusReply
	12, // 23: cerasusV3.Pricer.GetDetectorData:output_type -> cerasusV3.DetectorGetReply
	23, // 24: cerasusV3.Pricer.SetDetectorData:output_type -> cerasusV3.StatusReply
	5,  // 25: cerasusV3.Pricer.GetPricerData:output_type -> cerasusV3.UserPricerParams
	3,  // 26: cerasusV3.Pricer.GetPricerList:output_type -> cerasusV3.PricerList
	17, // [17:27] is the sub-list for method output_type
	7,  // [7:17] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_pricerV3_proto_init() }
func file_pricerV3_proto_init() {
	if File_pricerV3_proto != nil {
		return
	}
	file_cerasusV3_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_pricerV3_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PricerListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pricerV3_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PricerListItemShop); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pricerV3_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PricerListItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pricerV3_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PricerList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pricerV3_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserPricerParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pricerV3_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserPricerParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pricerV3_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParserGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pricerV3_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParserJob); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pricerV3_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParserSetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pricerV3_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DetectorGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pricerV3_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DetectorCount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pricerV3_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DetectorWork); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pricerV3_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DetectorGetReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pricerV3_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DetectorSetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pricerV3_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pricerV3_proto_goTypes,
		DependencyIndexes: file_pricerV3_proto_depIdxs,
		MessageInfos:      file_pricerV3_proto_msgTypes,
	}.Build()
	File_pricerV3_proto = out.File
	file_pricerV3_proto_rawDesc = nil
	file_pricerV3_proto_goTypes = nil
	file_pricerV3_proto_depIdxs = nil
}
