// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.12.4
// source: pricerV3.proto

package cerasus_proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ParserGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Parser string `protobuf:"bytes,1,opt,name=parser,proto3" json:"parser,omitempty"`
}

func (x *ParserGetRequest) Reset() {
	*x = ParserGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pricerV3_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParserGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParserGetRequest) ProtoMessage() {}

func (x *ParserGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pricerV3_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParserGetRequest.ProtoReflect.Descriptor instead.
func (*ParserGetRequest) Descriptor() ([]byte, []int) {
	return file_pricerV3_proto_rawDescGZIP(), []int{0}
}

func (x *ParserGetRequest) GetParser() string {
	if x != nil {
		return x.Parser
	}
	return ""
}

type ParserJob struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Parser      string `protobuf:"bytes,1,opt,name=parser,proto3" json:"parser,omitempty"`
	QueueDataID int64  `protobuf:"varint,2,opt,name=queueDataID,proto3" json:"queueDataID,omitempty"`
	Url         string `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
	Client      string `protobuf:"bytes,4,opt,name=client,proto3" json:"client,omitempty"`
}

func (x *ParserJob) Reset() {
	*x = ParserJob{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pricerV3_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParserJob) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParserJob) ProtoMessage() {}

func (x *ParserJob) ProtoReflect() protoreflect.Message {
	mi := &file_pricerV3_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParserJob.ProtoReflect.Descriptor instead.
func (*ParserJob) Descriptor() ([]byte, []int) {
	return file_pricerV3_proto_rawDescGZIP(), []int{1}
}

func (x *ParserJob) GetParser() string {
	if x != nil {
		return x.Parser
	}
	return ""
}

func (x *ParserJob) GetQueueDataID() int64 {
	if x != nil {
		return x.QueueDataID
	}
	return 0
}

func (x *ParserJob) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *ParserJob) GetClient() string {
	if x != nil {
		return x.Client
	}
	return ""
}

type ParserSetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Parser      string `protobuf:"bytes,1,opt,name=parser,proto3" json:"parser,omitempty"`
	QueueDataID int64  `protobuf:"varint,2,opt,name=queueDataID,proto3" json:"queueDataID,omitempty"`
	File        []byte `protobuf:"bytes,3,opt,name=file,proto3" json:"file,omitempty"`
}

func (x *ParserSetRequest) Reset() {
	*x = ParserSetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pricerV3_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParserSetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParserSetRequest) ProtoMessage() {}

func (x *ParserSetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pricerV3_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParserSetRequest.ProtoReflect.Descriptor instead.
func (*ParserSetRequest) Descriptor() ([]byte, []int) {
	return file_pricerV3_proto_rawDescGZIP(), []int{2}
}

func (x *ParserSetRequest) GetParser() string {
	if x != nil {
		return x.Parser
	}
	return ""
}

func (x *ParserSetRequest) GetQueueDataID() int64 {
	if x != nil {
		return x.QueueDataID
	}
	return 0
}

func (x *ParserSetRequest) GetFile() []byte {
	if x != nil {
		return x.File
	}
	return nil
}

type DetectorGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Detector string `protobuf:"bytes,1,opt,name=detector,proto3" json:"detector,omitempty"`
	GetGob   bool   `protobuf:"varint,2,opt,name=getGob,proto3" json:"getGob,omitempty"`
}

func (x *DetectorGetRequest) Reset() {
	*x = DetectorGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pricerV3_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DetectorGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetectorGetRequest) ProtoMessage() {}

func (x *DetectorGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pricerV3_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetectorGetRequest.ProtoReflect.Descriptor instead.
func (*DetectorGetRequest) Descriptor() ([]byte, []int) {
	return file_pricerV3_proto_rawDescGZIP(), []int{3}
}

func (x *DetectorGetRequest) GetDetector() string {
	if x != nil {
		return x.Detector
	}
	return ""
}

func (x *DetectorGetRequest) GetGetGob() bool {
	if x != nil {
		return x.GetGob
	}
	return false
}

type DetectorCount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Waiting int32 `protobuf:"varint,1,opt,name=waiting,proto3" json:"waiting,omitempty"`
	Done    int32 `protobuf:"varint,2,opt,name=done,proto3" json:"done,omitempty"`
	Error   int32 `protobuf:"varint,3,opt,name=error,proto3" json:"error,omitempty"`
	Unknown int32 `protobuf:"varint,4,opt,name=unknown,proto3" json:"unknown,omitempty"`
}

func (x *DetectorCount) Reset() {
	*x = DetectorCount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pricerV3_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DetectorCount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetectorCount) ProtoMessage() {}

func (x *DetectorCount) ProtoReflect() protoreflect.Message {
	mi := &file_pricerV3_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetectorCount.ProtoReflect.Descriptor instead.
func (*DetectorCount) Descriptor() ([]byte, []int) {
	return file_pricerV3_proto_rawDescGZIP(), []int{4}
}

func (x *DetectorCount) GetWaiting() int32 {
	if x != nil {
		return x.Waiting
	}
	return 0
}

func (x *DetectorCount) GetDone() int32 {
	if x != nil {
		return x.Done
	}
	return 0
}

func (x *DetectorCount) GetError() int32 {
	if x != nil {
		return x.Error
	}
	return 0
}

func (x *DetectorCount) GetUnknown() int32 {
	if x != nil {
		return x.Unknown
	}
	return 0
}

type DetectorWork struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobID int64  `protobuf:"varint,1,opt,name=jobID,proto3" json:"jobID,omitempty"`
	File  []byte `protobuf:"bytes,2,opt,name=file,proto3" json:"file,omitempty"`
	Shop  string `protobuf:"bytes,3,opt,name=shop,proto3" json:"shop,omitempty"`
}

func (x *DetectorWork) Reset() {
	*x = DetectorWork{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pricerV3_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DetectorWork) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetectorWork) ProtoMessage() {}

func (x *DetectorWork) ProtoReflect() protoreflect.Message {
	mi := &file_pricerV3_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetectorWork.ProtoReflect.Descriptor instead.
func (*DetectorWork) Descriptor() ([]byte, []int) {
	return file_pricerV3_proto_rawDescGZIP(), []int{5}
}

func (x *DetectorWork) GetJobID() int64 {
	if x != nil {
		return x.JobID
	}
	return 0
}

func (x *DetectorWork) GetFile() []byte {
	if x != nil {
		return x.File
	}
	return nil
}

func (x *DetectorWork) GetShop() string {
	if x != nil {
		return x.Shop
	}
	return ""
}

type DetectorGetReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Detector string           `protobuf:"bytes,1,opt,name=detector,proto3" json:"detector,omitempty"`
	Client   string           `protobuf:"bytes,2,opt,name=client,proto3" json:"client,omitempty"`
	Work     *DetectorWork    `protobuf:"bytes,3,opt,name=work,proto3" json:"work,omitempty"`
	Count    []*DetectorCount `protobuf:"bytes,4,rep,name=count,proto3" json:"count,omitempty"`
	TestMode bool             `protobuf:"varint,5,opt,name=testMode,proto3" json:"testMode,omitempty"`
}

func (x *DetectorGetReply) Reset() {
	*x = DetectorGetReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pricerV3_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DetectorGetReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetectorGetReply) ProtoMessage() {}

func (x *DetectorGetReply) ProtoReflect() protoreflect.Message {
	mi := &file_pricerV3_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetectorGetReply.ProtoReflect.Descriptor instead.
func (*DetectorGetReply) Descriptor() ([]byte, []int) {
	return file_pricerV3_proto_rawDescGZIP(), []int{6}
}

func (x *DetectorGetReply) GetDetector() string {
	if x != nil {
		return x.Detector
	}
	return ""
}

func (x *DetectorGetReply) GetClient() string {
	if x != nil {
		return x.Client
	}
	return ""
}

func (x *DetectorGetReply) GetWork() *DetectorWork {
	if x != nil {
		return x.Work
	}
	return nil
}

func (x *DetectorGetReply) GetCount() []*DetectorCount {
	if x != nil {
		return x.Count
	}
	return nil
}

func (x *DetectorGetReply) GetTestMode() bool {
	if x != nil {
		return x.TestMode
	}
	return false
}

type DetectorSetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Detector string `protobuf:"bytes,1,opt,name=detector,proto3" json:"detector,omitempty"`
	Client   string `protobuf:"bytes,2,opt,name=client,proto3" json:"client,omitempty"`
	JobID    int64  `protobuf:"varint,3,opt,name=jobID,proto3" json:"jobID,omitempty"`
	Value    int32  `protobuf:"varint,4,opt,name=value,proto3" json:"value,omitempty"`
	Error    string `protobuf:"bytes,5,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *DetectorSetRequest) Reset() {
	*x = DetectorSetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pricerV3_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DetectorSetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetectorSetRequest) ProtoMessage() {}

func (x *DetectorSetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pricerV3_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetectorSetRequest.ProtoReflect.Descriptor instead.
func (*DetectorSetRequest) Descriptor() ([]byte, []int) {
	return file_pricerV3_proto_rawDescGZIP(), []int{7}
}

func (x *DetectorSetRequest) GetDetector() string {
	if x != nil {
		return x.Detector
	}
	return ""
}

func (x *DetectorSetRequest) GetClient() string {
	if x != nil {
		return x.Client
	}
	return ""
}

func (x *DetectorSetRequest) GetJobID() int64 {
	if x != nil {
		return x.JobID
	}
	return 0
}

func (x *DetectorSetRequest) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *DetectorSetRequest) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

var File_pricerV3_proto protoreflect.FileDescriptor

var file_pricerV3_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x70, 0x72, 0x69, 0x63, 0x65, 0x72, 0x56, 0x33, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x09, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x1a, 0x0f, 0x63, 0x65, 0x72,
	0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x2a, 0x0a, 0x10,
	0x50, 0x61, 0x72, 0x73, 0x65, 0x72, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x70, 0x61, 0x72, 0x73, 0x65, 0x72, 0x22, 0x6f, 0x0a, 0x09, 0x50, 0x61, 0x72, 0x73,
	0x65, 0x72, 0x4a, 0x6f, 0x62, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x73, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x73, 0x65, 0x72, 0x12, 0x20, 0x0a,
	0x0b, 0x71, 0x75, 0x65, 0x75, 0x65, 0x44, 0x61, 0x74, 0x61, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0b, 0x71, 0x75, 0x65, 0x75, 0x65, 0x44, 0x61, 0x74, 0x61, 0x49, 0x44, 0x12,
	0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72,
	0x6c, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x22, 0x60, 0x0a, 0x10, 0x50, 0x61, 0x72,
	0x73, 0x65, 0x72, 0x53, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x70, 0x61, 0x72, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70,
	0x61, 0x72, 0x73, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x71, 0x75, 0x65, 0x75, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x71, 0x75, 0x65, 0x75,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x22, 0x48, 0x0a, 0x12, 0x44,
	0x65, 0x74, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x16, 0x0a,
	0x06, 0x67, 0x65, 0x74, 0x47, 0x6f, 0x62, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x67,
	0x65, 0x74, 0x47, 0x6f, 0x62, 0x22, 0x6d, 0x0a, 0x0d, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x77, 0x61, 0x69, 0x74, 0x69, 0x6e,
	0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x77, 0x61, 0x69, 0x74, 0x69, 0x6e, 0x67,
	0x12, 0x12, 0x0a, 0x04, 0x64, 0x6f, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x64, 0x6f, 0x6e, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x6e,
	0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x75, 0x6e, 0x6b,
	0x6e, 0x6f, 0x77, 0x6e, 0x22, 0x4c, 0x0a, 0x0c, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x57, 0x6f, 0x72, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x69,
	0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x68, 0x6f, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x68,
	0x6f, 0x70, 0x22, 0xbf, 0x01, 0x0a, 0x10, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x74, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x74, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x2b, 0x0a, 0x04, 0x77,
	0x6f, 0x72, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x65, 0x72, 0x61,
	0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x57, 0x6f,
	0x72, 0x6b, 0x52, 0x04, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x2e, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75,
	0x73, 0x56, 0x33, 0x2e, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x73, 0x74,
	0x4d, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x74, 0x65, 0x73, 0x74,
	0x4d, 0x6f, 0x64, 0x65, 0x22, 0x8a, 0x01, 0x0a, 0x12, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x53, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64,
	0x65, 0x74, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64,
	0x65, 0x74, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x6a, 0x6f, 0x62, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x32, 0xc1, 0x04, 0x0a, 0x06, 0x50, 0x72, 0x69, 0x63, 0x65, 0x72, 0x12, 0x36, 0x0a, 0x04,
	0x50, 0x69, 0x6e, 0x67, 0x12, 0x16, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33,
	0x2e, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x63,
	0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x00, 0x12, 0x42, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x73, 0x57, 0x69, 0x74, 0x68, 0x50, 0x72, 0x69, 0x63, 0x65, 0x72, 0x12, 0x12, 0x2e,
	0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x1a, 0x13, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x49, 0x44, 0x53, 0x22, 0x00, 0x12, 0x51, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x69, 0x65,
	0x73, 0x42, 0x79, 0x53, 0x68, 0x6f, 0x70, 0x12, 0x18, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75,
	0x73, 0x56, 0x33, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x79, 0x53, 0x68, 0x6f,
	0x70, 0x1a, 0x16, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x43, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x0b, 0x53,
	0x65, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x4a, 0x6f, 0x62, 0x12, 0x14, 0x2e, 0x63, 0x65, 0x72,
	0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x72, 0x4a, 0x6f, 0x62,
	0x1a, 0x16, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x0d, 0x47, 0x65,
	0x74, 0x50, 0x61, 0x72, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1b, 0x2e, 0x63, 0x65,
	0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x50, 0x61, 0x72, 0x73, 0x65, 0x72, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73,
	0x75, 0x73, 0x56, 0x33, 0x2e, 0x50, 0x61, 0x72, 0x73, 0x65, 0x72, 0x4a, 0x6f, 0x62, 0x22, 0x00,
	0x12, 0x46, 0x0a, 0x0d, 0x53, 0x65, 0x74, 0x50, 0x61, 0x72, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x1b, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x50, 0x61,
	0x72, 0x73, 0x65, 0x72, 0x53, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16,
	0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x4f, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x44,
	0x65, 0x74, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1d, 0x2e, 0x63, 0x65,
	0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x63, 0x65, 0x72,
	0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x4a, 0x0a, 0x0f, 0x53, 0x65, 0x74,
	0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1d, 0x2e, 0x63,
	0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x53, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x63, 0x65,
	0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x00, 0x42, 0x23, 0x5a, 0x21, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x6e, 0x73, 0x61, 0x6e, 0x79, 0x63, 0x68, 0x2f, 0x63, 0x65, 0x72,
	0x61, 0x73, 0x75, 0x73, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_pricerV3_proto_rawDescOnce sync.Once
	file_pricerV3_proto_rawDescData = file_pricerV3_proto_rawDesc
)

func file_pricerV3_proto_rawDescGZIP() []byte {
	file_pricerV3_proto_rawDescOnce.Do(func() {
		file_pricerV3_proto_rawDescData = protoimpl.X.CompressGZIP(file_pricerV3_proto_rawDescData)
	})
	return file_pricerV3_proto_rawDescData
}

var file_pricerV3_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_pricerV3_proto_goTypes = []interface{}{
	(*ParserGetRequest)(nil),   // 0: cerasusV3.ParserGetRequest
	(*ParserJob)(nil),          // 1: cerasusV3.ParserJob
	(*ParserSetRequest)(nil),   // 2: cerasusV3.ParserSetRequest
	(*DetectorGetRequest)(nil), // 3: cerasusV3.DetectorGetRequest
	(*DetectorCount)(nil),      // 4: cerasusV3.DetectorCount
	(*DetectorWork)(nil),       // 5: cerasusV3.DetectorWork
	(*DetectorGetReply)(nil),   // 6: cerasusV3.DetectorGetReply
	(*DetectorSetRequest)(nil), // 7: cerasusV3.DetectorSetRequest
	(*PingRequest)(nil),        // 8: cerasusV3.PingRequest
	(*Company)(nil),            // 9: cerasusV3.Company
	(*RequestByShop)(nil),      // 10: cerasusV3.RequestByShop
	(*QueuerJob)(nil),          // 11: cerasusV3.QueuerJob
	(*PingReply)(nil),          // 12: cerasusV3.PingReply
	(*ReplyIDS)(nil),           // 13: cerasusV3.ReplyIDS
	(*CompanyList)(nil),        // 14: cerasusV3.CompanyList
	(*StatusReply)(nil),        // 15: cerasusV3.StatusReply
}
var file_pricerV3_proto_depIdxs = []int32{
	5,  // 0: cerasusV3.DetectorGetReply.work:type_name -> cerasusV3.DetectorWork
	4,  // 1: cerasusV3.DetectorGetReply.count:type_name -> cerasusV3.DetectorCount
	8,  // 2: cerasusV3.Pricer.Ping:input_type -> cerasusV3.PingRequest
	9,  // 3: cerasusV3.Pricer.GetProductsWithPricer:input_type -> cerasusV3.Company
	10, // 4: cerasusV3.Pricer.GetConnectedCompaniesByShop:input_type -> cerasusV3.RequestByShop
	11, // 5: cerasusV3.Pricer.SetQueueJob:input_type -> cerasusV3.QueuerJob
	0,  // 6: cerasusV3.Pricer.GetParserData:input_type -> cerasusV3.ParserGetRequest
	2,  // 7: cerasusV3.Pricer.SetParserData:input_type -> cerasusV3.ParserSetRequest
	3,  // 8: cerasusV3.Pricer.GetDetectorData:input_type -> cerasusV3.DetectorGetRequest
	7,  // 9: cerasusV3.Pricer.SetDetectorData:input_type -> cerasusV3.DetectorSetRequest
	12, // 10: cerasusV3.Pricer.Ping:output_type -> cerasusV3.PingReply
	13, // 11: cerasusV3.Pricer.GetProductsWithPricer:output_type -> cerasusV3.ReplyIDS
	14, // 12: cerasusV3.Pricer.GetConnectedCompaniesByShop:output_type -> cerasusV3.CompanyList
	15, // 13: cerasusV3.Pricer.SetQueueJob:output_type -> cerasusV3.StatusReply
	1,  // 14: cerasusV3.Pricer.GetParserData:output_type -> cerasusV3.ParserJob
	15, // 15: cerasusV3.Pricer.SetParserData:output_type -> cerasusV3.StatusReply
	6,  // 16: cerasusV3.Pricer.GetDetectorData:output_type -> cerasusV3.DetectorGetReply
	15, // 17: cerasusV3.Pricer.SetDetectorData:output_type -> cerasusV3.StatusReply
	10, // [10:18] is the sub-list for method output_type
	2,  // [2:10] is the sub-list for method input_type
	2,  // [2:2] is the sub-list for extension type_name
	2,  // [2:2] is the sub-list for extension extendee
	0,  // [0:2] is the sub-list for field type_name
}

func init() { file_pricerV3_proto_init() }
func file_pricerV3_proto_init() {
	if File_pricerV3_proto != nil {
		return
	}
	file_cerasusV3_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_pricerV3_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParserGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pricerV3_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParserJob); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pricerV3_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParserSetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pricerV3_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DetectorGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pricerV3_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DetectorCount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pricerV3_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DetectorWork); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pricerV3_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DetectorGetReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pricerV3_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DetectorSetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pricerV3_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pricerV3_proto_goTypes,
		DependencyIndexes: file_pricerV3_proto_depIdxs,
		MessageInfos:      file_pricerV3_proto_msgTypes,
	}.Build()
	File_pricerV3_proto = out.File
	file_pricerV3_proto_rawDesc = nil
	file_pricerV3_proto_goTypes = nil
	file_pricerV3_proto_depIdxs = nil
}
