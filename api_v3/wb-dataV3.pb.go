// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.12.4
// source: wb-dataV3.proto

package cerasus_proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type WBAuthData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Auth  *Auth  `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"`
	Token string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *WBAuthData) Reset() {
	*x = WBAuthData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wb_dataV3_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WBAuthData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WBAuthData) ProtoMessage() {}

func (x *WBAuthData) ProtoReflect() protoreflect.Message {
	mi := &file_wb_dataV3_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WBAuthData.ProtoReflect.Descriptor instead.
func (*WBAuthData) Descriptor() ([]byte, []int) {
	return file_wb_dataV3_proto_rawDescGZIP(), []int{0}
}

func (x *WBAuthData) GetAuth() *Auth {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *WBAuthData) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type WBApiDateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Auth      *WBAuthData `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"`
	DateFrom  string      `protobuf:"bytes,2,opt,name=dateFrom,proto3" json:"dateFrom,omitempty"`
	CompanyID int64       `protobuf:"varint,3,opt,name=companyID,proto3" json:"companyID,omitempty"`
}

func (x *WBApiDateRequest) Reset() {
	*x = WBApiDateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wb_dataV3_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WBApiDateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WBApiDateRequest) ProtoMessage() {}

func (x *WBApiDateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wb_dataV3_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WBApiDateRequest.ProtoReflect.Descriptor instead.
func (*WBApiDateRequest) Descriptor() ([]byte, []int) {
	return file_wb_dataV3_proto_rawDescGZIP(), []int{1}
}

func (x *WBApiDateRequest) GetAuth() *WBAuthData {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *WBApiDateRequest) GetDateFrom() string {
	if x != nil {
		return x.DateFrom
	}
	return ""
}

func (x *WBApiDateRequest) GetCompanyID() int64 {
	if x != nil {
		return x.CompanyID
	}
	return 0
}

type WBApiStockRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Auth        *WBAuthData `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"`
	WarehouseID []int64     `protobuf:"varint,2,rep,packed,name=warehouseID,proto3" json:"warehouseID,omitempty"`
	Skus        []string    `protobuf:"bytes,3,rep,name=skus,proto3" json:"skus,omitempty"`
}

func (x *WBApiStockRequest) Reset() {
	*x = WBApiStockRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wb_dataV3_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WBApiStockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WBApiStockRequest) ProtoMessage() {}

func (x *WBApiStockRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wb_dataV3_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WBApiStockRequest.ProtoReflect.Descriptor instead.
func (*WBApiStockRequest) Descriptor() ([]byte, []int) {
	return file_wb_dataV3_proto_rawDescGZIP(), []int{2}
}

func (x *WBApiStockRequest) GetAuth() *WBAuthData {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *WBApiStockRequest) GetWarehouseID() []int64 {
	if x != nil {
		return x.WarehouseID
	}
	return nil
}

func (x *WBApiStockRequest) GetSkus() []string {
	if x != nil {
		return x.Skus
	}
	return nil
}

type WBApiOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyID     int64   `protobuf:"varint,1,opt,name=companyID,proto3" json:"companyID,omitempty"`
	Dt            string  `protobuf:"bytes,2,opt,name=dt,proto3" json:"dt,omitempty"`
	Srid          string  `protobuf:"bytes,3,opt,name=srid,proto3" json:"srid,omitempty"`
	NmID          int64   `protobuf:"varint,4,opt,name=nmID,proto3" json:"nmID,omitempty"`
	FinishedPrice float32 `protobuf:"fixed32,5,opt,name=finishedPrice,proto3" json:"finishedPrice,omitempty"`
	IsCancel      bool    `protobuf:"varint,6,opt,name=isCancel,proto3" json:"isCancel,omitempty"`
}

func (x *WBApiOrder) Reset() {
	*x = WBApiOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wb_dataV3_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WBApiOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WBApiOrder) ProtoMessage() {}

func (x *WBApiOrder) ProtoReflect() protoreflect.Message {
	mi := &file_wb_dataV3_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WBApiOrder.ProtoReflect.Descriptor instead.
func (*WBApiOrder) Descriptor() ([]byte, []int) {
	return file_wb_dataV3_proto_rawDescGZIP(), []int{3}
}

func (x *WBApiOrder) GetCompanyID() int64 {
	if x != nil {
		return x.CompanyID
	}
	return 0
}

func (x *WBApiOrder) GetDt() string {
	if x != nil {
		return x.Dt
	}
	return ""
}

func (x *WBApiOrder) GetSrid() string {
	if x != nil {
		return x.Srid
	}
	return ""
}

func (x *WBApiOrder) GetNmID() int64 {
	if x != nil {
		return x.NmID
	}
	return 0
}

func (x *WBApiOrder) GetFinishedPrice() float32 {
	if x != nil {
		return x.FinishedPrice
	}
	return 0
}

func (x *WBApiOrder) GetIsCancel() bool {
	if x != nil {
		return x.IsCancel
	}
	return false
}

type WBApiOrders struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*WBApiOrder `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *WBApiOrders) Reset() {
	*x = WBApiOrders{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wb_dataV3_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WBApiOrders) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WBApiOrders) ProtoMessage() {}

func (x *WBApiOrders) ProtoReflect() protoreflect.Message {
	mi := &file_wb_dataV3_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WBApiOrders.ProtoReflect.Descriptor instead.
func (*WBApiOrders) Descriptor() ([]byte, []int) {
	return file_wb_dataV3_proto_rawDescGZIP(), []int{4}
}

func (x *WBApiOrders) GetData() []*WBApiOrder {
	if x != nil {
		return x.Data
	}
	return nil
}

type WBApiSale struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyID     int64   `protobuf:"varint,1,opt,name=companyID,proto3" json:"companyID,omitempty"`
	Dt            string  `protobuf:"bytes,2,opt,name=dt,proto3" json:"dt,omitempty"`
	Srid          string  `protobuf:"bytes,3,opt,name=srid,proto3" json:"srid,omitempty"`
	NmID          int64   `protobuf:"varint,4,opt,name=nmID,proto3" json:"nmID,omitempty"`
	FinishedPrice float32 `protobuf:"fixed32,5,opt,name=finishedPrice,proto3" json:"finishedPrice,omitempty"`
	ForPay        float32 `protobuf:"fixed32,6,opt,name=forPay,proto3" json:"forPay,omitempty"`
	SaleID        string  `protobuf:"bytes,7,opt,name=saleID,proto3" json:"saleID,omitempty"`
}

func (x *WBApiSale) Reset() {
	*x = WBApiSale{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wb_dataV3_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WBApiSale) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WBApiSale) ProtoMessage() {}

func (x *WBApiSale) ProtoReflect() protoreflect.Message {
	mi := &file_wb_dataV3_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WBApiSale.ProtoReflect.Descriptor instead.
func (*WBApiSale) Descriptor() ([]byte, []int) {
	return file_wb_dataV3_proto_rawDescGZIP(), []int{5}
}

func (x *WBApiSale) GetCompanyID() int64 {
	if x != nil {
		return x.CompanyID
	}
	return 0
}

func (x *WBApiSale) GetDt() string {
	if x != nil {
		return x.Dt
	}
	return ""
}

func (x *WBApiSale) GetSrid() string {
	if x != nil {
		return x.Srid
	}
	return ""
}

func (x *WBApiSale) GetNmID() int64 {
	if x != nil {
		return x.NmID
	}
	return 0
}

func (x *WBApiSale) GetFinishedPrice() float32 {
	if x != nil {
		return x.FinishedPrice
	}
	return 0
}

func (x *WBApiSale) GetForPay() float32 {
	if x != nil {
		return x.ForPay
	}
	return 0
}

func (x *WBApiSale) GetSaleID() string {
	if x != nil {
		return x.SaleID
	}
	return ""
}

type WBApiSales struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*WBApiSale `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *WBApiSales) Reset() {
	*x = WBApiSales{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wb_dataV3_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WBApiSales) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WBApiSales) ProtoMessage() {}

func (x *WBApiSales) ProtoReflect() protoreflect.Message {
	mi := &file_wb_dataV3_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WBApiSales.ProtoReflect.Descriptor instead.
func (*WBApiSales) Descriptor() ([]byte, []int) {
	return file_wb_dataV3_proto_rawDescGZIP(), []int{6}
}

func (x *WBApiSales) GetData() []*WBApiSale {
	if x != nil {
		return x.Data
	}
	return nil
}

type WBApiProductSize struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChrtID   int64    `protobuf:"varint,1,opt,name=chrtID,proto3" json:"chrtID,omitempty"`
	TechSize string   `protobuf:"bytes,2,opt,name=techSize,proto3" json:"techSize,omitempty"`
	WbSize   string   `protobuf:"bytes,3,opt,name=wbSize,proto3" json:"wbSize,omitempty"`
	Skus     []string `protobuf:"bytes,4,rep,name=skus,proto3" json:"skus,omitempty"`
}

func (x *WBApiProductSize) Reset() {
	*x = WBApiProductSize{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wb_dataV3_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WBApiProductSize) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WBApiProductSize) ProtoMessage() {}

func (x *WBApiProductSize) ProtoReflect() protoreflect.Message {
	mi := &file_wb_dataV3_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WBApiProductSize.ProtoReflect.Descriptor instead.
func (*WBApiProductSize) Descriptor() ([]byte, []int) {
	return file_wb_dataV3_proto_rawDescGZIP(), []int{7}
}

func (x *WBApiProductSize) GetChrtID() int64 {
	if x != nil {
		return x.ChrtID
	}
	return 0
}

func (x *WBApiProductSize) GetTechSize() string {
	if x != nil {
		return x.TechSize
	}
	return ""
}

func (x *WBApiProductSize) GetWbSize() string {
	if x != nil {
		return x.WbSize
	}
	return ""
}

func (x *WBApiProductSize) GetSkus() []string {
	if x != nil {
		return x.Skus
	}
	return nil
}

type WBApiProduct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanyID int64               `protobuf:"varint,1,opt,name=companyID,proto3" json:"companyID,omitempty"`
	NmID      int64               `protobuf:"varint,2,opt,name=nmID,proto3" json:"nmID,omitempty"`
	Name      string              `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Article   string              `protobuf:"bytes,4,opt,name=article,proto3" json:"article,omitempty"`
	Size      []*WBApiProductSize `protobuf:"bytes,5,rep,name=size,proto3" json:"size,omitempty"`
	File      []string            `protobuf:"bytes,6,rep,name=file,proto3" json:"file,omitempty"`
	Sku       []string            `protobuf:"bytes,7,rep,name=sku,proto3" json:"sku,omitempty"`
	Active    bool                `protobuf:"varint,8,opt,name=active,proto3" json:"active,omitempty"`
}

func (x *WBApiProduct) Reset() {
	*x = WBApiProduct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wb_dataV3_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WBApiProduct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WBApiProduct) ProtoMessage() {}

func (x *WBApiProduct) ProtoReflect() protoreflect.Message {
	mi := &file_wb_dataV3_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WBApiProduct.ProtoReflect.Descriptor instead.
func (*WBApiProduct) Descriptor() ([]byte, []int) {
	return file_wb_dataV3_proto_rawDescGZIP(), []int{8}
}

func (x *WBApiProduct) GetCompanyID() int64 {
	if x != nil {
		return x.CompanyID
	}
	return 0
}

func (x *WBApiProduct) GetNmID() int64 {
	if x != nil {
		return x.NmID
	}
	return 0
}

func (x *WBApiProduct) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *WBApiProduct) GetArticle() string {
	if x != nil {
		return x.Article
	}
	return ""
}

func (x *WBApiProduct) GetSize() []*WBApiProductSize {
	if x != nil {
		return x.Size
	}
	return nil
}

func (x *WBApiProduct) GetFile() []string {
	if x != nil {
		return x.File
	}
	return nil
}

func (x *WBApiProduct) GetSku() []string {
	if x != nil {
		return x.Sku
	}
	return nil
}

func (x *WBApiProduct) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

type WBApiProducts struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*WBApiProduct `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *WBApiProducts) Reset() {
	*x = WBApiProducts{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wb_dataV3_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WBApiProducts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WBApiProducts) ProtoMessage() {}

func (x *WBApiProducts) ProtoReflect() protoreflect.Message {
	mi := &file_wb_dataV3_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WBApiProducts.ProtoReflect.Descriptor instead.
func (*WBApiProducts) Descriptor() ([]byte, []int) {
	return file_wb_dataV3_proto_rawDescGZIP(), []int{9}
}

func (x *WBApiProducts) GetData() []*WBApiProduct {
	if x != nil {
		return x.Data
	}
	return nil
}

type WBApiStockItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sku           string `protobuf:"bytes,1,opt,name=sku,proto3" json:"sku,omitempty"`
	Count         int32  `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	WarehouseID   int64  `protobuf:"varint,3,opt,name=warehouseID,proto3" json:"warehouseID,omitempty"`
	WarehouseType string `protobuf:"bytes,4,opt,name=warehouseType,proto3" json:"warehouseType,omitempty"`
}

func (x *WBApiStockItem) Reset() {
	*x = WBApiStockItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wb_dataV3_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WBApiStockItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WBApiStockItem) ProtoMessage() {}

func (x *WBApiStockItem) ProtoReflect() protoreflect.Message {
	mi := &file_wb_dataV3_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WBApiStockItem.ProtoReflect.Descriptor instead.
func (*WBApiStockItem) Descriptor() ([]byte, []int) {
	return file_wb_dataV3_proto_rawDescGZIP(), []int{10}
}

func (x *WBApiStockItem) GetSku() string {
	if x != nil {
		return x.Sku
	}
	return ""
}

func (x *WBApiStockItem) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *WBApiStockItem) GetWarehouseID() int64 {
	if x != nil {
		return x.WarehouseID
	}
	return 0
}

func (x *WBApiStockItem) GetWarehouseType() string {
	if x != nil {
		return x.WarehouseType
	}
	return ""
}

type WBApiStockData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*WBApiStockItem `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *WBApiStockData) Reset() {
	*x = WBApiStockData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wb_dataV3_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WBApiStockData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WBApiStockData) ProtoMessage() {}

func (x *WBApiStockData) ProtoReflect() protoreflect.Message {
	mi := &file_wb_dataV3_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WBApiStockData.ProtoReflect.Descriptor instead.
func (*WBApiStockData) Descriptor() ([]byte, []int) {
	return file_wb_dataV3_proto_rawDescGZIP(), []int{11}
}

func (x *WBApiStockData) GetData() []*WBApiStockItem {
	if x != nil {
		return x.Data
	}
	return nil
}

type WBApiReportRow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReportID         int64   `protobuf:"varint,1,opt,name=reportID,proto3" json:"reportID,omitempty"`
	DateFrom         string  `protobuf:"bytes,2,opt,name=dateFrom,proto3" json:"dateFrom,omitempty"`
	DateTo           string  `protobuf:"bytes,3,opt,name=dateTo,proto3" json:"dateTo,omitempty"`
	Srid             string  `protobuf:"bytes,4,opt,name=srid,proto3" json:"srid,omitempty"`
	SaleDT           string  `protobuf:"bytes,5,opt,name=saleDT,proto3" json:"saleDT,omitempty"`
	NmID             int64   `protobuf:"varint,6,opt,name=nmID,proto3" json:"nmID,omitempty"`
	SupplierOperName string  `protobuf:"bytes,7,opt,name=supplierOperName,proto3" json:"supplierOperName,omitempty"`
	Price            float32 `protobuf:"fixed32,8,opt,name=price,proto3" json:"price,omitempty"`
	ForPay           float32 `protobuf:"fixed32,9,opt,name=forPay,proto3" json:"forPay,omitempty"`
	RowNumber        int64   `protobuf:"varint,10,opt,name=rowNumber,proto3" json:"rowNumber,omitempty"`
}

func (x *WBApiReportRow) Reset() {
	*x = WBApiReportRow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wb_dataV3_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WBApiReportRow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WBApiReportRow) ProtoMessage() {}

func (x *WBApiReportRow) ProtoReflect() protoreflect.Message {
	mi := &file_wb_dataV3_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WBApiReportRow.ProtoReflect.Descriptor instead.
func (*WBApiReportRow) Descriptor() ([]byte, []int) {
	return file_wb_dataV3_proto_rawDescGZIP(), []int{12}
}

func (x *WBApiReportRow) GetReportID() int64 {
	if x != nil {
		return x.ReportID
	}
	return 0
}

func (x *WBApiReportRow) GetDateFrom() string {
	if x != nil {
		return x.DateFrom
	}
	return ""
}

func (x *WBApiReportRow) GetDateTo() string {
	if x != nil {
		return x.DateTo
	}
	return ""
}

func (x *WBApiReportRow) GetSrid() string {
	if x != nil {
		return x.Srid
	}
	return ""
}

func (x *WBApiReportRow) GetSaleDT() string {
	if x != nil {
		return x.SaleDT
	}
	return ""
}

func (x *WBApiReportRow) GetNmID() int64 {
	if x != nil {
		return x.NmID
	}
	return 0
}

func (x *WBApiReportRow) GetSupplierOperName() string {
	if x != nil {
		return x.SupplierOperName
	}
	return ""
}

func (x *WBApiReportRow) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *WBApiReportRow) GetForPay() float32 {
	if x != nil {
		return x.ForPay
	}
	return 0
}

func (x *WBApiReportRow) GetRowNumber() int64 {
	if x != nil {
		return x.RowNumber
	}
	return 0
}

type WBApiReportData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*WBApiReportRow `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *WBApiReportData) Reset() {
	*x = WBApiReportData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wb_dataV3_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WBApiReportData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WBApiReportData) ProtoMessage() {}

func (x *WBApiReportData) ProtoReflect() protoreflect.Message {
	mi := &file_wb_dataV3_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WBApiReportData.ProtoReflect.Descriptor instead.
func (*WBApiReportData) Descriptor() ([]byte, []int) {
	return file_wb_dataV3_proto_rawDescGZIP(), []int{13}
}

func (x *WBApiReportData) GetData() []*WBApiReportRow {
	if x != nil {
		return x.Data
	}
	return nil
}

type WBApiPricesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Auth *WBAuthData `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"`
	NmID []int64     `protobuf:"varint,2,rep,packed,name=nmID,proto3" json:"nmID,omitempty"`
}

func (x *WBApiPricesRequest) Reset() {
	*x = WBApiPricesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wb_dataV3_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WBApiPricesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WBApiPricesRequest) ProtoMessage() {}

func (x *WBApiPricesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wb_dataV3_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WBApiPricesRequest.ProtoReflect.Descriptor instead.
func (*WBApiPricesRequest) Descriptor() ([]byte, []int) {
	return file_wb_dataV3_proto_rawDescGZIP(), []int{14}
}

func (x *WBApiPricesRequest) GetAuth() *WBAuthData {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *WBApiPricesRequest) GetNmID() []int64 {
	if x != nil {
		return x.NmID
	}
	return nil
}

type WBApiPriceItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NmID  int64   `protobuf:"varint,1,opt,name=nmID,proto3" json:"nmID,omitempty"`
	Price float32 `protobuf:"fixed32,2,opt,name=price,proto3" json:"price,omitempty"`
}

func (x *WBApiPriceItem) Reset() {
	*x = WBApiPriceItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wb_dataV3_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WBApiPriceItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WBApiPriceItem) ProtoMessage() {}

func (x *WBApiPriceItem) ProtoReflect() protoreflect.Message {
	mi := &file_wb_dataV3_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WBApiPriceItem.ProtoReflect.Descriptor instead.
func (*WBApiPriceItem) Descriptor() ([]byte, []int) {
	return file_wb_dataV3_proto_rawDescGZIP(), []int{15}
}

func (x *WBApiPriceItem) GetNmID() int64 {
	if x != nil {
		return x.NmID
	}
	return 0
}

func (x *WBApiPriceItem) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

type WBApiPriceData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*WBApiPriceItem `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *WBApiPriceData) Reset() {
	*x = WBApiPriceData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wb_dataV3_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WBApiPriceData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WBApiPriceData) ProtoMessage() {}

func (x *WBApiPriceData) ProtoReflect() protoreflect.Message {
	mi := &file_wb_dataV3_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WBApiPriceData.ProtoReflect.Descriptor instead.
func (*WBApiPriceData) Descriptor() ([]byte, []int) {
	return file_wb_dataV3_proto_rawDescGZIP(), []int{16}
}

func (x *WBApiPriceData) GetData() []*WBApiPriceItem {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_wb_dataV3_proto protoreflect.FileDescriptor

var file_wb_dataV3_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x77, 0x62, 0x2d, 0x64, 0x61, 0x74, 0x61, 0x56, 0x33, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x09, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x1a, 0x0f, 0x63, 0x65,
	0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x47, 0x0a,
	0x0a, 0x57, 0x42, 0x41, 0x75, 0x74, 0x68, 0x44, 0x61, 0x74, 0x61, 0x12, 0x23, 0x0a, 0x04, 0x61,
	0x75, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x65, 0x72, 0x61,
	0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x77, 0x0a, 0x10, 0x57, 0x42, 0x41, 0x70, 0x69, 0x44,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x04, 0x61, 0x75,
	0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73,
	0x75, 0x73, 0x56, 0x33, 0x2e, 0x57, 0x42, 0x41, 0x75, 0x74, 0x68, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x04, 0x61, 0x75, 0x74, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x65, 0x46, 0x72, 0x6f,
	0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x65, 0x46, 0x72, 0x6f,
	0x6d, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x22,
	0x74, 0x0a, 0x11, 0x57, 0x42, 0x41, 0x70, 0x69, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x57,
	0x42, 0x41, 0x75, 0x74, 0x68, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x12,
	0x20, 0x0a, 0x0b, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x49, 0x44, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x03, 0x52, 0x0b, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x49,
	0x44, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6b, 0x75, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x04, 0x73, 0x6b, 0x75, 0x73, 0x22, 0xa4, 0x01, 0x0a, 0x0a, 0x57, 0x42, 0x41, 0x70, 0x69, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x49, 0x44, 0x12, 0x0e, 0x0a, 0x02, 0x64, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x64, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x72, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x73, 0x72, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x6d, 0x49, 0x44, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x6e, 0x6d, 0x49, 0x44, 0x12, 0x24, 0x0a, 0x0d, 0x66, 0x69,
	0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x0d, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x22, 0x38, 0x0a, 0x0b,
	0x57, 0x42, 0x41, 0x70, 0x69, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x12, 0x29, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x65, 0x72, 0x61,
	0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x57, 0x42, 0x41, 0x70, 0x69, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xb7, 0x01, 0x0a, 0x09, 0x57, 0x42, 0x41, 0x70, 0x69,
	0x53, 0x61, 0x6c, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x49, 0x44, 0x12, 0x0e, 0x0a, 0x02, 0x64, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x64, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x72, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x73, 0x72, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x6d, 0x49, 0x44, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x6e, 0x6d, 0x49, 0x44, 0x12, 0x24, 0x0a, 0x0d, 0x66, 0x69,
	0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x0d, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x66, 0x6f, 0x72, 0x50, 0x61, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x06, 0x66, 0x6f, 0x72, 0x50, 0x61, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x61, 0x6c, 0x65,
	0x49, 0x44, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x61, 0x6c, 0x65, 0x49, 0x44,
	0x22, 0x36, 0x0a, 0x0a, 0x57, 0x42, 0x41, 0x70, 0x69, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x12, 0x28,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63,
	0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x57, 0x42, 0x41, 0x70, 0x69, 0x53, 0x61,
	0x6c, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x72, 0x0a, 0x10, 0x57, 0x42, 0x41, 0x70,
	0x69, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x63, 0x68, 0x72, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x63, 0x68,
	0x72, 0x74, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x63, 0x68, 0x53, 0x69, 0x7a, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x63, 0x68, 0x53, 0x69, 0x7a, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x77, 0x62, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x77, 0x62, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6b, 0x75, 0x73,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x73, 0x6b, 0x75, 0x73, 0x22, 0xdd, 0x01, 0x0a,
	0x0c, 0x57, 0x42, 0x41, 0x70, 0x69, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x6d, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x6e, 0x6d, 0x49, 0x44, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x12, 0x2f, 0x0a,
	0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63, 0x65,
	0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x57, 0x42, 0x41, 0x70, 0x69, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x53, 0x69, 0x7a, 0x65, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x66, 0x69,
	0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x6b, 0x75, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x03, 0x73, 0x6b, 0x75, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x22, 0x3c, 0x0a, 0x0d,
	0x57, 0x42, 0x41, 0x70, 0x69, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x12, 0x2b, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x65,
	0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x57, 0x42, 0x41, 0x70, 0x69, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x80, 0x01, 0x0a, 0x0e, 0x57,
	0x42, 0x41, 0x70, 0x69, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x10, 0x0a,
	0x03, 0x73, 0x6b, 0x75, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x6b, 0x75, 0x12,
	0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75,
	0x73, 0x65, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x77, 0x61, 0x72, 0x65,
	0x68, 0x6f, 0x75, 0x73, 0x65, 0x49, 0x44, 0x12, 0x24, 0x0a, 0x0d, 0x77, 0x61, 0x72, 0x65, 0x68,
	0x6f, 0x75, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0x3f, 0x0a,
	0x0e, 0x57, 0x42, 0x41, 0x70, 0x69, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x2d, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x57, 0x42, 0x41, 0x70, 0x69, 0x53,
	0x74, 0x6f, 0x63, 0x6b, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x98,
	0x02, 0x0a, 0x0e, 0x57, 0x42, 0x41, 0x70, 0x69, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x6f,
	0x77, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x44, 0x12, 0x1a, 0x0a,
	0x08, 0x64, 0x61, 0x74, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x64, 0x61, 0x74, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61, 0x74,
	0x65, 0x54, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x6f, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x72, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x73, 0x72, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x61, 0x6c, 0x65, 0x44, 0x54, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x61, 0x6c, 0x65, 0x44, 0x54, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x6d, 0x49, 0x44, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x6e, 0x6d, 0x49,
	0x44, 0x12, 0x2a, 0x0a, 0x10, 0x73, 0x75, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x72, 0x4f, 0x70, 0x65,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x73, 0x75, 0x70,
	0x70, 0x6c, 0x69, 0x65, 0x72, 0x4f, 0x70, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x6f, 0x72, 0x50, 0x61, 0x79, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x06, 0x66, 0x6f, 0x72, 0x50, 0x61, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x72,
	0x6f, 0x77, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x72, 0x6f, 0x77, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x40, 0x0a, 0x0f, 0x57, 0x42, 0x41,
	0x70, 0x69, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2d, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x65, 0x72,
	0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x57, 0x42, 0x41, 0x70, 0x69, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x52, 0x6f, 0x77, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x53, 0x0a, 0x12, 0x57,
	0x42, 0x41, 0x70, 0x69, 0x50, 0x72, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x29, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x57, 0x42, 0x41, 0x75,
	0x74, 0x68, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x6d, 0x49, 0x44, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x04, 0x6e, 0x6d, 0x49, 0x44,
	0x22, 0x3a, 0x0a, 0x0e, 0x57, 0x42, 0x41, 0x70, 0x69, 0x50, 0x72, 0x69, 0x63, 0x65, 0x49, 0x74,
	0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x6d, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x04, 0x6e, 0x6d, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x22, 0x3f, 0x0a, 0x0e,
	0x57, 0x42, 0x41, 0x70, 0x69, 0x50, 0x72, 0x69, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2d,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63,
	0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x57, 0x42, 0x41, 0x70, 0x69, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x42, 0x23, 0x5a,
	0x21, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x6e, 0x73, 0x61,
	0x6e, 0x79, 0x63, 0x68, 0x2f, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x2d, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_wb_dataV3_proto_rawDescOnce sync.Once
	file_wb_dataV3_proto_rawDescData = file_wb_dataV3_proto_rawDesc
)

func file_wb_dataV3_proto_rawDescGZIP() []byte {
	file_wb_dataV3_proto_rawDescOnce.Do(func() {
		file_wb_dataV3_proto_rawDescData = protoimpl.X.CompressGZIP(file_wb_dataV3_proto_rawDescData)
	})
	return file_wb_dataV3_proto_rawDescData
}

var file_wb_dataV3_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_wb_dataV3_proto_goTypes = []interface{}{
	(*WBAuthData)(nil),         // 0: cerasusV3.WBAuthData
	(*WBApiDateRequest)(nil),   // 1: cerasusV3.WBApiDateRequest
	(*WBApiStockRequest)(nil),  // 2: cerasusV3.WBApiStockRequest
	(*WBApiOrder)(nil),         // 3: cerasusV3.WBApiOrder
	(*WBApiOrders)(nil),        // 4: cerasusV3.WBApiOrders
	(*WBApiSale)(nil),          // 5: cerasusV3.WBApiSale
	(*WBApiSales)(nil),         // 6: cerasusV3.WBApiSales
	(*WBApiProductSize)(nil),   // 7: cerasusV3.WBApiProductSize
	(*WBApiProduct)(nil),       // 8: cerasusV3.WBApiProduct
	(*WBApiProducts)(nil),      // 9: cerasusV3.WBApiProducts
	(*WBApiStockItem)(nil),     // 10: cerasusV3.WBApiStockItem
	(*WBApiStockData)(nil),     // 11: cerasusV3.WBApiStockData
	(*WBApiReportRow)(nil),     // 12: cerasusV3.WBApiReportRow
	(*WBApiReportData)(nil),    // 13: cerasusV3.WBApiReportData
	(*WBApiPricesRequest)(nil), // 14: cerasusV3.WBApiPricesRequest
	(*WBApiPriceItem)(nil),     // 15: cerasusV3.WBApiPriceItem
	(*WBApiPriceData)(nil),     // 16: cerasusV3.WBApiPriceData
	(*Auth)(nil),               // 17: cerasusV3.Auth
}
var file_wb_dataV3_proto_depIdxs = []int32{
	17, // 0: cerasusV3.WBAuthData.auth:type_name -> cerasusV3.Auth
	0,  // 1: cerasusV3.WBApiDateRequest.auth:type_name -> cerasusV3.WBAuthData
	0,  // 2: cerasusV3.WBApiStockRequest.auth:type_name -> cerasusV3.WBAuthData
	3,  // 3: cerasusV3.WBApiOrders.data:type_name -> cerasusV3.WBApiOrder
	5,  // 4: cerasusV3.WBApiSales.data:type_name -> cerasusV3.WBApiSale
	7,  // 5: cerasusV3.WBApiProduct.size:type_name -> cerasusV3.WBApiProductSize
	8,  // 6: cerasusV3.WBApiProducts.data:type_name -> cerasusV3.WBApiProduct
	10, // 7: cerasusV3.WBApiStockData.data:type_name -> cerasusV3.WBApiStockItem
	12, // 8: cerasusV3.WBApiReportData.data:type_name -> cerasusV3.WBApiReportRow
	0,  // 9: cerasusV3.WBApiPricesRequest.auth:type_name -> cerasusV3.WBAuthData
	15, // 10: cerasusV3.WBApiPriceData.data:type_name -> cerasusV3.WBApiPriceItem
	11, // [11:11] is the sub-list for method output_type
	11, // [11:11] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_wb_dataV3_proto_init() }
func file_wb_dataV3_proto_init() {
	if File_wb_dataV3_proto != nil {
		return
	}
	file_cerasusV3_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_wb_dataV3_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WBAuthData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wb_dataV3_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WBApiDateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wb_dataV3_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WBApiStockRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wb_dataV3_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WBApiOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wb_dataV3_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WBApiOrders); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wb_dataV3_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WBApiSale); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wb_dataV3_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WBApiSales); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wb_dataV3_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WBApiProductSize); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wb_dataV3_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WBApiProduct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wb_dataV3_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WBApiProducts); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wb_dataV3_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WBApiStockItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wb_dataV3_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WBApiStockData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wb_dataV3_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WBApiReportRow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wb_dataV3_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WBApiReportData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wb_dataV3_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WBApiPricesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wb_dataV3_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WBApiPriceItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wb_dataV3_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WBApiPriceData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_wb_dataV3_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_wb_dataV3_proto_goTypes,
		DependencyIndexes: file_wb_dataV3_proto_depIdxs,
		MessageInfos:      file_wb_dataV3_proto_msgTypes,
	}.Build()
	File_wb_dataV3_proto = out.File
	file_wb_dataV3_proto_rawDesc = nil
	file_wb_dataV3_proto_goTypes = nil
	file_wb_dataV3_proto_depIdxs = nil
}
