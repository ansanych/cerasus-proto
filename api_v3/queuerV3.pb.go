// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.12.4
// source: queuerV3.proto

package cerasus_proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RestartQueuesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Service string `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`
}

func (x *RestartQueuesRequest) Reset() {
	*x = RestartQueuesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_queuerV3_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RestartQueuesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestartQueuesRequest) ProtoMessage() {}

func (x *RestartQueuesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_queuerV3_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestartQueuesRequest.ProtoReflect.Descriptor instead.
func (*RestartQueuesRequest) Descriptor() ([]byte, []int) {
	return file_queuerV3_proto_rawDescGZIP(), []int{0}
}

func (x *RestartQueuesRequest) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

type QueueType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID            int64  `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Title         string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Code          string `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`
	Shop          string `protobuf:"bytes,4,opt,name=shop,proto3" json:"shop,omitempty"`
	PeriodRestart int32  `protobuf:"varint,5,opt,name=periodRestart,proto3" json:"periodRestart,omitempty"`
	PeriodReset   int32  `protobuf:"varint,6,opt,name=periodReset,proto3" json:"periodReset,omitempty"`
	Active        bool   `protobuf:"varint,7,opt,name=active,proto3" json:"active,omitempty"`
	InWork        int32  `protobuf:"varint,8,opt,name=inWork,proto3" json:"inWork,omitempty"`
	WithErrors    int32  `protobuf:"varint,9,opt,name=withErrors,proto3" json:"withErrors,omitempty"`
	LongTime      int32  `protobuf:"varint,10,opt,name=longTime,proto3" json:"longTime,omitempty"`
}

func (x *QueueType) Reset() {
	*x = QueueType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_queuerV3_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueueType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueueType) ProtoMessage() {}

func (x *QueueType) ProtoReflect() protoreflect.Message {
	mi := &file_queuerV3_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueueType.ProtoReflect.Descriptor instead.
func (*QueueType) Descriptor() ([]byte, []int) {
	return file_queuerV3_proto_rawDescGZIP(), []int{1}
}

func (x *QueueType) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *QueueType) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *QueueType) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *QueueType) GetShop() string {
	if x != nil {
		return x.Shop
	}
	return ""
}

func (x *QueueType) GetPeriodRestart() int32 {
	if x != nil {
		return x.PeriodRestart
	}
	return 0
}

func (x *QueueType) GetPeriodReset() int32 {
	if x != nil {
		return x.PeriodReset
	}
	return 0
}

func (x *QueueType) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *QueueType) GetInWork() int32 {
	if x != nil {
		return x.InWork
	}
	return 0
}

func (x *QueueType) GetWithErrors() int32 {
	if x != nil {
		return x.WithErrors
	}
	return 0
}

func (x *QueueType) GetLongTime() int32 {
	if x != nil {
		return x.LongTime
	}
	return 0
}

type QueueTypes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*QueueType `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *QueueTypes) Reset() {
	*x = QueueTypes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_queuerV3_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueueTypes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueueTypes) ProtoMessage() {}

func (x *QueueTypes) ProtoReflect() protoreflect.Message {
	mi := &file_queuerV3_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueueTypes.ProtoReflect.Descriptor instead.
func (*QueueTypes) Descriptor() ([]byte, []int) {
	return file_queuerV3_proto_rawDescGZIP(), []int{2}
}

func (x *QueueTypes) GetData() []*QueueType {
	if x != nil {
		return x.Data
	}
	return nil
}

type QueueTypeItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID        int64  `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	CompanyID int64  `protobuf:"varint,2,opt,name=companyID,proto3" json:"companyID,omitempty"`
	Status    int32  `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`
	InWork    bool   `protobuf:"varint,4,opt,name=inWork,proto3" json:"inWork,omitempty"`
	HasError  bool   `protobuf:"varint,5,opt,name=hasError,proto3" json:"hasError,omitempty"`
	Logs      []*Log `protobuf:"bytes,6,rep,name=logs,proto3" json:"logs,omitempty"`
	Created   string `protobuf:"bytes,7,opt,name=created,proto3" json:"created,omitempty"`
	Updated   string `protobuf:"bytes,8,opt,name=updated,proto3" json:"updated,omitempty"`
}

func (x *QueueTypeItem) Reset() {
	*x = QueueTypeItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_queuerV3_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueueTypeItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueueTypeItem) ProtoMessage() {}

func (x *QueueTypeItem) ProtoReflect() protoreflect.Message {
	mi := &file_queuerV3_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueueTypeItem.ProtoReflect.Descriptor instead.
func (*QueueTypeItem) Descriptor() ([]byte, []int) {
	return file_queuerV3_proto_rawDescGZIP(), []int{3}
}

func (x *QueueTypeItem) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *QueueTypeItem) GetCompanyID() int64 {
	if x != nil {
		return x.CompanyID
	}
	return 0
}

func (x *QueueTypeItem) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *QueueTypeItem) GetInWork() bool {
	if x != nil {
		return x.InWork
	}
	return false
}

func (x *QueueTypeItem) GetHasError() bool {
	if x != nil {
		return x.HasError
	}
	return false
}

func (x *QueueTypeItem) GetLogs() []*Log {
	if x != nil {
		return x.Logs
	}
	return nil
}

func (x *QueueTypeItem) GetCreated() string {
	if x != nil {
		return x.Created
	}
	return ""
}

func (x *QueueTypeItem) GetUpdated() string {
	if x != nil {
		return x.Updated
	}
	return ""
}

type QueueTypeList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QueueType *QueueType       `protobuf:"bytes,1,opt,name=queueType,proto3" json:"queueType,omitempty"`
	Items     []*QueueTypeItem `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *QueueTypeList) Reset() {
	*x = QueueTypeList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_queuerV3_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueueTypeList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueueTypeList) ProtoMessage() {}

func (x *QueueTypeList) ProtoReflect() protoreflect.Message {
	mi := &file_queuerV3_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueueTypeList.ProtoReflect.Descriptor instead.
func (*QueueTypeList) Descriptor() ([]byte, []int) {
	return file_queuerV3_proto_rawDescGZIP(), []int{4}
}

func (x *QueueTypeList) GetQueueType() *QueueType {
	if x != nil {
		return x.QueueType
	}
	return nil
}

func (x *QueueTypeList) GetItems() []*QueueTypeItem {
	if x != nil {
		return x.Items
	}
	return nil
}

var File_queuerV3_proto protoreflect.FileDescriptor

var file_queuerV3_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x71, 0x75, 0x65, 0x75, 0x65, 0x72, 0x56, 0x33, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x09, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x1a, 0x0f, 0x63, 0x65, 0x72,
	0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x30, 0x0a, 0x14,
	0x52, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x22, 0x8d,
	0x02, 0x0a, 0x09, 0x51, 0x75, 0x65, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x68, 0x6f, 0x70, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x68, 0x6f, 0x70, 0x12, 0x24, 0x0a, 0x0d, 0x70, 0x65,
	0x72, 0x69, 0x6f, 0x64, 0x52, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0d, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x52, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x12, 0x20, 0x0a, 0x0b, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x52, 0x65, 0x73, 0x65, 0x74, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x52, 0x65, 0x73,
	0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x6e,
	0x57, 0x6f, 0x72, 0x6b, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x69, 0x6e, 0x57, 0x6f,
	0x72, 0x6b, 0x12, 0x1e, 0x0a, 0x0a, 0x77, 0x69, 0x74, 0x68, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x73,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x77, 0x69, 0x74, 0x68, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x6e, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6c, 0x6f, 0x6e, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x36,
	0x0a, 0x0a, 0x51, 0x75, 0x65, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x28, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x65, 0x72,
	0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xe1, 0x01, 0x0a, 0x0d, 0x51, 0x75, 0x65, 0x75, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16,
	0x0a, 0x06, 0x69, 0x6e, 0x57, 0x6f, 0x72, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x69, 0x6e, 0x57, 0x6f, 0x72, 0x6b, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x61, 0x73, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x68, 0x61, 0x73, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x22, 0x0a, 0x04, 0x6c, 0x6f, 0x67, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x4c, 0x6f, 0x67,
	0x52, 0x04, 0x6c, 0x6f, 0x67, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x22, 0x73, 0x0a, 0x0d, 0x51, 0x75,
	0x65, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x09, 0x71,
	0x75, 0x65, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x51, 0x75, 0x65, 0x75, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x71, 0x75, 0x65, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x2e, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x51, 0x75, 0x65, 0x75, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x32,
	0x94, 0x03, 0x0a, 0x06, 0x51, 0x75, 0x65, 0x75, 0x65, 0x72, 0x12, 0x36, 0x0a, 0x04, 0x50, 0x69,
	0x6e, 0x67, 0x12, 0x16, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x50,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x63, 0x65, 0x72,
	0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x00, 0x12, 0x40, 0x0a, 0x0e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x51, 0x75, 0x65, 0x75,
	0x65, 0x4a, 0x6f, 0x62, 0x12, 0x14, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33,
	0x2e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x72, 0x4a, 0x6f, 0x62, 0x1a, 0x16, 0x2e, 0x63, 0x65, 0x72,
	0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x00, 0x12, 0x49, 0x0a, 0x0d, 0x52, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x51,
	0x75, 0x65, 0x75, 0x65, 0x73, 0x12, 0x1f, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56,
	0x33, 0x2e, 0x52, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73,
	0x56, 0x33, 0x2e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x72, 0x4a, 0x6f, 0x62, 0x73, 0x22, 0x00, 0x12,
	0x3a, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x54, 0x79, 0x70, 0x65,
	0x73, 0x12, 0x0f, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x41, 0x75,
	0x74, 0x68, 0x1a, 0x15, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x51,
	0x75, 0x65, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65, 0x73, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x11, 0x47,
	0x65, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x54, 0x79, 0x70, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x16, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x42, 0x79, 0x49, 0x44, 0x1a, 0x18, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73,
	0x75, 0x73, 0x56, 0x33, 0x2e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x0b, 0x52, 0x65, 0x73, 0x65, 0x74, 0x51, 0x75, 0x65,
	0x75, 0x65, 0x73, 0x12, 0x17, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x79, 0x49, 0x44, 0x53, 0x1a, 0x16, 0x2e, 0x63,
	0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x42, 0x23, 0x5a, 0x21, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x6e, 0x73, 0x61, 0x6e, 0x79, 0x63, 0x68, 0x2f, 0x63, 0x65,
	0x72, 0x61, 0x73, 0x75, 0x73, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_queuerV3_proto_rawDescOnce sync.Once
	file_queuerV3_proto_rawDescData = file_queuerV3_proto_rawDesc
)

func file_queuerV3_proto_rawDescGZIP() []byte {
	file_queuerV3_proto_rawDescOnce.Do(func() {
		file_queuerV3_proto_rawDescData = protoimpl.X.CompressGZIP(file_queuerV3_proto_rawDescData)
	})
	return file_queuerV3_proto_rawDescData
}

var file_queuerV3_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_queuerV3_proto_goTypes = []interface{}{
	(*RestartQueuesRequest)(nil), // 0: cerasusV3.RestartQueuesRequest
	(*QueueType)(nil),            // 1: cerasusV3.QueueType
	(*QueueTypes)(nil),           // 2: cerasusV3.QueueTypes
	(*QueueTypeItem)(nil),        // 3: cerasusV3.QueueTypeItem
	(*QueueTypeList)(nil),        // 4: cerasusV3.QueueTypeList
	(*Log)(nil),                  // 5: cerasusV3.Log
	(*PingRequest)(nil),          // 6: cerasusV3.PingRequest
	(*QueuerJob)(nil),            // 7: cerasusV3.QueuerJob
	(*Auth)(nil),                 // 8: cerasusV3.Auth
	(*RequestByID)(nil),          // 9: cerasusV3.RequestByID
	(*RequestByIDS)(nil),         // 10: cerasusV3.RequestByIDS
	(*PingReply)(nil),            // 11: cerasusV3.PingReply
	(*StatusReply)(nil),          // 12: cerasusV3.StatusReply
	(*QueuerJobs)(nil),           // 13: cerasusV3.QueuerJobs
}
var file_queuerV3_proto_depIdxs = []int32{
	1,  // 0: cerasusV3.QueueTypes.data:type_name -> cerasusV3.QueueType
	5,  // 1: cerasusV3.QueueTypeItem.logs:type_name -> cerasusV3.Log
	1,  // 2: cerasusV3.QueueTypeList.queueType:type_name -> cerasusV3.QueueType
	3,  // 3: cerasusV3.QueueTypeList.items:type_name -> cerasusV3.QueueTypeItem
	6,  // 4: cerasusV3.Queuer.Ping:input_type -> cerasusV3.PingRequest
	7,  // 5: cerasusV3.Queuer.ReportQueueJob:input_type -> cerasusV3.QueuerJob
	0,  // 6: cerasusV3.Queuer.RestartQueues:input_type -> cerasusV3.RestartQueuesRequest
	8,  // 7: cerasusV3.Queuer.GetQueuesTypes:input_type -> cerasusV3.Auth
	9,  // 8: cerasusV3.Queuer.GetQueuesTypeList:input_type -> cerasusV3.RequestByID
	10, // 9: cerasusV3.Queuer.ResetQueues:input_type -> cerasusV3.RequestByIDS
	11, // 10: cerasusV3.Queuer.Ping:output_type -> cerasusV3.PingReply
	12, // 11: cerasusV3.Queuer.ReportQueueJob:output_type -> cerasusV3.StatusReply
	13, // 12: cerasusV3.Queuer.RestartQueues:output_type -> cerasusV3.QueuerJobs
	2,  // 13: cerasusV3.Queuer.GetQueuesTypes:output_type -> cerasusV3.QueueTypes
	4,  // 14: cerasusV3.Queuer.GetQueuesTypeList:output_type -> cerasusV3.QueueTypeList
	12, // 15: cerasusV3.Queuer.ResetQueues:output_type -> cerasusV3.StatusReply
	10, // [10:16] is the sub-list for method output_type
	4,  // [4:10] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_queuerV3_proto_init() }
func file_queuerV3_proto_init() {
	if File_queuerV3_proto != nil {
		return
	}
	file_cerasusV3_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_queuerV3_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RestartQueuesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_queuerV3_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueueType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_queuerV3_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueueTypes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_queuerV3_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueueTypeItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_queuerV3_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueueTypeList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_queuerV3_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_queuerV3_proto_goTypes,
		DependencyIndexes: file_queuerV3_proto_depIdxs,
		MessageInfos:      file_queuerV3_proto_msgTypes,
	}.Build()
	File_queuerV3_proto = out.File
	file_queuerV3_proto_rawDesc = nil
	file_queuerV3_proto_goTypes = nil
	file_queuerV3_proto_depIdxs = nil
}
