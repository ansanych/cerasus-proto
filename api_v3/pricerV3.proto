syntax = "proto3";
import "cerasusV3.proto";

package cerasusV3;

option go_package = "github.com/ansanych/cerasus-proto";

service Pricer {
    rpc Ping (PingRequest) returns (PingReply) {}
    rpc GetProductsWithPricer (Company) returns(ReplyIDS) {}
    rpc GetConnectedCompaniesByShop(RequestByShop) returns (CompanyList) {}
    rpc SetQueueJob(QueuerJob) returns (StatusReply) {}
    rpc GetParserData (ParserGetRequest) returns (ParserJob) {}
    rpc SetParserData (ParserSetRequest) returns (StatusReply) {}
    rpc GetDetectorData (DetectorGetRequest) returns (DetectorGetReply) {}
    rpc SetDetectorData (DetectorSetRequest) returns (StatusReply) {}
    rpc GetPricerData (Auth) returns (UserPricerParams) {}
    rpc GetPricerList (PricerListRequest) returns (PricerList) {}
    rpc GetPricerProductData (RequestByID) returns (PricerProductParams) {}
    rpc SetPricerProductData (PricerProductParam) returns (StatusReply) {}
    rpc SetEnableShopPricer (EnableShopPricerRequest) returns (StatusReply) {}
    rpc SetSwitchersPricer (SetSwitchersRequest) returns (StatusReply) {}
    rpc SetPricerPercent (SetPricerPercentRequest) returns (StatusReply) {}
    rpc SetDumperData (SetDumperRequest) returns (StatusReply) {}
    rpc DeleteProductData (DeleteProductDataRequest) returns (StatusReply) {}
}

message DeleteProductDataRequest {
    string shop = 1;
    int64 productID = 2;
    int64 shopProductID = 3;
    int64 companyID = 4;
    bool fullDelete = 5;
}

message DumperValues {
    string shop = 1;
    bool activeWD = 2;
    int32 hourFromWD = 3;
    int32 hourToWD = 4;
    float valueWD = 5;
    bool activeWE = 6;
    int32 hourFromWE = 7;
    int32 hourToWE = 8;
    float valueWE = 9;
}

message SetDumperRequest {
    Auth auth = 1;
    repeated int64 products = 2;
    repeated DumperValues data = 3;
}

message PricerPercent {
    string shop = 1;
    float value = 2;
}

message SetPricerPercentRequest {
    Auth auth = 1;
    repeated int64 products = 2;
    repeated PricerPercent data = 3;
}

message SwitcherData {
    string shop = 1;
    bool pricer = 2;
    bool dumper = 3;
}

message SetSwitchersRequest {
    Auth auth = 1;
    repeated int64 products = 2;
    repeated SwitcherData switcher = 3;
}

message EnableShopPricerRequest {
    Auth auth = 1;
    string shop = 2;
    bool enable = 3;
}

message PricerProductParamDumping {
    string dayType = 1;
    int32 target = 2;
    float offsetMin = 3;
    float offsetMax = 4;
    bool active = 5;
    int32 hourFrom = 6;
    int32 hourTo = 7;
}

message PricerProductParam {
    string shop = 1;
    int32 target = 2;
    float offsetMin = 3;
    float offsetMax = 4;
    bool active = 5;
    PricerProductParamDumping dumpingNight = 6;
    PricerProductParamDumping dumpingWeekend = 7;
    string updated = 8;
    int64 productID = 9;
    Auth auth = 10;
}

message PricerProductParams {
    Product product = 1;
    repeated PricerProductParam data = 2;
}

message PricerListRequest {
    Auth auth = 1;
    string shop = 2;
    bool pricer = 3;
    bool dumper = 4;
    repeated int64 brands = 5;
    bool showAll = 6;
}

message PricerProductParamShopMin {
    bool hasPricer = 1;
    bool activePricer = 2;
    int32 targetPricer = 3;
    bool hasDumper = 4;
    bool activeDumper = 5;
    int32 targetDumper = 6;
}

message PricerListItemShop {
    string shop = 1;
    bool primary = 2;
    string lastChange = 3;
    int64 lastChangeTime = 4;
    bool pricer = 5;
    int32 pricerTarget = 6;
    bool dumping = 7;
    int32 dumpingNightTarget = 8;
    int32 dumpingWeekendTarget = 9;
    bool active = 10;
    PricerProductParamShopMin minData = 11;
}

message PricerListItem {
    Product product = 1;
    repeated PricerListItemShop shops = 2;
    string primaryShop = 3;
    int32 sort = 4;
    bool alert = 5;
    string lastChange = 6;
    int64 lastChangeTime = 7;
}

message PricerList {
    repeated PricerListItem pricerOnly = 1;
    repeated PricerListItem pricerDumper = 2;
    repeated PricerListItem pricerNone = 3;
}

message UserPricerParam {
    string shop = 1;
    int32 limitItems = 2;
    int32 activeItems = 3;
    string startDate = 4;
    string endDate = 5;
    bool active = 6;
    string updated = 7;
    bool enable = 8;
}

message UserPricerParams {
    repeated UserPricerParam data = 1;
}

message ParserGetRequest {
    string parser = 1;
}

message ParserJob {
    string parser = 1;
    int64 queueDataID = 2;
    string url = 3;
    string client = 4;
}

message ParserSetRequest {
    string parser = 1;
    int64 queueDataID = 2;
    bytes file = 3;
}


message DetectorGetRequest {
    string detector = 1;
    string detectorType = 2;
}

message DetectorCount {
    int32 waiting = 1;
    int32 done = 2;
    int32 error = 3;
    int32 unknown = 4;
}

message DetectorWork {
    int64 jobID = 1;
    bytes file = 2;
    string shop = 3;
}

message DetectorGetReply {
    string detector = 1;
    string client = 2;
    DetectorWork work = 3;
    repeated DetectorCount count = 4;
    bool testMode = 5;
}

message DetectorSetRequest {
    string detector = 1;
    string detectorType = 2;
    string result = 3;
    string description = 4;
    int32 parse = 5;
    int64 jobID = 6;
}