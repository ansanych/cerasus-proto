// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v3.21.12
// source: datumV3.proto

package cerasus_proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SetCompaniyDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Auth *Auth        `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"`
	Data *CompanyData `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *SetCompaniyDataRequest) Reset() {
	*x = SetCompaniyDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datumV3_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetCompaniyDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetCompaniyDataRequest) ProtoMessage() {}

func (x *SetCompaniyDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_datumV3_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetCompaniyDataRequest.ProtoReflect.Descriptor instead.
func (*SetCompaniyDataRequest) Descriptor() ([]byte, []int) {
	return file_datumV3_proto_rawDescGZIP(), []int{0}
}

func (x *SetCompaniyDataRequest) GetAuth() *Auth {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *SetCompaniyDataRequest) GetData() *CompanyData {
	if x != nil {
		return x.Data
	}
	return nil
}

type ProductWidgetShops struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Shop  string  `protobuf:"bytes,1,opt,name=shop,proto3" json:"shop,omitempty"`
	Value float32 `protobuf:"fixed32,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *ProductWidgetShops) Reset() {
	*x = ProductWidgetShops{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datumV3_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductWidgetShops) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductWidgetShops) ProtoMessage() {}

func (x *ProductWidgetShops) ProtoReflect() protoreflect.Message {
	mi := &file_datumV3_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductWidgetShops.ProtoReflect.Descriptor instead.
func (*ProductWidgetShops) Descriptor() ([]byte, []int) {
	return file_datumV3_proto_rawDescGZIP(), []int{1}
}

func (x *ProductWidgetShops) GetShop() string {
	if x != nil {
		return x.Shop
	}
	return ""
}

func (x *ProductWidgetShops) GetValue() float32 {
	if x != nil {
		return x.Value
	}
	return 0
}

type ProductWidget struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type     string                `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Value    float32               `protobuf:"fixed32,2,opt,name=value,proto3" json:"value,omitempty"`
	ShopData []*ProductWidgetShops `protobuf:"bytes,3,rep,name=shopData,proto3" json:"shopData,omitempty"`
}

func (x *ProductWidget) Reset() {
	*x = ProductWidget{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datumV3_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductWidget) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductWidget) ProtoMessage() {}

func (x *ProductWidget) ProtoReflect() protoreflect.Message {
	mi := &file_datumV3_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductWidget.ProtoReflect.Descriptor instead.
func (*ProductWidget) Descriptor() ([]byte, []int) {
	return file_datumV3_proto_rawDescGZIP(), []int{2}
}

func (x *ProductWidget) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ProductWidget) GetValue() float32 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *ProductWidget) GetShopData() []*ProductWidgetShops {
	if x != nil {
		return x.ShopData
	}
	return nil
}

type ProductWidgets struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*ProductWidget `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *ProductWidgets) Reset() {
	*x = ProductWidgets{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datumV3_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductWidgets) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductWidgets) ProtoMessage() {}

func (x *ProductWidgets) ProtoReflect() protoreflect.Message {
	mi := &file_datumV3_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductWidgets.ProtoReflect.Descriptor instead.
func (*ProductWidgets) Descriptor() ([]byte, []int) {
	return file_datumV3_proto_rawDescGZIP(), []int{3}
}

func (x *ProductWidgets) GetData() []*ProductWidget {
	if x != nil {
		return x.Data
	}
	return nil
}

type RoundGrapDataset struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type  string    `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Label string    `protobuf:"bytes,2,opt,name=label,proto3" json:"label,omitempty"`
	Data  []float32 `protobuf:"fixed32,3,rep,packed,name=data,proto3" json:"data,omitempty"`
}

func (x *RoundGrapDataset) Reset() {
	*x = RoundGrapDataset{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datumV3_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoundGrapDataset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoundGrapDataset) ProtoMessage() {}

func (x *RoundGrapDataset) ProtoReflect() protoreflect.Message {
	mi := &file_datumV3_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoundGrapDataset.ProtoReflect.Descriptor instead.
func (*RoundGrapDataset) Descriptor() ([]byte, []int) {
	return file_datumV3_proto_rawDescGZIP(), []int{4}
}

func (x *RoundGrapDataset) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *RoundGrapDataset) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *RoundGrapDataset) GetData() []float32 {
	if x != nil {
		return x.Data
	}
	return nil
}

type RoundGraphic struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Labels   []string            `protobuf:"bytes,1,rep,name=labels,proto3" json:"labels,omitempty"`
	Datasets []*RoundGrapDataset `protobuf:"bytes,2,rep,name=datasets,proto3" json:"datasets,omitempty"`
}

func (x *RoundGraphic) Reset() {
	*x = RoundGraphic{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datumV3_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoundGraphic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoundGraphic) ProtoMessage() {}

func (x *RoundGraphic) ProtoReflect() protoreflect.Message {
	mi := &file_datumV3_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoundGraphic.ProtoReflect.Descriptor instead.
func (*RoundGraphic) Descriptor() ([]byte, []int) {
	return file_datumV3_proto_rawDescGZIP(), []int{5}
}

func (x *RoundGraphic) GetLabels() []string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *RoundGraphic) GetDatasets() []*RoundGrapDataset {
	if x != nil {
		return x.Datasets
	}
	return nil
}

type ShopWidgetData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title       string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	SalesCount  int32  `protobuf:"varint,2,opt,name=salesCount,proto3" json:"salesCount,omitempty"`
	SalesSum    int32  `protobuf:"varint,3,opt,name=salesSum,proto3" json:"salesSum,omitempty"`
	OrdersCount int32  `protobuf:"varint,4,opt,name=ordersCount,proto3" json:"ordersCount,omitempty"`
	OrdersSum   int32  `protobuf:"varint,5,opt,name=ordersSum,proto3" json:"ordersSum,omitempty"`
}

func (x *ShopWidgetData) Reset() {
	*x = ShopWidgetData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datumV3_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShopWidgetData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShopWidgetData) ProtoMessage() {}

func (x *ShopWidgetData) ProtoReflect() protoreflect.Message {
	mi := &file_datumV3_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShopWidgetData.ProtoReflect.Descriptor instead.
func (*ShopWidgetData) Descriptor() ([]byte, []int) {
	return file_datumV3_proto_rawDescGZIP(), []int{6}
}

func (x *ShopWidgetData) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ShopWidgetData) GetSalesCount() int32 {
	if x != nil {
		return x.SalesCount
	}
	return 0
}

func (x *ShopWidgetData) GetSalesSum() int32 {
	if x != nil {
		return x.SalesSum
	}
	return 0
}

func (x *ShopWidgetData) GetOrdersCount() int32 {
	if x != nil {
		return x.OrdersCount
	}
	return 0
}

func (x *ShopWidgetData) GetOrdersSum() int32 {
	if x != nil {
		return x.OrdersSum
	}
	return 0
}

type ShopWidget struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*ShopWidgetData `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *ShopWidget) Reset() {
	*x = ShopWidget{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datumV3_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShopWidget) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShopWidget) ProtoMessage() {}

func (x *ShopWidget) ProtoReflect() protoreflect.Message {
	mi := &file_datumV3_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShopWidget.ProtoReflect.Descriptor instead.
func (*ShopWidget) Descriptor() ([]byte, []int) {
	return file_datumV3_proto_rawDescGZIP(), []int{7}
}

func (x *ShopWidget) GetData() []*ShopWidgetData {
	if x != nil {
		return x.Data
	}
	return nil
}

type OrderLeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductID int64  `protobuf:"varint,1,opt,name=productID,proto3" json:"productID,omitempty"`
	Title     string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Preview   string `protobuf:"bytes,3,opt,name=preview,proto3" json:"preview,omitempty"`
	Shop      string `protobuf:"bytes,4,opt,name=shop,proto3" json:"shop,omitempty"`
	Count     int32  `protobuf:"varint,5,opt,name=count,proto3" json:"count,omitempty"`
	Index     int32  `protobuf:"varint,6,opt,name=index,proto3" json:"index,omitempty"`
}

func (x *OrderLeader) Reset() {
	*x = OrderLeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datumV3_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderLeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderLeader) ProtoMessage() {}

func (x *OrderLeader) ProtoReflect() protoreflect.Message {
	mi := &file_datumV3_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderLeader.ProtoReflect.Descriptor instead.
func (*OrderLeader) Descriptor() ([]byte, []int) {
	return file_datumV3_proto_rawDescGZIP(), []int{8}
}

func (x *OrderLeader) GetProductID() int64 {
	if x != nil {
		return x.ProductID
	}
	return 0
}

func (x *OrderLeader) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *OrderLeader) GetPreview() string {
	if x != nil {
		return x.Preview
	}
	return ""
}

func (x *OrderLeader) GetShop() string {
	if x != nil {
		return x.Shop
	}
	return ""
}

func (x *OrderLeader) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *OrderLeader) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

type OrderLeaders struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Leaders []*OrderLeader `protobuf:"bytes,1,rep,name=leaders,proto3" json:"leaders,omitempty"`
}

func (x *OrderLeaders) Reset() {
	*x = OrderLeaders{}
	if protoimpl.UnsafeEnabled {
		mi := &file_datumV3_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderLeaders) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderLeaders) ProtoMessage() {}

func (x *OrderLeaders) ProtoReflect() protoreflect.Message {
	mi := &file_datumV3_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderLeaders.ProtoReflect.Descriptor instead.
func (*OrderLeaders) Descriptor() ([]byte, []int) {
	return file_datumV3_proto_rawDescGZIP(), []int{9}
}

func (x *OrderLeaders) GetLeaders() []*OrderLeader {
	if x != nil {
		return x.Leaders
	}
	return nil
}

var File_datumV3_proto protoreflect.FileDescriptor

var file_datumV3_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x64, 0x61, 0x74, 0x75, 0x6d, 0x56, 0x33, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x09, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x1a, 0x0f, 0x63, 0x65, 0x72, 0x61,
	0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x69, 0x0a, 0x16, 0x53,
	0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x69, 0x79, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e,
	0x41, 0x75, 0x74, 0x68, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x12, 0x2a, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73,
	0x75, 0x73, 0x56, 0x33, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x3e, 0x0a, 0x12, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x70, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x73, 0x68, 0x6f, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x68, 0x6f, 0x70,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x74, 0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x12, 0x39, 0x0a, 0x08, 0x73, 0x68, 0x6f, 0x70, 0x44, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x53, 0x68, 0x6f,
	0x70, 0x73, 0x52, 0x08, 0x73, 0x68, 0x6f, 0x70, 0x44, 0x61, 0x74, 0x61, 0x22, 0x3e, 0x0a, 0x0e,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x73, 0x12, 0x2c,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63,
	0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x50, 0x0a, 0x10,
	0x52, 0x6f, 0x75, 0x6e, 0x64, 0x47, 0x72, 0x61, 0x70, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x02, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x5f,
	0x0a, 0x0c, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x47, 0x72, 0x61, 0x70, 0x68, 0x69, 0x63, 0x12, 0x16,
	0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x37, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65,
	0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73,
	0x75, 0x73, 0x56, 0x33, 0x2e, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x47, 0x72, 0x61, 0x70, 0x44, 0x61,
	0x74, 0x61, 0x73, 0x65, 0x74, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x73, 0x22,
	0xa2, 0x01, 0x0a, 0x0e, 0x53, 0x68, 0x6f, 0x70, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x61, 0x6c, 0x65,
	0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x61,
	0x6c, 0x65, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x61, 0x6c, 0x65,
	0x73, 0x53, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x61, 0x6c, 0x65,
	0x73, 0x53, 0x75, 0x6d, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73,
	0x53, 0x75, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x73, 0x53, 0x75, 0x6d, 0x22, 0x3b, 0x0a, 0x0a, 0x53, 0x68, 0x6f, 0x70, 0x57, 0x69, 0x64, 0x67,
	0x65, 0x74, 0x12, 0x2d, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x53, 0x68, 0x6f,
	0x70, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x22, 0x9b, 0x01, 0x0a, 0x0b, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4c, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x12,
	0x12, 0x0a, 0x04, 0x73, 0x68, 0x6f, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73,
	0x68, 0x6f, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x22,
	0x40, 0x0a, 0x0c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12,
	0x30, 0x0a, 0x07, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x07, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x73, 0x32, 0xeb, 0x09, 0x0a, 0x05, 0x44, 0x61, 0x74, 0x75, 0x6d, 0x12, 0x36, 0x0a, 0x04, 0x50,
	0x69, 0x6e, 0x67, 0x12, 0x16, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e,
	0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x63, 0x65,
	0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x0b, 0x53, 0x65, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x4a,
	0x6f, 0x62, 0x12, 0x14, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x51,
	0x75, 0x65, 0x75, 0x65, 0x72, 0x4a, 0x6f, 0x62, 0x1a, 0x16, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73,
	0x75, 0x73, 0x56, 0x33, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x00, 0x12, 0x47, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x70, 0x53, 0x61, 0x6c,
	0x65, 0x73, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x12, 0x18, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73,
	0x75, 0x73, 0x56, 0x33, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x79, 0x53, 0x68,
	0x6f, 0x70, 0x1a, 0x15, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x53,
	0x68, 0x6f, 0x70, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x0f, 0x47,
	0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x18,
	0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x42, 0x79, 0x53, 0x68, 0x6f, 0x70, 0x1a, 0x17, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73,
	0x75, 0x73, 0x56, 0x33, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x73, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x69, 0x6e, 0x47, 0x72,
	0x61, 0x70, 0x68, 0x69, 0x63, 0x12, 0x1b, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56,
	0x33, 0x2e, 0x4c, 0x69, 0x6e, 0x65, 0x47, 0x72, 0x61, 0x70, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x14, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x4c,
	0x69, 0x6e, 0x65, 0x47, 0x72, 0x61, 0x70, 0x68, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x0e, 0x47, 0x65,
	0x74, 0x57, 0x65, 0x65, 0x6b, 0x47, 0x72, 0x61, 0x70, 0x68, 0x69, 0x63, 0x12, 0x1b, 0x2e, 0x63,
	0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x4c, 0x69, 0x6e, 0x65, 0x47, 0x72, 0x61,
	0x70, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x63, 0x65, 0x72, 0x61,
	0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x57, 0x65, 0x65, 0x6b, 0x47, 0x72, 0x61, 0x70, 0x68, 0x69,
	0x63, 0x22, 0x00, 0x12, 0x3c, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x46, 0x6c, 0x6f, 0x77, 0x47, 0x72,
	0x61, 0x70, 0x68, 0x69, 0x63, 0x12, 0x0f, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56,
	0x33, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x1a, 0x17, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73,
	0x56, 0x33, 0x2e, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x47, 0x72, 0x61, 0x70, 0x68, 0x69, 0x63, 0x22,
	0x00, 0x12, 0x3e, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x47, 0x72,
	0x61, 0x70, 0x68, 0x69, 0x63, 0x12, 0x0f, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56,
	0x33, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x1a, 0x17, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73,
	0x56, 0x33, 0x2e, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x47, 0x72, 0x61, 0x70, 0x68, 0x69, 0x63, 0x22,
	0x00, 0x12, 0x49, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x52, 0x6f, 0x75, 0x6e, 0x64,
	0x47, 0x72, 0x61, 0x70, 0x68, 0x69, 0x63, 0x12, 0x18, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75,
	0x73, 0x56, 0x33, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x79, 0x53, 0x68, 0x6f,
	0x70, 0x1a, 0x17, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x52, 0x6f,
	0x75, 0x6e, 0x64, 0x47, 0x72, 0x61, 0x70, 0x68, 0x69, 0x63, 0x22, 0x00, 0x12, 0x4b, 0x0a, 0x14,
	0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x47, 0x72, 0x61,
	0x70, 0x68, 0x69, 0x63, 0x12, 0x18, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33,
	0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x79, 0x53, 0x68, 0x6f, 0x70, 0x1a, 0x17,
	0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x52, 0x6f, 0x75, 0x6e, 0x64,
	0x47, 0x72, 0x61, 0x70, 0x68, 0x69, 0x63, 0x22, 0x00, 0x12, 0x4a, 0x0a, 0x10, 0x47, 0x65, 0x74,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x12, 0x19, 0x2e,
	0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x42, 0x79, 0x44, 0x61, 0x74, 0x65, 0x73, 0x1a, 0x19, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73,
	0x75, 0x73, 0x56, 0x33, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x57, 0x69, 0x64, 0x67,
	0x65, 0x74, 0x73, 0x22, 0x00, 0x12, 0x4a, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x47, 0x72, 0x61, 0x70, 0x68, 0x69, 0x63, 0x73, 0x12, 0x19, 0x2e, 0x63, 0x65,
	0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42,
	0x79, 0x44, 0x61, 0x74, 0x65, 0x73, 0x1a, 0x17, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73,
	0x56, 0x33, 0x2e, 0x4c, 0x69, 0x6e, 0x65, 0x47, 0x72, 0x61, 0x70, 0x68, 0x69, 0x63, 0x73, 0x22,
	0x00, 0x12, 0x39, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x12, 0x19, 0x2e,
	0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x42, 0x79, 0x44, 0x61, 0x74, 0x65, 0x73, 0x1a, 0x10, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73,
	0x75, 0x73, 0x56, 0x33, 0x2e, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x22, 0x00, 0x12, 0x34, 0x0a, 0x07,
	0x47, 0x65, 0x74, 0x53, 0x61, 0x6c, 0x65, 0x12, 0x16, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75,
	0x73, 0x56, 0x33, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x79, 0x49, 0x44, 0x1a,
	0x0f, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x53, 0x61, 0x6c, 0x65,
	0x22, 0x00, 0x12, 0x49, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x69,
	0x65, 0x73, 0x44, 0x61, 0x74, 0x61, 0x12, 0x19, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73,
	0x56, 0x33, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x79, 0x44, 0x61, 0x74, 0x65,
	0x73, 0x1a, 0x18, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x43, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x69, 0x65, 0x73, 0x44, 0x61, 0x74, 0x61, 0x22, 0x00, 0x12, 0x4b, 0x0a,
	0x13, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x69, 0x65, 0x73,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x18, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33,
	0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18,
	0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x69, 0x65, 0x73, 0x44, 0x61, 0x74, 0x61, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x0f, 0x47, 0x65,
	0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x69, 0x79, 0x44, 0x61, 0x74, 0x61, 0x12, 0x16, 0x2e,
	0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x42, 0x79, 0x49, 0x44, 0x1a, 0x16, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56,
	0x33, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x44, 0x61, 0x74, 0x61, 0x22, 0x00, 0x12,
	0x4e, 0x0a, 0x0f, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x69, 0x79, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x21, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x53,
	0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x69, 0x79, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56,
	0x33, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x42,
	0x23, 0x5a, 0x21, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x6e,
	0x73, 0x61, 0x6e, 0x79, 0x63, 0x68, 0x2f, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x2d, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_datumV3_proto_rawDescOnce sync.Once
	file_datumV3_proto_rawDescData = file_datumV3_proto_rawDesc
)

func file_datumV3_proto_rawDescGZIP() []byte {
	file_datumV3_proto_rawDescOnce.Do(func() {
		file_datumV3_proto_rawDescData = protoimpl.X.CompressGZIP(file_datumV3_proto_rawDescData)
	})
	return file_datumV3_proto_rawDescData
}

var file_datumV3_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_datumV3_proto_goTypes = []interface{}{
	(*SetCompaniyDataRequest)(nil), // 0: cerasusV3.SetCompaniyDataRequest
	(*ProductWidgetShops)(nil),     // 1: cerasusV3.ProductWidgetShops
	(*ProductWidget)(nil),          // 2: cerasusV3.ProductWidget
	(*ProductWidgets)(nil),         // 3: cerasusV3.ProductWidgets
	(*RoundGrapDataset)(nil),       // 4: cerasusV3.RoundGrapDataset
	(*RoundGraphic)(nil),           // 5: cerasusV3.RoundGraphic
	(*ShopWidgetData)(nil),         // 6: cerasusV3.ShopWidgetData
	(*ShopWidget)(nil),             // 7: cerasusV3.ShopWidget
	(*OrderLeader)(nil),            // 8: cerasusV3.OrderLeader
	(*OrderLeaders)(nil),           // 9: cerasusV3.OrderLeaders
	(*Auth)(nil),                   // 10: cerasusV3.Auth
	(*CompanyData)(nil),            // 11: cerasusV3.CompanyData
	(*PingRequest)(nil),            // 12: cerasusV3.PingRequest
	(*QueuerJob)(nil),              // 13: cerasusV3.QueuerJob
	(*RequestByShop)(nil),          // 14: cerasusV3.RequestByShop
	(*LineGraphRequest)(nil),       // 15: cerasusV3.LineGraphRequest
	(*RequestByDates)(nil),         // 16: cerasusV3.RequestByDates
	(*RequestByID)(nil),            // 17: cerasusV3.RequestByID
	(*SearchRequest)(nil),          // 18: cerasusV3.SearchRequest
	(*PingReply)(nil),              // 19: cerasusV3.PingReply
	(*StatusReply)(nil),            // 20: cerasusV3.StatusReply
	(*LineGraph)(nil),              // 21: cerasusV3.LineGraph
	(*WeekGraphic)(nil),            // 22: cerasusV3.WeekGraphic
	(*LineGraphics)(nil),           // 23: cerasusV3.LineGraphics
	(*Sales)(nil),                  // 24: cerasusV3.Sales
	(*Sale)(nil),                   // 25: cerasusV3.Sale
	(*CompaniesData)(nil),          // 26: cerasusV3.CompaniesData
}
var file_datumV3_proto_depIdxs = []int32{
	10, // 0: cerasusV3.SetCompaniyDataRequest.auth:type_name -> cerasusV3.Auth
	11, // 1: cerasusV3.SetCompaniyDataRequest.data:type_name -> cerasusV3.CompanyData
	1,  // 2: cerasusV3.ProductWidget.shopData:type_name -> cerasusV3.ProductWidgetShops
	2,  // 3: cerasusV3.ProductWidgets.data:type_name -> cerasusV3.ProductWidget
	4,  // 4: cerasusV3.RoundGraphic.datasets:type_name -> cerasusV3.RoundGrapDataset
	6,  // 5: cerasusV3.ShopWidget.data:type_name -> cerasusV3.ShopWidgetData
	8,  // 6: cerasusV3.OrderLeaders.leaders:type_name -> cerasusV3.OrderLeader
	12, // 7: cerasusV3.Datum.Ping:input_type -> cerasusV3.PingRequest
	13, // 8: cerasusV3.Datum.SetQueueJob:input_type -> cerasusV3.QueuerJob
	14, // 9: cerasusV3.Datum.GetShopSalesWidget:input_type -> cerasusV3.RequestByShop
	14, // 10: cerasusV3.Datum.GetOrderLeaders:input_type -> cerasusV3.RequestByShop
	15, // 11: cerasusV3.Datum.GetMainGraphic:input_type -> cerasusV3.LineGraphRequest
	15, // 12: cerasusV3.Datum.GetWeekGraphic:input_type -> cerasusV3.LineGraphRequest
	10, // 13: cerasusV3.Datum.GetFlowGraphic:input_type -> cerasusV3.Auth
	10, // 14: cerasusV3.Datum.GetMarginGraphic:input_type -> cerasusV3.Auth
	14, // 15: cerasusV3.Datum.GetPayRoundGraphic:input_type -> cerasusV3.RequestByShop
	14, // 16: cerasusV3.Datum.GetCountRoundGraphic:input_type -> cerasusV3.RequestByShop
	16, // 17: cerasusV3.Datum.GetProductWidget:input_type -> cerasusV3.RequestByDates
	16, // 18: cerasusV3.Datum.GetProductGraphics:input_type -> cerasusV3.RequestByDates
	16, // 19: cerasusV3.Datum.GetSales:input_type -> cerasusV3.RequestByDates
	17, // 20: cerasusV3.Datum.GetSale:input_type -> cerasusV3.RequestByID
	16, // 21: cerasusV3.Datum.GetCompaniesData:input_type -> cerasusV3.RequestByDates
	18, // 22: cerasusV3.Datum.SearchCompaniesData:input_type -> cerasusV3.SearchRequest
	17, // 23: cerasusV3.Datum.GetCompaniyData:input_type -> cerasusV3.RequestByID
	0,  // 24: cerasusV3.Datum.SetCompaniyData:input_type -> cerasusV3.SetCompaniyDataRequest
	19, // 25: cerasusV3.Datum.Ping:output_type -> cerasusV3.PingReply
	20, // 26: cerasusV3.Datum.SetQueueJob:output_type -> cerasusV3.StatusReply
	7,  // 27: cerasusV3.Datum.GetShopSalesWidget:output_type -> cerasusV3.ShopWidget
	9,  // 28: cerasusV3.Datum.GetOrderLeaders:output_type -> cerasusV3.OrderLeaders
	21, // 29: cerasusV3.Datum.GetMainGraphic:output_type -> cerasusV3.LineGraph
	22, // 30: cerasusV3.Datum.GetWeekGraphic:output_type -> cerasusV3.WeekGraphic
	5,  // 31: cerasusV3.Datum.GetFlowGraphic:output_type -> cerasusV3.RoundGraphic
	5,  // 32: cerasusV3.Datum.GetMarginGraphic:output_type -> cerasusV3.RoundGraphic
	5,  // 33: cerasusV3.Datum.GetPayRoundGraphic:output_type -> cerasusV3.RoundGraphic
	5,  // 34: cerasusV3.Datum.GetCountRoundGraphic:output_type -> cerasusV3.RoundGraphic
	3,  // 35: cerasusV3.Datum.GetProductWidget:output_type -> cerasusV3.ProductWidgets
	23, // 36: cerasusV3.Datum.GetProductGraphics:output_type -> cerasusV3.LineGraphics
	24, // 37: cerasusV3.Datum.GetSales:output_type -> cerasusV3.Sales
	25, // 38: cerasusV3.Datum.GetSale:output_type -> cerasusV3.Sale
	26, // 39: cerasusV3.Datum.GetCompaniesData:output_type -> cerasusV3.CompaniesData
	26, // 40: cerasusV3.Datum.SearchCompaniesData:output_type -> cerasusV3.CompaniesData
	11, // 41: cerasusV3.Datum.GetCompaniyData:output_type -> cerasusV3.CompanyData
	20, // 42: cerasusV3.Datum.SetCompaniyData:output_type -> cerasusV3.StatusReply
	25, // [25:43] is the sub-list for method output_type
	7,  // [7:25] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_datumV3_proto_init() }
func file_datumV3_proto_init() {
	if File_datumV3_proto != nil {
		return
	}
	file_cerasusV3_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_datumV3_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetCompaniyDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datumV3_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductWidgetShops); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datumV3_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductWidget); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datumV3_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductWidgets); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datumV3_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoundGrapDataset); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datumV3_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoundGraphic); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datumV3_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShopWidgetData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datumV3_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShopWidget); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datumV3_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderLeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_datumV3_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderLeaders); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_datumV3_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_datumV3_proto_goTypes,
		DependencyIndexes: file_datumV3_proto_depIdxs,
		MessageInfos:      file_datumV3_proto_msgTypes,
	}.Build()
	File_datumV3_proto = out.File
	file_datumV3_proto_rawDesc = nil
	file_datumV3_proto_goTypes = nil
	file_datumV3_proto_depIdxs = nil
}
