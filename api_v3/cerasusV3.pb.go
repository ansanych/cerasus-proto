// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.12.4
// source: cerasusV3.proto

package cerasus_proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SortOrder int32

const (
	SortOrder_ASC  SortOrder = 0
	SortOrder_DESC SortOrder = 1
)

// Enum value maps for SortOrder.
var (
	SortOrder_name = map[int32]string{
		0: "ASC",
		1: "DESC",
	}
	SortOrder_value = map[string]int32{
		"ASC":  0,
		"DESC": 1,
	}
)

func (x SortOrder) Enum() *SortOrder {
	p := new(SortOrder)
	*p = x
	return p
}

func (x SortOrder) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SortOrder) Descriptor() protoreflect.EnumDescriptor {
	return file_cerasusV3_proto_enumTypes[0].Descriptor()
}

func (SortOrder) Type() protoreflect.EnumType {
	return &file_cerasusV3_proto_enumTypes[0]
}

func (x SortOrder) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SortOrder.Descriptor instead.
func (SortOrder) EnumDescriptor() ([]byte, []int) {
	return file_cerasusV3_proto_rawDescGZIP(), []int{0}
}

type Status int32

const (
	Status_UNKNOWN Status = 0
	Status_OK      Status = 1
	Status_ERROR   Status = 2
	Status_TRUE    Status = 3
	Status_FALSE   Status = 4
)

// Enum value maps for Status.
var (
	Status_name = map[int32]string{
		0: "UNKNOWN",
		1: "OK",
		2: "ERROR",
		3: "TRUE",
		4: "FALSE",
	}
	Status_value = map[string]int32{
		"UNKNOWN": 0,
		"OK":      1,
		"ERROR":   2,
		"TRUE":    3,
		"FALSE":   4,
	}
)

func (x Status) Enum() *Status {
	p := new(Status)
	*p = x
	return p
}

func (x Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Status) Descriptor() protoreflect.EnumDescriptor {
	return file_cerasusV3_proto_enumTypes[1].Descriptor()
}

func (Status) Type() protoreflect.EnumType {
	return &file_cerasusV3_proto_enumTypes[1]
}

func (x Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Status.Descriptor instead.
func (Status) EnumDescriptor() ([]byte, []int) {
	return file_cerasusV3_proto_rawDescGZIP(), []int{1}
}

type Level int32

const (
	Level_NOLEVEL  Level = 0
	Level_INFERIOR Level = 1
	Level_LOW      Level = 2
	Level_MIDDLE   Level = 3
	Level_HIGH     Level = 4
	Level_SUPERIOR Level = 5
)

// Enum value maps for Level.
var (
	Level_name = map[int32]string{
		0: "NOLEVEL",
		1: "INFERIOR",
		2: "LOW",
		3: "MIDDLE",
		4: "HIGH",
		5: "SUPERIOR",
	}
	Level_value = map[string]int32{
		"NOLEVEL":  0,
		"INFERIOR": 1,
		"LOW":      2,
		"MIDDLE":   3,
		"HIGH":     4,
		"SUPERIOR": 5,
	}
)

func (x Level) Enum() *Level {
	p := new(Level)
	*p = x
	return p
}

func (x Level) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Level) Descriptor() protoreflect.EnumDescriptor {
	return file_cerasusV3_proto_enumTypes[2].Descriptor()
}

func (Level) Type() protoreflect.EnumType {
	return &file_cerasusV3_proto_enumTypes[2]
}

func (x Level) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Level.Descriptor instead.
func (Level) EnumDescriptor() ([]byte, []int) {
	return file_cerasusV3_proto_rawDescGZIP(), []int{2}
}

type PingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *PingRequest) Reset() {
	*x = PingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cerasusV3_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingRequest) ProtoMessage() {}

func (x *PingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cerasusV3_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingRequest.ProtoReflect.Descriptor instead.
func (*PingRequest) Descriptor() ([]byte, []int) {
	return file_cerasusV3_proto_rawDescGZIP(), []int{0}
}

func (x *PingRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type PingReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *PingReply) Reset() {
	*x = PingReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cerasusV3_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingReply) ProtoMessage() {}

func (x *PingReply) ProtoReflect() protoreflect.Message {
	mi := &file_cerasusV3_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingReply.ProtoReflect.Descriptor instead.
func (*PingReply) Descriptor() ([]byte, []int) {
	return file_cerasusV3_proto_rawDescGZIP(), []int{1}
}

func (x *PingReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type SearchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Auth   *Auth  `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"`
	Search string `protobuf:"bytes,2,opt,name=search,proto3" json:"search,omitempty"`
	Shop   string `protobuf:"bytes,3,opt,name=shop,proto3" json:"shop,omitempty"`
}

func (x *SearchRequest) Reset() {
	*x = SearchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cerasusV3_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchRequest) ProtoMessage() {}

func (x *SearchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cerasusV3_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchRequest.ProtoReflect.Descriptor instead.
func (*SearchRequest) Descriptor() ([]byte, []int) {
	return file_cerasusV3_proto_rawDescGZIP(), []int{2}
}

func (x *SearchRequest) GetAuth() *Auth {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *SearchRequest) GetSearch() string {
	if x != nil {
		return x.Search
	}
	return ""
}

func (x *SearchRequest) GetShop() string {
	if x != nil {
		return x.Shop
	}
	return ""
}

type RequestByShop struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Auth *Auth  `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"`
	Shop string `protobuf:"bytes,2,opt,name=shop,proto3" json:"shop,omitempty"`
}

func (x *RequestByShop) Reset() {
	*x = RequestByShop{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cerasusV3_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestByShop) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestByShop) ProtoMessage() {}

func (x *RequestByShop) ProtoReflect() protoreflect.Message {
	mi := &file_cerasusV3_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestByShop.ProtoReflect.Descriptor instead.
func (*RequestByShop) Descriptor() ([]byte, []int) {
	return file_cerasusV3_proto_rawDescGZIP(), []int{3}
}

func (x *RequestByShop) GetAuth() *Auth {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *RequestByShop) GetShop() string {
	if x != nil {
		return x.Shop
	}
	return ""
}

type RequestByID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Auth *Auth  `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"`
	ID   int64  `protobuf:"varint,2,opt,name=ID,proto3" json:"ID,omitempty"`
	Shop string `protobuf:"bytes,3,opt,name=shop,proto3" json:"shop,omitempty"`
}

func (x *RequestByID) Reset() {
	*x = RequestByID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cerasusV3_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestByID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestByID) ProtoMessage() {}

func (x *RequestByID) ProtoReflect() protoreflect.Message {
	mi := &file_cerasusV3_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestByID.ProtoReflect.Descriptor instead.
func (*RequestByID) Descriptor() ([]byte, []int) {
	return file_cerasusV3_proto_rawDescGZIP(), []int{4}
}

func (x *RequestByID) GetAuth() *Auth {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *RequestByID) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *RequestByID) GetShop() string {
	if x != nil {
		return x.Shop
	}
	return ""
}

type RequestByIDS struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Auth *Auth   `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"`
	ID   []int64 `protobuf:"varint,2,rep,packed,name=ID,proto3" json:"ID,omitempty"`
	Shop string  `protobuf:"bytes,3,opt,name=shop,proto3" json:"shop,omitempty"`
}

func (x *RequestByIDS) Reset() {
	*x = RequestByIDS{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cerasusV3_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestByIDS) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestByIDS) ProtoMessage() {}

func (x *RequestByIDS) ProtoReflect() protoreflect.Message {
	mi := &file_cerasusV3_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestByIDS.ProtoReflect.Descriptor instead.
func (*RequestByIDS) Descriptor() ([]byte, []int) {
	return file_cerasusV3_proto_rawDescGZIP(), []int{5}
}

func (x *RequestByIDS) GetAuth() *Auth {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *RequestByIDS) GetID() []int64 {
	if x != nil {
		return x.ID
	}
	return nil
}

func (x *RequestByIDS) GetShop() string {
	if x != nil {
		return x.Shop
	}
	return ""
}

type RequestByDates struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Auth  *Auth   `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"`
	From  string  `protobuf:"bytes,2,opt,name=from,proto3" json:"from,omitempty"`
	To    string  `protobuf:"bytes,3,opt,name=to,proto3" json:"to,omitempty"`
	ID    int64   `protobuf:"varint,4,opt,name=ID,proto3" json:"ID,omitempty"`
	IDS   []int64 `protobuf:"varint,5,rep,packed,name=IDS,proto3" json:"IDS,omitempty"`
	Shop  string  `protobuf:"bytes,6,opt,name=shop,proto3" json:"shop,omitempty"`
	Step  string  `protobuf:"bytes,7,opt,name=step,proto3" json:"step,omitempty"`
	Page  int32   `protobuf:"varint,8,opt,name=page,proto3" json:"page,omitempty"`
	Limit int32   `protobuf:"varint,9,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *RequestByDates) Reset() {
	*x = RequestByDates{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cerasusV3_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestByDates) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestByDates) ProtoMessage() {}

func (x *RequestByDates) ProtoReflect() protoreflect.Message {
	mi := &file_cerasusV3_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestByDates.ProtoReflect.Descriptor instead.
func (*RequestByDates) Descriptor() ([]byte, []int) {
	return file_cerasusV3_proto_rawDescGZIP(), []int{6}
}

func (x *RequestByDates) GetAuth() *Auth {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *RequestByDates) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *RequestByDates) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *RequestByDates) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *RequestByDates) GetIDS() []int64 {
	if x != nil {
		return x.IDS
	}
	return nil
}

func (x *RequestByDates) GetShop() string {
	if x != nil {
		return x.Shop
	}
	return ""
}

func (x *RequestByDates) GetStep() string {
	if x != nil {
		return x.Step
	}
	return ""
}

func (x *RequestByDates) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *RequestByDates) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type ImageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileID   int64  `protobuf:"varint,1,opt,name=fileID,proto3" json:"fileID,omitempty"`
	Filename string `protobuf:"bytes,2,opt,name=filename,proto3" json:"filename,omitempty"`
	Code     string `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`
	Folder   string `protobuf:"bytes,4,opt,name=folder,proto3" json:"folder,omitempty"`
}

func (x *ImageRequest) Reset() {
	*x = ImageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cerasusV3_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageRequest) ProtoMessage() {}

func (x *ImageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cerasusV3_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageRequest.ProtoReflect.Descriptor instead.
func (*ImageRequest) Descriptor() ([]byte, []int) {
	return file_cerasusV3_proto_rawDescGZIP(), []int{7}
}

func (x *ImageRequest) GetFileID() int64 {
	if x != nil {
		return x.FileID
	}
	return 0
}

func (x *ImageRequest) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *ImageRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *ImageRequest) GetFolder() string {
	if x != nil {
		return x.Folder
	}
	return ""
}

type ImageReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filename string `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`
	Chunk    []byte `protobuf:"bytes,2,opt,name=chunk,proto3" json:"chunk,omitempty"`
}

func (x *ImageReply) Reset() {
	*x = ImageReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cerasusV3_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImageReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageReply) ProtoMessage() {}

func (x *ImageReply) ProtoReflect() protoreflect.Message {
	mi := &file_cerasusV3_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageReply.ProtoReflect.Descriptor instead.
func (*ImageReply) Descriptor() ([]byte, []int) {
	return file_cerasusV3_proto_rawDescGZIP(), []int{8}
}

func (x *ImageReply) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *ImageReply) GetChunk() []byte {
	if x != nil {
		return x.Chunk
	}
	return nil
}

type Pagination struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page  int32 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Pages int32 `protobuf:"varint,2,opt,name=pages,proto3" json:"pages,omitempty"`
}

func (x *Pagination) Reset() {
	*x = Pagination{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cerasusV3_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pagination) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pagination) ProtoMessage() {}

func (x *Pagination) ProtoReflect() protoreflect.Message {
	mi := &file_cerasusV3_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pagination.ProtoReflect.Descriptor instead.
func (*Pagination) Descriptor() ([]byte, []int) {
	return file_cerasusV3_proto_rawDescGZIP(), []int{9}
}

func (x *Pagination) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *Pagination) GetPages() int32 {
	if x != nil {
		return x.Pages
	}
	return 0
}

type QueuerJob struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID        int64  `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	CompanyID int64  `protobuf:"varint,2,opt,name=companyID,proto3" json:"companyID,omitempty"`
	Name      string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Status    int32  `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`
	Done      bool   `protobuf:"varint,5,opt,name=done,proto3" json:"done,omitempty"`
	Error     string `protobuf:"bytes,6,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *QueuerJob) Reset() {
	*x = QueuerJob{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cerasusV3_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueuerJob) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueuerJob) ProtoMessage() {}

func (x *QueuerJob) ProtoReflect() protoreflect.Message {
	mi := &file_cerasusV3_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueuerJob.ProtoReflect.Descriptor instead.
func (*QueuerJob) Descriptor() ([]byte, []int) {
	return file_cerasusV3_proto_rawDescGZIP(), []int{10}
}

func (x *QueuerJob) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *QueuerJob) GetCompanyID() int64 {
	if x != nil {
		return x.CompanyID
	}
	return 0
}

func (x *QueuerJob) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *QueuerJob) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *QueuerJob) GetDone() bool {
	if x != nil {
		return x.Done
	}
	return false
}

func (x *QueuerJob) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type Log struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Service   string `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`
	Resource  string `protobuf:"bytes,2,opt,name=resource,proto3" json:"resource,omitempty"`
	Uuid      string `protobuf:"bytes,3,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Datetime  string `protobuf:"bytes,4,opt,name=datetime,proto3" json:"datetime,omitempty"`
	Duration  int64  `protobuf:"varint,5,opt,name=duration,proto3" json:"duration,omitempty"`
	Level     string `protobuf:"bytes,6,opt,name=level,proto3" json:"level,omitempty"`
	Message   string `protobuf:"bytes,7,opt,name=message,proto3" json:"message,omitempty"`
	UserID    int64  `protobuf:"varint,8,opt,name=userID,proto3" json:"userID,omitempty"`
	CompanyID int64  `protobuf:"varint,9,opt,name=companyID,proto3" json:"companyID,omitempty"`
	JobID     int64  `protobuf:"varint,10,opt,name=jobID,proto3" json:"jobID,omitempty"`
	Viewed    bool   `protobuf:"varint,11,opt,name=viewed,proto3" json:"viewed,omitempty"`
	Time      int64  `protobuf:"varint,12,opt,name=time,proto3" json:"time,omitempty"`
}

func (x *Log) Reset() {
	*x = Log{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cerasusV3_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Log) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Log) ProtoMessage() {}

func (x *Log) ProtoReflect() protoreflect.Message {
	mi := &file_cerasusV3_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Log.ProtoReflect.Descriptor instead.
func (*Log) Descriptor() ([]byte, []int) {
	return file_cerasusV3_proto_rawDescGZIP(), []int{11}
}

func (x *Log) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

func (x *Log) GetResource() string {
	if x != nil {
		return x.Resource
	}
	return ""
}

func (x *Log) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *Log) GetDatetime() string {
	if x != nil {
		return x.Datetime
	}
	return ""
}

func (x *Log) GetDuration() int64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *Log) GetLevel() string {
	if x != nil {
		return x.Level
	}
	return ""
}

func (x *Log) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *Log) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *Log) GetCompanyID() int64 {
	if x != nil {
		return x.CompanyID
	}
	return 0
}

func (x *Log) GetJobID() int64 {
	if x != nil {
		return x.JobID
	}
	return 0
}

func (x *Log) GetViewed() bool {
	if x != nil {
		return x.Viewed
	}
	return false
}

func (x *Log) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

type StatusReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status Status `protobuf:"varint,1,opt,name=status,proto3,enum=cerasusV3.Status" json:"status,omitempty"`
}

func (x *StatusReply) Reset() {
	*x = StatusReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cerasusV3_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatusReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusReply) ProtoMessage() {}

func (x *StatusReply) ProtoReflect() protoreflect.Message {
	mi := &file_cerasusV3_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusReply.ProtoReflect.Descriptor instead.
func (*StatusReply) Descriptor() ([]byte, []int) {
	return file_cerasusV3_proto_rawDescGZIP(), []int{12}
}

func (x *StatusReply) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_UNKNOWN
}

type Auth struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TokenValidation bool    `protobuf:"varint,1,opt,name=tokenValidation,proto3" json:"tokenValidation,omitempty"`
	UserID          int64   `protobuf:"varint,2,opt,name=userID,proto3" json:"userID,omitempty"`
	CompanyID       int64   `protobuf:"varint,3,opt,name=companyID,proto3" json:"companyID,omitempty"`
	Roles           []*Role `protobuf:"bytes,4,rep,name=roles,proto3" json:"roles,omitempty"`
}

func (x *Auth) Reset() {
	*x = Auth{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cerasusV3_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Auth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Auth) ProtoMessage() {}

func (x *Auth) ProtoReflect() protoreflect.Message {
	mi := &file_cerasusV3_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Auth.ProtoReflect.Descriptor instead.
func (*Auth) Descriptor() ([]byte, []int) {
	return file_cerasusV3_proto_rawDescGZIP(), []int{13}
}

func (x *Auth) GetTokenValidation() bool {
	if x != nil {
		return x.TokenValidation
	}
	return false
}

func (x *Auth) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *Auth) GetCompanyID() int64 {
	if x != nil {
		return x.CompanyID
	}
	return 0
}

func (x *Auth) GetRoles() []*Role {
	if x != nil {
		return x.Roles
	}
	return nil
}

type Company struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID     int64  `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Name   string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Brand  bool   `protobuf:"varint,3,opt,name=brand,proto3" json:"brand,omitempty"`
	Active bool   `protobuf:"varint,4,opt,name=active,proto3" json:"active,omitempty"`
}

func (x *Company) Reset() {
	*x = Company{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cerasusV3_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Company) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Company) ProtoMessage() {}

func (x *Company) ProtoReflect() protoreflect.Message {
	mi := &file_cerasusV3_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Company.ProtoReflect.Descriptor instead.
func (*Company) Descriptor() ([]byte, []int) {
	return file_cerasusV3_proto_rawDescGZIP(), []int{14}
}

func (x *Company) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *Company) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Company) GetBrand() bool {
	if x != nil {
		return x.Brand
	}
	return false
}

func (x *Company) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

type CompanyList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Companies  []*Company  `protobuf:"bytes,1,rep,name=companies,proto3" json:"companies,omitempty"`
	Pagination *Pagination `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *CompanyList) Reset() {
	*x = CompanyList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cerasusV3_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompanyList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompanyList) ProtoMessage() {}

func (x *CompanyList) ProtoReflect() protoreflect.Message {
	mi := &file_cerasusV3_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompanyList.ProtoReflect.Descriptor instead.
func (*CompanyList) Descriptor() ([]byte, []int) {
	return file_cerasusV3_proto_rawDescGZIP(), []int{15}
}

func (x *CompanyList) GetCompanies() []*Company {
	if x != nil {
		return x.Companies
	}
	return nil
}

func (x *CompanyList) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type Role struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID    int64  `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Code  string `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *Role) Reset() {
	*x = Role{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cerasusV3_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Role) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Role) ProtoMessage() {}

func (x *Role) ProtoReflect() protoreflect.Message {
	mi := &file_cerasusV3_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Role.ProtoReflect.Descriptor instead.
func (*Role) Descriptor() ([]byte, []int) {
	return file_cerasusV3_proto_rawDescGZIP(), []int{16}
}

func (x *Role) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *Role) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Role) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type Roles struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Roles []*Role `protobuf:"bytes,1,rep,name=roles,proto3" json:"roles,omitempty"`
}

func (x *Roles) Reset() {
	*x = Roles{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cerasusV3_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Roles) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Roles) ProtoMessage() {}

func (x *Roles) ProtoReflect() protoreflect.Message {
	mi := &file_cerasusV3_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Roles.ProtoReflect.Descriptor instead.
func (*Roles) Descriptor() ([]byte, []int) {
	return file_cerasusV3_proto_rawDescGZIP(), []int{17}
}

func (x *Roles) GetRoles() []*Role {
	if x != nil {
		return x.Roles
	}
	return nil
}

type Count struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count int32 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *Count) Reset() {
	*x = Count{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cerasusV3_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Count) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Count) ProtoMessage() {}

func (x *Count) ProtoReflect() protoreflect.Message {
	mi := &file_cerasusV3_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Count.ProtoReflect.Descriptor instead.
func (*Count) Descriptor() ([]byte, []int) {
	return file_cerasusV3_proto_rawDescGZIP(), []int{18}
}

func (x *Count) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID          int64    `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Name        string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Email       string   `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	VerifyEmail bool     `protobuf:"varint,4,opt,name=verifyEmail,proto3" json:"verifyEmail,omitempty"`
	Phone       string   `protobuf:"bytes,5,opt,name=phone,proto3" json:"phone,omitempty"`
	VerifyPhone bool     `protobuf:"varint,6,opt,name=verifyPhone,proto3" json:"verifyPhone,omitempty"`
	Company     *Company `protobuf:"bytes,7,opt,name=company,proto3" json:"company,omitempty"`
	Roles       []*Role  `protobuf:"bytes,8,rep,name=roles,proto3" json:"roles,omitempty"`
	Active      bool     `protobuf:"varint,9,opt,name=active,proto3" json:"active,omitempty"`
	Password    string   `protobuf:"bytes,10,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cerasusV3_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_cerasusV3_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_cerasusV3_proto_rawDescGZIP(), []int{19}
}

func (x *User) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *User) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *User) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *User) GetVerifyEmail() bool {
	if x != nil {
		return x.VerifyEmail
	}
	return false
}

func (x *User) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *User) GetVerifyPhone() bool {
	if x != nil {
		return x.VerifyPhone
	}
	return false
}

func (x *User) GetCompany() *Company {
	if x != nil {
		return x.Company
	}
	return nil
}

func (x *User) GetRoles() []*Role {
	if x != nil {
		return x.Roles
	}
	return nil
}

func (x *User) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *User) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type Users struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Users []*User `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
}

func (x *Users) Reset() {
	*x = Users{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cerasusV3_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Users) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Users) ProtoMessage() {}

func (x *Users) ProtoReflect() protoreflect.Message {
	mi := &file_cerasusV3_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Users.ProtoReflect.Descriptor instead.
func (*Users) Descriptor() ([]byte, []int) {
	return file_cerasusV3_proto_rawDescGZIP(), []int{20}
}

func (x *Users) GetUsers() []*User {
	if x != nil {
		return x.Users
	}
	return nil
}

type Brand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID          int64  `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Logo        string `protobuf:"bytes,4,opt,name=logo,proto3" json:"logo,omitempty"`
	Url         string `protobuf:"bytes,5,opt,name=url,proto3" json:"url,omitempty"`
	Global      bool   `protobuf:"varint,6,opt,name=global,proto3" json:"global,omitempty"`
	Linked      bool   `protobuf:"varint,7,opt,name=linked,proto3" json:"linked,omitempty"`
}

func (x *Brand) Reset() {
	*x = Brand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cerasusV3_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Brand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Brand) ProtoMessage() {}

func (x *Brand) ProtoReflect() protoreflect.Message {
	mi := &file_cerasusV3_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Brand.ProtoReflect.Descriptor instead.
func (*Brand) Descriptor() ([]byte, []int) {
	return file_cerasusV3_proto_rawDescGZIP(), []int{21}
}

func (x *Brand) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *Brand) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Brand) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Brand) GetLogo() string {
	if x != nil {
		return x.Logo
	}
	return ""
}

func (x *Brand) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Brand) GetGlobal() bool {
	if x != nil {
		return x.Global
	}
	return false
}

func (x *Brand) GetLinked() bool {
	if x != nil {
		return x.Linked
	}
	return false
}

type Brands struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Brands []*Brand `protobuf:"bytes,1,rep,name=brands,proto3" json:"brands,omitempty"`
}

func (x *Brands) Reset() {
	*x = Brands{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cerasusV3_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Brands) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Brands) ProtoMessage() {}

func (x *Brands) ProtoReflect() protoreflect.Message {
	mi := &file_cerasusV3_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Brands.ProtoReflect.Descriptor instead.
func (*Brands) Descriptor() ([]byte, []int) {
	return file_cerasusV3_proto_rawDescGZIP(), []int{22}
}

func (x *Brands) GetBrands() []*Brand {
	if x != nil {
		return x.Brands
	}
	return nil
}

type ReplyIDS struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID []int64 `protobuf:"varint,1,rep,packed,name=ID,proto3" json:"ID,omitempty"`
}

func (x *ReplyIDS) Reset() {
	*x = ReplyIDS{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cerasusV3_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplyIDS) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyIDS) ProtoMessage() {}

func (x *ReplyIDS) ProtoReflect() protoreflect.Message {
	mi := &file_cerasusV3_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyIDS.ProtoReflect.Descriptor instead.
func (*ReplyIDS) Descriptor() ([]byte, []int) {
	return file_cerasusV3_proto_rawDescGZIP(), []int{23}
}

func (x *ReplyIDS) GetID() []int64 {
	if x != nil {
		return x.ID
	}
	return nil
}

type ShopProduct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID          int64    `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Title       string   `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Article     string   `protobuf:"bytes,3,opt,name=article,proto3" json:"article,omitempty"`
	Preview     string   `protobuf:"bytes,4,opt,name=preview,proto3" json:"preview,omitempty"`
	Url         string   `protobuf:"bytes,5,opt,name=url,proto3" json:"url,omitempty"`
	WbSkus      []string `protobuf:"bytes,6,rep,name=wbSkus,proto3" json:"wbSkus,omitempty"`
	OzProductID int64    `protobuf:"varint,7,opt,name=ozProductID,proto3" json:"ozProductID,omitempty"`
	YmOfferID   string   `protobuf:"bytes,8,opt,name=ymOfferID,proto3" json:"ymOfferID,omitempty"`
	WbNMID      int64    `protobuf:"varint,9,opt,name=wbNMID,proto3" json:"wbNMID,omitempty"`
	OzSku       int64    `protobuf:"varint,10,opt,name=ozSku,proto3" json:"ozSku,omitempty"`
	CompanyID   int64    `protobuf:"varint,11,opt,name=companyID,proto3" json:"companyID,omitempty"`
	YmSku       int64    `protobuf:"varint,12,opt,name=ymSku,proto3" json:"ymSku,omitempty"`
}

func (x *ShopProduct) Reset() {
	*x = ShopProduct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cerasusV3_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShopProduct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShopProduct) ProtoMessage() {}

func (x *ShopProduct) ProtoReflect() protoreflect.Message {
	mi := &file_cerasusV3_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShopProduct.ProtoReflect.Descriptor instead.
func (*ShopProduct) Descriptor() ([]byte, []int) {
	return file_cerasusV3_proto_rawDescGZIP(), []int{24}
}

func (x *ShopProduct) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *ShopProduct) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ShopProduct) GetArticle() string {
	if x != nil {
		return x.Article
	}
	return ""
}

func (x *ShopProduct) GetPreview() string {
	if x != nil {
		return x.Preview
	}
	return ""
}

func (x *ShopProduct) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *ShopProduct) GetWbSkus() []string {
	if x != nil {
		return x.WbSkus
	}
	return nil
}

func (x *ShopProduct) GetOzProductID() int64 {
	if x != nil {
		return x.OzProductID
	}
	return 0
}

func (x *ShopProduct) GetYmOfferID() string {
	if x != nil {
		return x.YmOfferID
	}
	return ""
}

func (x *ShopProduct) GetWbNMID() int64 {
	if x != nil {
		return x.WbNMID
	}
	return 0
}

func (x *ShopProduct) GetOzSku() int64 {
	if x != nil {
		return x.OzSku
	}
	return 0
}

func (x *ShopProduct) GetCompanyID() int64 {
	if x != nil {
		return x.CompanyID
	}
	return 0
}

func (x *ShopProduct) GetYmSku() int64 {
	if x != nil {
		return x.YmSku
	}
	return 0
}

type ShopProductLinks struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShopCode      string         `protobuf:"bytes,1,opt,name=shopCode,proto3" json:"shopCode,omitempty"`
	ShopProductID []int64        `protobuf:"varint,2,rep,packed,name=shopProductID,proto3" json:"shopProductID,omitempty"`
	ShopProducts  []*ShopProduct `protobuf:"bytes,3,rep,name=shopProducts,proto3" json:"shopProducts,omitempty"`
}

func (x *ShopProductLinks) Reset() {
	*x = ShopProductLinks{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cerasusV3_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShopProductLinks) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShopProductLinks) ProtoMessage() {}

func (x *ShopProductLinks) ProtoReflect() protoreflect.Message {
	mi := &file_cerasusV3_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShopProductLinks.ProtoReflect.Descriptor instead.
func (*ShopProductLinks) Descriptor() ([]byte, []int) {
	return file_cerasusV3_proto_rawDescGZIP(), []int{25}
}

func (x *ShopProductLinks) GetShopCode() string {
	if x != nil {
		return x.ShopCode
	}
	return ""
}

func (x *ShopProductLinks) GetShopProductID() []int64 {
	if x != nil {
		return x.ShopProductID
	}
	return nil
}

func (x *ShopProductLinks) GetShopProducts() []*ShopProduct {
	if x != nil {
		return x.ShopProducts
	}
	return nil
}

type Product struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID               int64               `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Title            string              `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Comment          string              `protobuf:"bytes,3,opt,name=comment,proto3" json:"comment,omitempty"`
	Active           bool                `protobuf:"varint,4,opt,name=active,proto3" json:"active,omitempty"`
	Preview          string              `protobuf:"bytes,5,opt,name=preview,proto3" json:"preview,omitempty"`
	ShopProductLinks []*ShopProductLinks `protobuf:"bytes,6,rep,name=shopProductLinks,proto3" json:"shopProductLinks,omitempty"`
	Brand            *Brand              `protobuf:"bytes,7,opt,name=brand,proto3" json:"brand,omitempty"`
	Purchase         float32             `protobuf:"fixed32,8,opt,name=purchase,proto3" json:"purchase,omitempty"`
}

func (x *Product) Reset() {
	*x = Product{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cerasusV3_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Product) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Product) ProtoMessage() {}

func (x *Product) ProtoReflect() protoreflect.Message {
	mi := &file_cerasusV3_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Product.ProtoReflect.Descriptor instead.
func (*Product) Descriptor() ([]byte, []int) {
	return file_cerasusV3_proto_rawDescGZIP(), []int{26}
}

func (x *Product) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *Product) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Product) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *Product) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *Product) GetPreview() string {
	if x != nil {
		return x.Preview
	}
	return ""
}

func (x *Product) GetShopProductLinks() []*ShopProductLinks {
	if x != nil {
		return x.ShopProductLinks
	}
	return nil
}

func (x *Product) GetBrand() *Brand {
	if x != nil {
		return x.Brand
	}
	return nil
}

func (x *Product) GetPurchase() float32 {
	if x != nil {
		return x.Purchase
	}
	return 0
}

type ProductList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Products   []*Product  `protobuf:"bytes,1,rep,name=products,proto3" json:"products,omitempty"`
	Pagination *Pagination `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *ProductList) Reset() {
	*x = ProductList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cerasusV3_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductList) ProtoMessage() {}

func (x *ProductList) ProtoReflect() protoreflect.Message {
	mi := &file_cerasusV3_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductList.ProtoReflect.Descriptor instead.
func (*ProductList) Descriptor() ([]byte, []int) {
	return file_cerasusV3_proto_rawDescGZIP(), []int{27}
}

func (x *ProductList) GetProducts() []*Product {
	if x != nil {
		return x.Products
	}
	return nil
}

func (x *ProductList) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type Purchase struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Purchase float32 `protobuf:"fixed32,1,opt,name=purchase,proto3" json:"purchase,omitempty"`
	DateFrom string  `protobuf:"bytes,2,opt,name=date_from,json=dateFrom,proto3" json:"date_from,omitempty"`
	ID       int64   `protobuf:"varint,3,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *Purchase) Reset() {
	*x = Purchase{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cerasusV3_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Purchase) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Purchase) ProtoMessage() {}

func (x *Purchase) ProtoReflect() protoreflect.Message {
	mi := &file_cerasusV3_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Purchase.ProtoReflect.Descriptor instead.
func (*Purchase) Descriptor() ([]byte, []int) {
	return file_cerasusV3_proto_rawDescGZIP(), []int{28}
}

func (x *Purchase) GetPurchase() float32 {
	if x != nil {
		return x.Purchase
	}
	return 0
}

func (x *Purchase) GetDateFrom() string {
	if x != nil {
		return x.DateFrom
	}
	return ""
}

func (x *Purchase) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

type ShopProductList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShopProducts []*ShopProduct `protobuf:"bytes,1,rep,name=shopProducts,proto3" json:"shopProducts,omitempty"`
}

func (x *ShopProductList) Reset() {
	*x = ShopProductList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cerasusV3_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShopProductList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShopProductList) ProtoMessage() {}

func (x *ShopProductList) ProtoReflect() protoreflect.Message {
	mi := &file_cerasusV3_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShopProductList.ProtoReflect.Descriptor instead.
func (*ShopProductList) Descriptor() ([]byte, []int) {
	return file_cerasusV3_proto_rawDescGZIP(), []int{29}
}

func (x *ShopProductList) GetShopProducts() []*ShopProduct {
	if x != nil {
		return x.ShopProducts
	}
	return nil
}

type Shop struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID     int64  `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Title  string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Code   string `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`
	Logo   string `protobuf:"bytes,4,opt,name=logo,proto3" json:"logo,omitempty"`
	Url    string `protobuf:"bytes,5,opt,name=url,proto3" json:"url,omitempty"`
	Active bool   `protobuf:"varint,6,opt,name=active,proto3" json:"active,omitempty"`
}

func (x *Shop) Reset() {
	*x = Shop{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cerasusV3_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Shop) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Shop) ProtoMessage() {}

func (x *Shop) ProtoReflect() protoreflect.Message {
	mi := &file_cerasusV3_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Shop.ProtoReflect.Descriptor instead.
func (*Shop) Descriptor() ([]byte, []int) {
	return file_cerasusV3_proto_rawDescGZIP(), []int{30}
}

func (x *Shop) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *Shop) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Shop) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *Shop) GetLogo() string {
	if x != nil {
		return x.Logo
	}
	return ""
}

func (x *Shop) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Shop) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

type AppShopData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Shop     *Shop `protobuf:"bytes,1,opt,name=shop,proto3" json:"shop,omitempty"`
	Auth     bool  `protobuf:"varint,2,opt,name=auth,proto3" json:"auth,omitempty"`
	Products bool  `protobuf:"varint,3,opt,name=products,proto3" json:"products,omitempty"`
	Sales    bool  `protobuf:"varint,4,opt,name=sales,proto3" json:"sales,omitempty"`
	Orders   bool  `protobuf:"varint,5,opt,name=orders,proto3" json:"orders,omitempty"`
	Days     bool  `protobuf:"varint,6,opt,name=days,proto3" json:"days,omitempty"`
	Active   bool  `protobuf:"varint,7,opt,name=active,proto3" json:"active,omitempty"`
	Access   bool  `protobuf:"varint,8,opt,name=access,proto3" json:"access,omitempty"`
}

func (x *AppShopData) Reset() {
	*x = AppShopData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cerasusV3_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppShopData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppShopData) ProtoMessage() {}

func (x *AppShopData) ProtoReflect() protoreflect.Message {
	mi := &file_cerasusV3_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppShopData.ProtoReflect.Descriptor instead.
func (*AppShopData) Descriptor() ([]byte, []int) {
	return file_cerasusV3_proto_rawDescGZIP(), []int{31}
}

func (x *AppShopData) GetShop() *Shop {
	if x != nil {
		return x.Shop
	}
	return nil
}

func (x *AppShopData) GetAuth() bool {
	if x != nil {
		return x.Auth
	}
	return false
}

func (x *AppShopData) GetProducts() bool {
	if x != nil {
		return x.Products
	}
	return false
}

func (x *AppShopData) GetSales() bool {
	if x != nil {
		return x.Sales
	}
	return false
}

func (x *AppShopData) GetOrders() bool {
	if x != nil {
		return x.Orders
	}
	return false
}

func (x *AppShopData) GetDays() bool {
	if x != nil {
		return x.Days
	}
	return false
}

func (x *AppShopData) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *AppShopData) GetAccess() bool {
	if x != nil {
		return x.Access
	}
	return false
}

type UserAppData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Shops []*AppShopData `protobuf:"bytes,1,rep,name=shops,proto3" json:"shops,omitempty"`
}

func (x *UserAppData) Reset() {
	*x = UserAppData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cerasusV3_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAppData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAppData) ProtoMessage() {}

func (x *UserAppData) ProtoReflect() protoreflect.Message {
	mi := &file_cerasusV3_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAppData.ProtoReflect.Descriptor instead.
func (*UserAppData) Descriptor() ([]byte, []int) {
	return file_cerasusV3_proto_rawDescGZIP(), []int{32}
}

func (x *UserAppData) GetShops() []*AppShopData {
	if x != nil {
		return x.Shops
	}
	return nil
}

type Tax struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Year        int32   `protobuf:"varint,1,opt,name=year,proto3" json:"year,omitempty"`
	Value       float32 `protobuf:"fixed32,2,opt,name=value,proto3" json:"value,omitempty"`
	Name        string  `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Description string  `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	ID          int64   `protobuf:"varint,5,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *Tax) Reset() {
	*x = Tax{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cerasusV3_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tax) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tax) ProtoMessage() {}

func (x *Tax) ProtoReflect() protoreflect.Message {
	mi := &file_cerasusV3_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tax.ProtoReflect.Descriptor instead.
func (*Tax) Descriptor() ([]byte, []int) {
	return file_cerasusV3_proto_rawDescGZIP(), []int{33}
}

func (x *Tax) GetYear() int32 {
	if x != nil {
		return x.Year
	}
	return 0
}

func (x *Tax) GetValue() float32 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *Tax) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Tax) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Tax) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

type Taxes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*Tax `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *Taxes) Reset() {
	*x = Taxes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cerasusV3_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Taxes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Taxes) ProtoMessage() {}

func (x *Taxes) ProtoReflect() protoreflect.Message {
	mi := &file_cerasusV3_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Taxes.ProtoReflect.Descriptor instead.
func (*Taxes) Descriptor() ([]byte, []int) {
	return file_cerasusV3_proto_rawDescGZIP(), []int{34}
}

func (x *Taxes) GetData() []*Tax {
	if x != nil {
		return x.Data
	}
	return nil
}

type AppTaxes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Taxes []*Tax  `protobuf:"bytes,1,rep,name=taxes,proto3" json:"taxes,omitempty"`
	Years []int32 `protobuf:"varint,2,rep,packed,name=years,proto3" json:"years,omitempty"`
}

func (x *AppTaxes) Reset() {
	*x = AppTaxes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cerasusV3_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppTaxes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppTaxes) ProtoMessage() {}

func (x *AppTaxes) ProtoReflect() protoreflect.Message {
	mi := &file_cerasusV3_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppTaxes.ProtoReflect.Descriptor instead.
func (*AppTaxes) Descriptor() ([]byte, []int) {
	return file_cerasusV3_proto_rawDescGZIP(), []int{35}
}

func (x *AppTaxes) GetTaxes() []*Tax {
	if x != nil {
		return x.Taxes
	}
	return nil
}

func (x *AppTaxes) GetYears() []int32 {
	if x != nil {
		return x.Years
	}
	return nil
}

type ShopProductUrlSetter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Auth          *Auth  `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"`
	Shop          string `protobuf:"bytes,2,opt,name=shop,proto3" json:"shop,omitempty"`
	ShopProductID int64  `protobuf:"varint,3,opt,name=shopProductID,proto3" json:"shopProductID,omitempty"`
	Url           string `protobuf:"bytes,5,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *ShopProductUrlSetter) Reset() {
	*x = ShopProductUrlSetter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cerasusV3_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShopProductUrlSetter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShopProductUrlSetter) ProtoMessage() {}

func (x *ShopProductUrlSetter) ProtoReflect() protoreflect.Message {
	mi := &file_cerasusV3_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShopProductUrlSetter.ProtoReflect.Descriptor instead.
func (*ShopProductUrlSetter) Descriptor() ([]byte, []int) {
	return file_cerasusV3_proto_rawDescGZIP(), []int{36}
}

func (x *ShopProductUrlSetter) GetAuth() *Auth {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *ShopProductUrlSetter) GetShop() string {
	if x != nil {
		return x.Shop
	}
	return ""
}

func (x *ShopProductUrlSetter) GetShopProductID() int64 {
	if x != nil {
		return x.ShopProductID
	}
	return 0
}

func (x *ShopProductUrlSetter) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type GeoPlace struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID   int64   `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Name string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Lat  float32 `protobuf:"fixed32,3,opt,name=lat,proto3" json:"lat,omitempty"`
	Lon  float32 `protobuf:"fixed32,4,opt,name=lon,proto3" json:"lon,omitempty"`
}

func (x *GeoPlace) Reset() {
	*x = GeoPlace{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cerasusV3_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GeoPlace) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeoPlace) ProtoMessage() {}

func (x *GeoPlace) ProtoReflect() protoreflect.Message {
	mi := &file_cerasusV3_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeoPlace.ProtoReflect.Descriptor instead.
func (*GeoPlace) Descriptor() ([]byte, []int) {
	return file_cerasusV3_proto_rawDescGZIP(), []int{37}
}

func (x *GeoPlace) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *GeoPlace) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GeoPlace) GetLat() float32 {
	if x != nil {
		return x.Lat
	}
	return 0
}

func (x *GeoPlace) GetLon() float32 {
	if x != nil {
		return x.Lon
	}
	return 0
}

type GeoPlaceData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Country *GeoPlace `protobuf:"bytes,1,opt,name=country,proto3" json:"country,omitempty"`
	Region  *GeoPlace `protobuf:"bytes,2,opt,name=region,proto3" json:"region,omitempty"`
	City    *GeoPlace `protobuf:"bytes,3,opt,name=city,proto3" json:"city,omitempty"`
}

func (x *GeoPlaceData) Reset() {
	*x = GeoPlaceData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cerasusV3_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GeoPlaceData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeoPlaceData) ProtoMessage() {}

func (x *GeoPlaceData) ProtoReflect() protoreflect.Message {
	mi := &file_cerasusV3_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeoPlaceData.ProtoReflect.Descriptor instead.
func (*GeoPlaceData) Descriptor() ([]byte, []int) {
	return file_cerasusV3_proto_rawDescGZIP(), []int{38}
}

func (x *GeoPlaceData) GetCountry() *GeoPlace {
	if x != nil {
		return x.Country
	}
	return nil
}

func (x *GeoPlaceData) GetRegion() *GeoPlace {
	if x != nil {
		return x.Region
	}
	return nil
}

func (x *GeoPlaceData) GetCity() *GeoPlace {
	if x != nil {
		return x.City
	}
	return nil
}

type Order struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID             int64         `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	CompanyID      int64         `protobuf:"varint,2,opt,name=companyID,proto3" json:"companyID,omitempty"`
	OrderDatetime  string        `protobuf:"bytes,3,opt,name=orderDatetime,proto3" json:"orderDatetime,omitempty"`
	Shop           string        `protobuf:"bytes,4,opt,name=shop,proto3" json:"shop,omitempty"`
	DeliveryScheme string        `protobuf:"bytes,5,opt,name=deliveryScheme,proto3" json:"deliveryScheme,omitempty"`
	OrderShopID    int64         `protobuf:"varint,6,opt,name=orderShopID,proto3" json:"orderShopID,omitempty"`
	Product        *Product      `protobuf:"bytes,7,opt,name=product,proto3" json:"product,omitempty"`
	ShopProduct    *ShopProduct  `protobuf:"bytes,8,opt,name=shopProduct,proto3" json:"shopProduct,omitempty"`
	Price          float32       `protobuf:"fixed32,9,opt,name=price,proto3" json:"price,omitempty"`
	Count          int32         `protobuf:"varint,10,opt,name=count,proto3" json:"count,omitempty"`
	Cancelled      bool          `protobuf:"varint,11,opt,name=cancelled,proto3" json:"cancelled,omitempty"`
	ProductID      int64         `protobuf:"varint,12,opt,name=productID,proto3" json:"productID,omitempty"`
	ShopProductID  int64         `protobuf:"varint,13,opt,name=shopProductID,proto3" json:"shopProductID,omitempty"`
	OrderType      string        `protobuf:"bytes,14,opt,name=orderType,proto3" json:"orderType,omitempty"`
	Place          *GeoPlaceData `protobuf:"bytes,15,opt,name=place,proto3" json:"place,omitempty"`
	OrderDate      string        `protobuf:"bytes,16,opt,name=orderDate,proto3" json:"orderDate,omitempty"`
}

func (x *Order) Reset() {
	*x = Order{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cerasusV3_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Order) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Order) ProtoMessage() {}

func (x *Order) ProtoReflect() protoreflect.Message {
	mi := &file_cerasusV3_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Order.ProtoReflect.Descriptor instead.
func (*Order) Descriptor() ([]byte, []int) {
	return file_cerasusV3_proto_rawDescGZIP(), []int{39}
}

func (x *Order) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *Order) GetCompanyID() int64 {
	if x != nil {
		return x.CompanyID
	}
	return 0
}

func (x *Order) GetOrderDatetime() string {
	if x != nil {
		return x.OrderDatetime
	}
	return ""
}

func (x *Order) GetShop() string {
	if x != nil {
		return x.Shop
	}
	return ""
}

func (x *Order) GetDeliveryScheme() string {
	if x != nil {
		return x.DeliveryScheme
	}
	return ""
}

func (x *Order) GetOrderShopID() int64 {
	if x != nil {
		return x.OrderShopID
	}
	return 0
}

func (x *Order) GetProduct() *Product {
	if x != nil {
		return x.Product
	}
	return nil
}

func (x *Order) GetShopProduct() *ShopProduct {
	if x != nil {
		return x.ShopProduct
	}
	return nil
}

func (x *Order) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *Order) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *Order) GetCancelled() bool {
	if x != nil {
		return x.Cancelled
	}
	return false
}

func (x *Order) GetProductID() int64 {
	if x != nil {
		return x.ProductID
	}
	return 0
}

func (x *Order) GetShopProductID() int64 {
	if x != nil {
		return x.ShopProductID
	}
	return 0
}

func (x *Order) GetOrderType() string {
	if x != nil {
		return x.OrderType
	}
	return ""
}

func (x *Order) GetPlace() *GeoPlaceData {
	if x != nil {
		return x.Place
	}
	return nil
}

func (x *Order) GetOrderDate() string {
	if x != nil {
		return x.OrderDate
	}
	return ""
}

type Orders struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Orders []*Order `protobuf:"bytes,1,rep,name=orders,proto3" json:"orders,omitempty"`
}

func (x *Orders) Reset() {
	*x = Orders{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cerasusV3_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Orders) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Orders) ProtoMessage() {}

func (x *Orders) ProtoReflect() protoreflect.Message {
	mi := &file_cerasusV3_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Orders.ProtoReflect.Descriptor instead.
func (*Orders) Descriptor() ([]byte, []int) {
	return file_cerasusV3_proto_rawDescGZIP(), []int{40}
}

func (x *Orders) GetOrders() []*Order {
	if x != nil {
		return x.Orders
	}
	return nil
}

type SaleDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Date  string  `protobuf:"bytes,2,opt,name=date,proto3" json:"date,omitempty"`
	Value float32 `protobuf:"fixed32,3,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *SaleDetail) Reset() {
	*x = SaleDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cerasusV3_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaleDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaleDetail) ProtoMessage() {}

func (x *SaleDetail) ProtoReflect() protoreflect.Message {
	mi := &file_cerasusV3_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaleDetail.ProtoReflect.Descriptor instead.
func (*SaleDetail) Descriptor() ([]byte, []int) {
	return file_cerasusV3_proto_rawDescGZIP(), []int{41}
}

func (x *SaleDetail) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SaleDetail) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *SaleDetail) GetValue() float32 {
	if x != nil {
		return x.Value
	}
	return 0
}

type Sale struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID               int64         `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	CompanyID        int64         `protobuf:"varint,2,opt,name=companyID,proto3" json:"companyID,omitempty"`
	SaleDate         string        `protobuf:"bytes,3,opt,name=saleDate,proto3" json:"saleDate,omitempty"`
	Shop             string        `protobuf:"bytes,4,opt,name=shop,proto3" json:"shop,omitempty"`
	DeliveryScheme   string        `protobuf:"bytes,5,opt,name=deliveryScheme,proto3" json:"deliveryScheme,omitempty"`
	ShopSaleID       int64         `protobuf:"varint,6,opt,name=shopSaleID,proto3" json:"shopSaleID,omitempty"`
	ShopProduct      *ShopProduct  `protobuf:"bytes,7,opt,name=shopProduct,proto3" json:"shopProduct,omitempty"`
	Product          *Product      `protobuf:"bytes,8,opt,name=product,proto3" json:"product,omitempty"`
	ShopProductID    int64         `protobuf:"varint,9,opt,name=shopProductID,proto3" json:"shopProductID,omitempty"`
	ProductID        int64         `protobuf:"varint,10,opt,name=productID,proto3" json:"productID,omitempty"`
	Realisation      float32       `protobuf:"fixed32,11,opt,name=realisation,proto3" json:"realisation,omitempty"`
	Pay              float32       `protobuf:"fixed32,12,opt,name=pay,proto3" json:"pay,omitempty"`
	Count            int32         `protobuf:"varint,13,opt,name=count,proto3" json:"count,omitempty"`
	Tax              float32       `protobuf:"fixed32,14,opt,name=tax,proto3" json:"tax,omitempty"`
	Purchase         float32       `protobuf:"fixed32,15,opt,name=purchase,proto3" json:"purchase,omitempty"`
	Margin           float32       `protobuf:"fixed32,16,opt,name=margin,proto3" json:"margin,omitempty"`
	Marginality      float32       `protobuf:"fixed32,17,opt,name=marginality,proto3" json:"marginality,omitempty"`
	Final            bool          `protobuf:"varint,18,opt,name=final,proto3" json:"final,omitempty"`
	Returns          int32         `protobuf:"varint,19,opt,name=returns,proto3" json:"returns,omitempty"`
	MarginalityLevel Level         `protobuf:"varint,20,opt,name=marginalityLevel,proto3,enum=cerasusV3.Level" json:"marginalityLevel,omitempty"`
	Type             string        `protobuf:"bytes,21,opt,name=type,proto3" json:"type,omitempty"`
	Details          []*SaleDetail `protobuf:"bytes,22,rep,name=details,proto3" json:"details,omitempty"`
	Date             string        `protobuf:"bytes,23,opt,name=date,proto3" json:"date,omitempty"`
}

func (x *Sale) Reset() {
	*x = Sale{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cerasusV3_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Sale) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sale) ProtoMessage() {}

func (x *Sale) ProtoReflect() protoreflect.Message {
	mi := &file_cerasusV3_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sale.ProtoReflect.Descriptor instead.
func (*Sale) Descriptor() ([]byte, []int) {
	return file_cerasusV3_proto_rawDescGZIP(), []int{42}
}

func (x *Sale) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *Sale) GetCompanyID() int64 {
	if x != nil {
		return x.CompanyID
	}
	return 0
}

func (x *Sale) GetSaleDate() string {
	if x != nil {
		return x.SaleDate
	}
	return ""
}

func (x *Sale) GetShop() string {
	if x != nil {
		return x.Shop
	}
	return ""
}

func (x *Sale) GetDeliveryScheme() string {
	if x != nil {
		return x.DeliveryScheme
	}
	return ""
}

func (x *Sale) GetShopSaleID() int64 {
	if x != nil {
		return x.ShopSaleID
	}
	return 0
}

func (x *Sale) GetShopProduct() *ShopProduct {
	if x != nil {
		return x.ShopProduct
	}
	return nil
}

func (x *Sale) GetProduct() *Product {
	if x != nil {
		return x.Product
	}
	return nil
}

func (x *Sale) GetShopProductID() int64 {
	if x != nil {
		return x.ShopProductID
	}
	return 0
}

func (x *Sale) GetProductID() int64 {
	if x != nil {
		return x.ProductID
	}
	return 0
}

func (x *Sale) GetRealisation() float32 {
	if x != nil {
		return x.Realisation
	}
	return 0
}

func (x *Sale) GetPay() float32 {
	if x != nil {
		return x.Pay
	}
	return 0
}

func (x *Sale) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *Sale) GetTax() float32 {
	if x != nil {
		return x.Tax
	}
	return 0
}

func (x *Sale) GetPurchase() float32 {
	if x != nil {
		return x.Purchase
	}
	return 0
}

func (x *Sale) GetMargin() float32 {
	if x != nil {
		return x.Margin
	}
	return 0
}

func (x *Sale) GetMarginality() float32 {
	if x != nil {
		return x.Marginality
	}
	return 0
}

func (x *Sale) GetFinal() bool {
	if x != nil {
		return x.Final
	}
	return false
}

func (x *Sale) GetReturns() int32 {
	if x != nil {
		return x.Returns
	}
	return 0
}

func (x *Sale) GetMarginalityLevel() Level {
	if x != nil {
		return x.MarginalityLevel
	}
	return Level_NOLEVEL
}

func (x *Sale) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Sale) GetDetails() []*SaleDetail {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *Sale) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

type Sales struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sales      []*Sale     `protobuf:"bytes,1,rep,name=sales,proto3" json:"sales,omitempty"`
	Pagination *Pagination `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *Sales) Reset() {
	*x = Sales{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cerasusV3_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Sales) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sales) ProtoMessage() {}

func (x *Sales) ProtoReflect() protoreflect.Message {
	mi := &file_cerasusV3_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sales.ProtoReflect.Descriptor instead.
func (*Sales) Descriptor() ([]byte, []int) {
	return file_cerasusV3_proto_rawDescGZIP(), []int{43}
}

func (x *Sales) GetSales() []*Sale {
	if x != nil {
		return x.Sales
	}
	return nil
}

func (x *Sales) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type Warehouse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name         string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	OfficeID     int64  `protobuf:"varint,2,opt,name=officeID,proto3" json:"officeID,omitempty"`
	WarehouseID  int64  `protobuf:"varint,3,opt,name=warehouseID,proto3" json:"warehouseID,omitempty"`
	CargoType    int32  `protobuf:"varint,4,opt,name=cargoType,proto3" json:"cargoType,omitempty"`
	DeliveryType int32  `protobuf:"varint,5,opt,name=deliveryType,proto3" json:"deliveryType,omitempty"`
	Active       bool   `protobuf:"varint,6,opt,name=active,proto3" json:"active,omitempty"`
	Updated      string `protobuf:"bytes,7,opt,name=updated,proto3" json:"updated,omitempty"`
}

func (x *Warehouse) Reset() {
	*x = Warehouse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cerasusV3_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Warehouse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Warehouse) ProtoMessage() {}

func (x *Warehouse) ProtoReflect() protoreflect.Message {
	mi := &file_cerasusV3_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Warehouse.ProtoReflect.Descriptor instead.
func (*Warehouse) Descriptor() ([]byte, []int) {
	return file_cerasusV3_proto_rawDescGZIP(), []int{44}
}

func (x *Warehouse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Warehouse) GetOfficeID() int64 {
	if x != nil {
		return x.OfficeID
	}
	return 0
}

func (x *Warehouse) GetWarehouseID() int64 {
	if x != nil {
		return x.WarehouseID
	}
	return 0
}

func (x *Warehouse) GetCargoType() int32 {
	if x != nil {
		return x.CargoType
	}
	return 0
}

func (x *Warehouse) GetDeliveryType() int32 {
	if x != nil {
		return x.DeliveryType
	}
	return 0
}

func (x *Warehouse) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *Warehouse) GetUpdated() string {
	if x != nil {
		return x.Updated
	}
	return ""
}

type Warehouses struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Warehouses []*Warehouse `protobuf:"bytes,1,rep,name=warehouses,proto3" json:"warehouses,omitempty"`
}

func (x *Warehouses) Reset() {
	*x = Warehouses{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cerasusV3_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Warehouses) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Warehouses) ProtoMessage() {}

func (x *Warehouses) ProtoReflect() protoreflect.Message {
	mi := &file_cerasusV3_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Warehouses.ProtoReflect.Descriptor instead.
func (*Warehouses) Descriptor() ([]byte, []int) {
	return file_cerasusV3_proto_rawDescGZIP(), []int{45}
}

func (x *Warehouses) GetWarehouses() []*Warehouse {
	if x != nil {
		return x.Warehouses
	}
	return nil
}

type LineGraphDataset struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type string    `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Data []float32 `protobuf:"fixed32,2,rep,packed,name=data,proto3" json:"data,omitempty"`
	Min  float32   `protobuf:"fixed32,3,opt,name=min,proto3" json:"min,omitempty"`
	Max  float32   `protobuf:"fixed32,4,opt,name=max,proto3" json:"max,omitempty"`
}

func (x *LineGraphDataset) Reset() {
	*x = LineGraphDataset{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cerasusV3_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LineGraphDataset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LineGraphDataset) ProtoMessage() {}

func (x *LineGraphDataset) ProtoReflect() protoreflect.Message {
	mi := &file_cerasusV3_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LineGraphDataset.ProtoReflect.Descriptor instead.
func (*LineGraphDataset) Descriptor() ([]byte, []int) {
	return file_cerasusV3_proto_rawDescGZIP(), []int{46}
}

func (x *LineGraphDataset) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *LineGraphDataset) GetData() []float32 {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *LineGraphDataset) GetMin() float32 {
	if x != nil {
		return x.Min
	}
	return 0
}

func (x *LineGraphDataset) GetMax() float32 {
	if x != nil {
		return x.Max
	}
	return 0
}

type LineGraphShop struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Shop  string `protobuf:"bytes,1,opt,name=shop,proto3" json:"shop,omitempty"`
	Index int32  `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
}

func (x *LineGraphShop) Reset() {
	*x = LineGraphShop{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cerasusV3_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LineGraphShop) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LineGraphShop) ProtoMessage() {}

func (x *LineGraphShop) ProtoReflect() protoreflect.Message {
	mi := &file_cerasusV3_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LineGraphShop.ProtoReflect.Descriptor instead.
func (*LineGraphShop) Descriptor() ([]byte, []int) {
	return file_cerasusV3_proto_rawDescGZIP(), []int{47}
}

func (x *LineGraphShop) GetShop() string {
	if x != nil {
		return x.Shop
	}
	return ""
}

func (x *LineGraphShop) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

type LineGraph struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Labels      []string            `protobuf:"bytes,1,rep,name=labels,proto3" json:"labels,omitempty"`
	Datasets    []*LineGraphDataset `protobuf:"bytes,2,rep,name=datasets,proto3" json:"datasets,omitempty"`
	Shops       []*LineGraphShop    `protobuf:"bytes,3,rep,name=shops,proto3" json:"shops,omitempty"`
	GraphicName string              `protobuf:"bytes,4,opt,name=graphicName,proto3" json:"graphicName,omitempty"`
}

func (x *LineGraph) Reset() {
	*x = LineGraph{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cerasusV3_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LineGraph) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LineGraph) ProtoMessage() {}

func (x *LineGraph) ProtoReflect() protoreflect.Message {
	mi := &file_cerasusV3_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LineGraph.ProtoReflect.Descriptor instead.
func (*LineGraph) Descriptor() ([]byte, []int) {
	return file_cerasusV3_proto_rawDescGZIP(), []int{48}
}

func (x *LineGraph) GetLabels() []string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *LineGraph) GetDatasets() []*LineGraphDataset {
	if x != nil {
		return x.Datasets
	}
	return nil
}

func (x *LineGraph) GetShops() []*LineGraphShop {
	if x != nil {
		return x.Shops
	}
	return nil
}

func (x *LineGraph) GetGraphicName() string {
	if x != nil {
		return x.GraphicName
	}
	return ""
}

type LineGraphics struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Graphics []*LineGraph `protobuf:"bytes,1,rep,name=graphics,proto3" json:"graphics,omitempty"`
}

func (x *LineGraphics) Reset() {
	*x = LineGraphics{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cerasusV3_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LineGraphics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LineGraphics) ProtoMessage() {}

func (x *LineGraphics) ProtoReflect() protoreflect.Message {
	mi := &file_cerasusV3_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LineGraphics.ProtoReflect.Descriptor instead.
func (*LineGraphics) Descriptor() ([]byte, []int) {
	return file_cerasusV3_proto_rawDescGZIP(), []int{49}
}

func (x *LineGraphics) GetGraphics() []*LineGraph {
	if x != nil {
		return x.Graphics
	}
	return nil
}

type LineGraphRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Auth *Auth   `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"`
	T    string  `protobuf:"bytes,2,opt,name=t,proto3" json:"t,omitempty"`
	P    string  `protobuf:"bytes,3,opt,name=p,proto3" json:"p,omitempty"`
	O    string  `protobuf:"bytes,4,opt,name=o,proto3" json:"o,omitempty"`
	Type string  `protobuf:"bytes,5,opt,name=type,proto3" json:"type,omitempty"`
	ID   []int64 `protobuf:"varint,6,rep,packed,name=ID,proto3" json:"ID,omitempty"`
	Shop string  `protobuf:"bytes,7,opt,name=shop,proto3" json:"shop,omitempty"`
}

func (x *LineGraphRequest) Reset() {
	*x = LineGraphRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cerasusV3_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LineGraphRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LineGraphRequest) ProtoMessage() {}

func (x *LineGraphRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cerasusV3_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LineGraphRequest.ProtoReflect.Descriptor instead.
func (*LineGraphRequest) Descriptor() ([]byte, []int) {
	return file_cerasusV3_proto_rawDescGZIP(), []int{50}
}

func (x *LineGraphRequest) GetAuth() *Auth {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *LineGraphRequest) GetT() string {
	if x != nil {
		return x.T
	}
	return ""
}

func (x *LineGraphRequest) GetP() string {
	if x != nil {
		return x.P
	}
	return ""
}

func (x *LineGraphRequest) GetO() string {
	if x != nil {
		return x.O
	}
	return ""
}

func (x *LineGraphRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *LineGraphRequest) GetID() []int64 {
	if x != nil {
		return x.ID
	}
	return nil
}

func (x *LineGraphRequest) GetShop() string {
	if x != nil {
		return x.Shop
	}
	return ""
}

var File_cerasusV3_proto protoreflect.FileDescriptor

var file_cerasusV3_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x09, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x22, 0x27, 0x0a, 0x0b,
	0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x25, 0x0a, 0x09, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x60, 0x0a, 0x0d,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a,
	0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x65,
	0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x04, 0x61, 0x75,
	0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x68,
	0x6f, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x68, 0x6f, 0x70, 0x22, 0x48,
	0x0a, 0x0d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x79, 0x53, 0x68, 0x6f, 0x70, 0x12,
	0x23, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x04,
	0x61, 0x75, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x68, 0x6f, 0x70, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x73, 0x68, 0x6f, 0x70, 0x22, 0x56, 0x0a, 0x0b, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x42, 0x79, 0x49, 0x44, 0x12, 0x23, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56,
	0x33, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x12, 0x0e, 0x0a, 0x02,
	0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04,
	0x73, 0x68, 0x6f, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x68, 0x6f, 0x70,
	0x22, 0x57, 0x0a, 0x0c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x79, 0x49, 0x44, 0x53,
	0x12, 0x23, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52,
	0x04, 0x61, 0x75, 0x74, 0x68, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x03, 0x52, 0x02, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x68, 0x6f, 0x70, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x68, 0x6f, 0x70, 0x22, 0xcd, 0x01, 0x0a, 0x0e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x79, 0x44, 0x61, 0x74, 0x65, 0x73, 0x12, 0x23, 0x0a, 0x04,
	0x61, 0x75, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x65, 0x72,
	0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x04, 0x61, 0x75, 0x74,
	0x68, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x49, 0x44, 0x12, 0x10, 0x0a, 0x03, 0x49, 0x44, 0x53, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x03, 0x52, 0x03, 0x49, 0x44, 0x53, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x68, 0x6f, 0x70, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x68, 0x6f, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x73,
	0x74, 0x65, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x74, 0x65, 0x70, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x6e, 0x0a, 0x0c, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x6c,
	0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x49,
	0x44, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x22, 0x3e, 0x0a, 0x0a, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x05, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x22, 0x36, 0x0a, 0x0a, 0x50, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70,
	0x61, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65,
	0x73, 0x22, 0x8f, 0x01, 0x0a, 0x09, 0x51, 0x75, 0x65, 0x75, 0x65, 0x72, 0x4a, 0x6f, 0x62, 0x12,
	0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x44, 0x12,
	0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x6f, 0x6e,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x64, 0x6f, 0x6e, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x22, 0xaf, 0x02, 0x0a, 0x03, 0x4c, 0x6f, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x65, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x65, 0x74, 0x69, 0x6d,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a,
	0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x65,
	0x76, 0x65, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x49, 0x44, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x69, 0x65,
	0x77, 0x65, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x76, 0x69, 0x65, 0x77, 0x65,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x74, 0x69, 0x6d, 0x65, 0x22, 0x38, 0x0a, 0x0b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x29, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22,
	0x8d, 0x01, 0x0a, 0x04, 0x41, 0x75, 0x74, 0x68, 0x12, 0x28, 0x0a, 0x0f, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x12, 0x25, 0x0a, 0x05, 0x72, 0x6f, 0x6c, 0x65,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75,
	0x73, 0x56, 0x33, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x22,
	0x5b, 0x0a, 0x07, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x62,
	0x72, 0x61, 0x6e, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x22, 0x76, 0x0a, 0x0b,
	0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x09, 0x63,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x69, 0x65, 0x73, 0x12, 0x35, 0x0a,
	0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x50, 0x61,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x40, 0x0a, 0x04, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x2e, 0x0a, 0x05, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x12,
	0x25, 0x0a, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x52,
	0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x22, 0x1d, 0x0a, 0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xa3, 0x02, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x0e,
	0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x44, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x76, 0x65, 0x72, 0x69,
	0x66, 0x79, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x76,
	0x65, 0x72, 0x69, 0x66, 0x79, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68,
	0x6f, 0x6e, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x50, 0x68, 0x6f,
	0x6e, 0x65, 0x12, 0x2c, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e,
	0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x12, 0x25, 0x0a, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x52, 0x6f, 0x6c, 0x65,
	0x52, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x2e, 0x0a, 0x05, 0x55,
	0x73, 0x65, 0x72, 0x73, 0x12, 0x25, 0x0a, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x22, 0xa3, 0x01, 0x0a, 0x05,
	0x42, 0x72, 0x61, 0x6e, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6c,
	0x6f, 0x67, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x6f, 0x67, 0x6f, 0x12,
	0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72,
	0x6c, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x06, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x69, 0x6e,
	0x6b, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x6c, 0x69, 0x6e, 0x6b, 0x65,
	0x64, 0x22, 0x32, 0x0a, 0x06, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x73, 0x12, 0x28, 0x0a, 0x06, 0x62,
	0x72, 0x61, 0x6e, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x65,
	0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x52, 0x06, 0x62,
	0x72, 0x61, 0x6e, 0x64, 0x73, 0x22, 0x1a, 0x0a, 0x08, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x49, 0x44,
	0x53, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x02, 0x49,
	0x44, 0x22, 0xb3, 0x02, 0x0a, 0x0b, 0x53, 0x68, 0x6f, 0x70, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49,
	0x44, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x72, 0x74, 0x69, 0x63,
	0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x70, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x16, 0x0a,
	0x06, 0x77, 0x62, 0x53, 0x6b, 0x75, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x77,
	0x62, 0x53, 0x6b, 0x75, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x7a, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x49, 0x44, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6f, 0x7a, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x79, 0x6d, 0x4f, 0x66, 0x66,
	0x65, 0x72, 0x49, 0x44, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x79, 0x6d, 0x4f, 0x66,
	0x66, 0x65, 0x72, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x62, 0x4e, 0x4d, 0x49, 0x44, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x77, 0x62, 0x4e, 0x4d, 0x49, 0x44, 0x12, 0x14, 0x0a,
	0x05, 0x6f, 0x7a, 0x53, 0x6b, 0x75, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6f, 0x7a,
	0x53, 0x6b, 0x75, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49,
	0x44, 0x12, 0x14, 0x0a, 0x05, 0x79, 0x6d, 0x53, 0x6b, 0x75, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x79, 0x6d, 0x53, 0x6b, 0x75, 0x22, 0x90, 0x01, 0x0a, 0x10, 0x53, 0x68, 0x6f, 0x70,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x12, 0x1a, 0x0a, 0x08,
	0x73, 0x68, 0x6f, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x73, 0x68, 0x6f, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x68, 0x6f, 0x70,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52,
	0x0d, 0x73, 0x68, 0x6f, 0x70, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x12, 0x3a,
	0x0a, 0x0c, 0x73, 0x68, 0x6f, 0x70, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33,
	0x2e, 0x53, 0x68, 0x6f, 0x70, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x0c, 0x73, 0x68,
	0x6f, 0x70, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x22, 0x88, 0x02, 0x0a, 0x07, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x70, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x70, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x12, 0x47, 0x0a, 0x10, 0x73, 0x68, 0x6f, 0x70,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x18, 0x06, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x53,
	0x68, 0x6f, 0x70, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x52,
	0x10, 0x73, 0x68, 0x6f, 0x70, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x69, 0x6e, 0x6b,
	0x73, 0x12, 0x26, 0x0a, 0x05, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x42, 0x72, 0x61,
	0x6e, 0x64, 0x52, 0x05, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x75, 0x72,
	0x63, 0x68, 0x61, 0x73, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x70, 0x75, 0x72,
	0x63, 0x68, 0x61, 0x73, 0x65, 0x22, 0x74, 0x0a, 0x0b, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73,
	0x56, 0x33, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x73, 0x12, 0x35, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73,
	0x75, 0x73, 0x56, 0x33, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x53, 0x0a, 0x08, 0x50,
	0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x75, 0x72, 0x63, 0x68,
	0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x70, 0x75, 0x72, 0x63, 0x68,
	0x61, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x66, 0x72, 0x6f, 0x6d,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x65, 0x46, 0x72, 0x6f, 0x6d,
	0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x44,
	0x22, 0x4d, 0x0a, 0x0f, 0x53, 0x68, 0x6f, 0x70, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x3a, 0x0a, 0x0c, 0x73, 0x68, 0x6f, 0x70, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x65, 0x72, 0x61,
	0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x53, 0x68, 0x6f, 0x70, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x52, 0x0c, 0x73, 0x68, 0x6f, 0x70, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x22,
	0x7e, 0x0a, 0x04, 0x53, 0x68, 0x6f, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x6f, 0x67, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6c, 0x6f, 0x67, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x22,
	0xd4, 0x01, 0x0a, 0x0b, 0x41, 0x70, 0x70, 0x53, 0x68, 0x6f, 0x70, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x23, 0x0a, 0x04, 0x73, 0x68, 0x6f, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x53, 0x68, 0x6f, 0x70, 0x52, 0x04,
	0x73, 0x68, 0x6f, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x05, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x79, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x04, 0x64, 0x61, 0x79, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x3b, 0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x41, 0x70,
	0x70, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2c, 0x0a, 0x05, 0x73, 0x68, 0x6f, 0x70, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33,
	0x2e, 0x41, 0x70, 0x70, 0x53, 0x68, 0x6f, 0x70, 0x44, 0x61, 0x74, 0x61, 0x52, 0x05, 0x73, 0x68,
	0x6f, 0x70, 0x73, 0x22, 0x75, 0x0a, 0x03, 0x54, 0x61, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x79, 0x65,
	0x61, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x79, 0x65, 0x61, 0x72, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x44, 0x22, 0x2b, 0x0a, 0x05, 0x54, 0x61,
	0x78, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x54, 0x61,
	0x78, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x46, 0x0a, 0x08, 0x41, 0x70, 0x70, 0x54, 0x61,
	0x78, 0x65, 0x73, 0x12, 0x24, 0x0a, 0x05, 0x74, 0x61, 0x78, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x54,
	0x61, 0x78, 0x52, 0x05, 0x74, 0x61, 0x78, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x79, 0x65, 0x61,
	0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x05, 0x79, 0x65, 0x61, 0x72, 0x73, 0x22,
	0x87, 0x01, 0x0a, 0x14, 0x53, 0x68, 0x6f, 0x70, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x55,
	0x72, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x65, 0x72, 0x12, 0x23, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73,
	0x56, 0x33, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x68, 0x6f, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x68, 0x6f,
	0x70, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x68, 0x6f, 0x70, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x73, 0x68, 0x6f, 0x70, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0x52, 0x0a, 0x08, 0x47, 0x65, 0x6f,
	0x50, 0x6c, 0x61, 0x63, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x61, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03, 0x6c, 0x61, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6c,
	0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03, 0x6c, 0x6f, 0x6e, 0x22, 0x93, 0x01,
	0x0a, 0x0c, 0x47, 0x65, 0x6f, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2d,
	0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x47, 0x65, 0x6f, 0x50,
	0x6c, 0x61, 0x63, 0x65, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x2b, 0x0a,
	0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x47, 0x65, 0x6f, 0x50, 0x6c, 0x61,
	0x63, 0x65, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x0a, 0x04, 0x63, 0x69,
	0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73,
	0x75, 0x73, 0x56, 0x33, 0x2e, 0x47, 0x65, 0x6f, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x52, 0x04, 0x63,
	0x69, 0x74, 0x79, 0x22, 0x9a, 0x04, 0x0a, 0x05, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x0e, 0x0a,
	0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x44, 0x12, 0x1c, 0x0a,
	0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x12, 0x24, 0x0a, 0x0d, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x44, 0x61, 0x74, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x61, 0x74, 0x65, 0x74, 0x69, 0x6d,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x68, 0x6f, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x73, 0x68, 0x6f, 0x70, 0x12, 0x26, 0x0a, 0x0e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x79, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x64,
	0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x68, 0x6f, 0x70, 0x49, 0x44, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x68, 0x6f, 0x70, 0x49, 0x44, 0x12,
	0x2c, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x38, 0x0a,
	0x0b, 0x73, 0x68, 0x6f, 0x70, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x53,
	0x68, 0x6f, 0x70, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x0b, 0x73, 0x68, 0x6f, 0x70,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x65, 0x64,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x65,
	0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x12,
	0x24, 0x0a, 0x0d, 0x73, 0x68, 0x6f, 0x70, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x73, 0x68, 0x6f, 0x70, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x2d, 0x0a, 0x05, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x47,
	0x65, 0x6f, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x05, 0x70, 0x6c, 0x61,
	0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x61, 0x74, 0x65, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x61, 0x74, 0x65,
	0x22, 0x32, 0x0a, 0x06, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x12, 0x28, 0x0a, 0x06, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x65, 0x72,
	0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x06, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x73, 0x22, 0x4a, 0x0a, 0x0a, 0x53, 0x61, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0xd1, 0x05, 0x0a, 0x04, 0x53, 0x61, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x61, 0x6c, 0x65, 0x44,
	0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x61, 0x6c, 0x65, 0x44,
	0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x68, 0x6f, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x73, 0x68, 0x6f, 0x70, 0x12, 0x26, 0x0a, 0x0e, 0x64, 0x65, 0x6c, 0x69, 0x76,
	0x65, 0x72, 0x79, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x73, 0x68, 0x6f, 0x70, 0x53, 0x61, 0x6c, 0x65, 0x49, 0x44, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x73, 0x68, 0x6f, 0x70, 0x53, 0x61, 0x6c, 0x65, 0x49, 0x44, 0x12,
	0x38, 0x0a, 0x0b, 0x73, 0x68, 0x6f, 0x70, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33,
	0x2e, 0x53, 0x68, 0x6f, 0x70, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x0b, 0x73, 0x68,
	0x6f, 0x70, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x2c, 0x0a, 0x07, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x65, 0x72,
	0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x07,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x68, 0x6f, 0x70, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d,
	0x73, 0x68, 0x6f, 0x70, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x12, 0x1c, 0x0a,
	0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x72,
	0x65, 0x61, 0x6c, 0x69, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x0b, 0x72, 0x65, 0x61, 0x6c, 0x69, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a,
	0x03, 0x70, 0x61, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03, 0x70, 0x61, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x78, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x03, 0x74, 0x61, 0x78, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x75, 0x72, 0x63, 0x68,
	0x61, 0x73, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x70, 0x75, 0x72, 0x63, 0x68,
	0x61, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x18, 0x10, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x06, 0x6d, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x6d,
	0x61, 0x72, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x11, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x0b, 0x6d, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x18, 0x12, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x66, 0x69,
	0x6e, 0x61, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x73, 0x18, 0x13,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x73, 0x12, 0x3c, 0x0a,
	0x10, 0x6d, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75,
	0x73, 0x56, 0x33, 0x2e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x10, 0x6d, 0x61, 0x72, 0x67, 0x69,
	0x6e, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x2f, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x16, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x53, 0x61, 0x6c,
	0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x65, 0x22, 0x65, 0x0a, 0x05, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x12, 0x25, 0x0a,
	0x05, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63,
	0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x53, 0x61, 0x6c, 0x65, 0x52, 0x05, 0x73,
	0x61, 0x6c, 0x65, 0x73, 0x12, 0x35, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73,
	0x75, 0x73, 0x56, 0x33, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xd1, 0x01, 0x0a, 0x09,
	0x57, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x65, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x65, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x77, 0x61, 0x72,
	0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b,
	0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x63,
	0x61, 0x72, 0x67, 0x6f, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x63, 0x61, 0x72, 0x67, 0x6f, 0x54, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0c, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x22,
	0x42, 0x0a, 0x0a, 0x57, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x73, 0x12, 0x34, 0x0a,
	0x0a, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x57, 0x61,
	0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x52, 0x0a, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75,
	0x73, 0x65, 0x73, 0x22, 0x5e, 0x0a, 0x10, 0x4c, 0x69, 0x6e, 0x65, 0x47, 0x72, 0x61, 0x70, 0x68,
	0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x02, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x10, 0x0a, 0x03, 0x6d, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03, 0x6d, 0x69,
	0x6e, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x61, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03,
	0x6d, 0x61, 0x78, 0x22, 0x39, 0x0a, 0x0d, 0x4c, 0x69, 0x6e, 0x65, 0x47, 0x72, 0x61, 0x70, 0x68,
	0x53, 0x68, 0x6f, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x68, 0x6f, 0x70, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x73, 0x68, 0x6f, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x22, 0xae,
	0x01, 0x0a, 0x09, 0x4c, 0x69, 0x6e, 0x65, 0x47, 0x72, 0x61, 0x70, 0x68, 0x12, 0x16, 0x0a, 0x06,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x61,
	0x62, 0x65, 0x6c, 0x73, 0x12, 0x37, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73,
	0x56, 0x33, 0x2e, 0x4c, 0x69, 0x6e, 0x65, 0x47, 0x72, 0x61, 0x70, 0x68, 0x44, 0x61, 0x74, 0x61,
	0x73, 0x65, 0x74, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x73, 0x12, 0x2e, 0x0a,
	0x05, 0x73, 0x68, 0x6f, 0x70, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63,
	0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x4c, 0x69, 0x6e, 0x65, 0x47, 0x72, 0x61,
	0x70, 0x68, 0x53, 0x68, 0x6f, 0x70, 0x52, 0x05, 0x73, 0x68, 0x6f, 0x70, 0x73, 0x12, 0x20, 0x0a,
	0x0b, 0x67, 0x72, 0x61, 0x70, 0x68, 0x69, 0x63, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x67, 0x72, 0x61, 0x70, 0x68, 0x69, 0x63, 0x4e, 0x61, 0x6d, 0x65, 0x22,
	0x40, 0x0a, 0x0c, 0x4c, 0x69, 0x6e, 0x65, 0x47, 0x72, 0x61, 0x70, 0x68, 0x69, 0x63, 0x73, 0x12,
	0x30, 0x0a, 0x08, 0x67, 0x72, 0x61, 0x70, 0x68, 0x69, 0x63, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33, 0x2e, 0x4c, 0x69,
	0x6e, 0x65, 0x47, 0x72, 0x61, 0x70, 0x68, 0x52, 0x08, 0x67, 0x72, 0x61, 0x70, 0x68, 0x69, 0x63,
	0x73, 0x22, 0x99, 0x01, 0x0a, 0x10, 0x4c, 0x69, 0x6e, 0x65, 0x47, 0x72, 0x61, 0x70, 0x68, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x56, 0x33,
	0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x12, 0x0c, 0x0a, 0x01, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x01, 0x74, 0x12, 0x0c, 0x0a, 0x01, 0x70, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x01, 0x70, 0x12, 0x0c, 0x0a, 0x01, 0x6f, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x01, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18,
	0x06, 0x20, 0x03, 0x28, 0x03, 0x52, 0x02, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x68, 0x6f,
	0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x68, 0x6f, 0x70, 0x2a, 0x1e, 0x0a,
	0x09, 0x53, 0x6f, 0x72, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x53,
	0x43, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x44, 0x45, 0x53, 0x43, 0x10, 0x01, 0x2a, 0x3d, 0x0a,
	0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f,
	0x57, 0x4e, 0x10, 0x00, 0x12, 0x06, 0x0a, 0x02, 0x4f, 0x4b, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05,
	0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x54, 0x52, 0x55, 0x45, 0x10,
	0x03, 0x12, 0x09, 0x0a, 0x05, 0x46, 0x41, 0x4c, 0x53, 0x45, 0x10, 0x04, 0x2a, 0x4f, 0x0a, 0x05,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x0b, 0x0a, 0x07, 0x4e, 0x4f, 0x4c, 0x45, 0x56, 0x45, 0x4c,
	0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x49, 0x4e, 0x46, 0x45, 0x52, 0x49, 0x4f, 0x52, 0x10, 0x01,
	0x12, 0x07, 0x0a, 0x03, 0x4c, 0x4f, 0x57, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x4d, 0x49, 0x44,
	0x44, 0x4c, 0x45, 0x10, 0x03, 0x12, 0x08, 0x0a, 0x04, 0x48, 0x49, 0x47, 0x48, 0x10, 0x04, 0x12,
	0x0c, 0x0a, 0x08, 0x53, 0x55, 0x50, 0x45, 0x52, 0x49, 0x4f, 0x52, 0x10, 0x05, 0x42, 0x23, 0x5a,
	0x21, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x6e, 0x73, 0x61,
	0x6e, 0x79, 0x63, 0x68, 0x2f, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x2d, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_cerasusV3_proto_rawDescOnce sync.Once
	file_cerasusV3_proto_rawDescData = file_cerasusV3_proto_rawDesc
)

func file_cerasusV3_proto_rawDescGZIP() []byte {
	file_cerasusV3_proto_rawDescOnce.Do(func() {
		file_cerasusV3_proto_rawDescData = protoimpl.X.CompressGZIP(file_cerasusV3_proto_rawDescData)
	})
	return file_cerasusV3_proto_rawDescData
}

var file_cerasusV3_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_cerasusV3_proto_msgTypes = make([]protoimpl.MessageInfo, 51)
var file_cerasusV3_proto_goTypes = []interface{}{
	(SortOrder)(0),               // 0: cerasusV3.SortOrder
	(Status)(0),                  // 1: cerasusV3.Status
	(Level)(0),                   // 2: cerasusV3.Level
	(*PingRequest)(nil),          // 3: cerasusV3.PingRequest
	(*PingReply)(nil),            // 4: cerasusV3.PingReply
	(*SearchRequest)(nil),        // 5: cerasusV3.SearchRequest
	(*RequestByShop)(nil),        // 6: cerasusV3.RequestByShop
	(*RequestByID)(nil),          // 7: cerasusV3.RequestByID
	(*RequestByIDS)(nil),         // 8: cerasusV3.RequestByIDS
	(*RequestByDates)(nil),       // 9: cerasusV3.RequestByDates
	(*ImageRequest)(nil),         // 10: cerasusV3.ImageRequest
	(*ImageReply)(nil),           // 11: cerasusV3.ImageReply
	(*Pagination)(nil),           // 12: cerasusV3.Pagination
	(*QueuerJob)(nil),            // 13: cerasusV3.QueuerJob
	(*Log)(nil),                  // 14: cerasusV3.Log
	(*StatusReply)(nil),          // 15: cerasusV3.StatusReply
	(*Auth)(nil),                 // 16: cerasusV3.Auth
	(*Company)(nil),              // 17: cerasusV3.Company
	(*CompanyList)(nil),          // 18: cerasusV3.CompanyList
	(*Role)(nil),                 // 19: cerasusV3.Role
	(*Roles)(nil),                // 20: cerasusV3.Roles
	(*Count)(nil),                // 21: cerasusV3.Count
	(*User)(nil),                 // 22: cerasusV3.User
	(*Users)(nil),                // 23: cerasusV3.Users
	(*Brand)(nil),                // 24: cerasusV3.Brand
	(*Brands)(nil),               // 25: cerasusV3.Brands
	(*ReplyIDS)(nil),             // 26: cerasusV3.ReplyIDS
	(*ShopProduct)(nil),          // 27: cerasusV3.ShopProduct
	(*ShopProductLinks)(nil),     // 28: cerasusV3.ShopProductLinks
	(*Product)(nil),              // 29: cerasusV3.Product
	(*ProductList)(nil),          // 30: cerasusV3.ProductList
	(*Purchase)(nil),             // 31: cerasusV3.Purchase
	(*ShopProductList)(nil),      // 32: cerasusV3.ShopProductList
	(*Shop)(nil),                 // 33: cerasusV3.Shop
	(*AppShopData)(nil),          // 34: cerasusV3.AppShopData
	(*UserAppData)(nil),          // 35: cerasusV3.UserAppData
	(*Tax)(nil),                  // 36: cerasusV3.Tax
	(*Taxes)(nil),                // 37: cerasusV3.Taxes
	(*AppTaxes)(nil),             // 38: cerasusV3.AppTaxes
	(*ShopProductUrlSetter)(nil), // 39: cerasusV3.ShopProductUrlSetter
	(*GeoPlace)(nil),             // 40: cerasusV3.GeoPlace
	(*GeoPlaceData)(nil),         // 41: cerasusV3.GeoPlaceData
	(*Order)(nil),                // 42: cerasusV3.Order
	(*Orders)(nil),               // 43: cerasusV3.Orders
	(*SaleDetail)(nil),           // 44: cerasusV3.SaleDetail
	(*Sale)(nil),                 // 45: cerasusV3.Sale
	(*Sales)(nil),                // 46: cerasusV3.Sales
	(*Warehouse)(nil),            // 47: cerasusV3.Warehouse
	(*Warehouses)(nil),           // 48: cerasusV3.Warehouses
	(*LineGraphDataset)(nil),     // 49: cerasusV3.LineGraphDataset
	(*LineGraphShop)(nil),        // 50: cerasusV3.LineGraphShop
	(*LineGraph)(nil),            // 51: cerasusV3.LineGraph
	(*LineGraphics)(nil),         // 52: cerasusV3.LineGraphics
	(*LineGraphRequest)(nil),     // 53: cerasusV3.LineGraphRequest
}
var file_cerasusV3_proto_depIdxs = []int32{
	16, // 0: cerasusV3.SearchRequest.auth:type_name -> cerasusV3.Auth
	16, // 1: cerasusV3.RequestByShop.auth:type_name -> cerasusV3.Auth
	16, // 2: cerasusV3.RequestByID.auth:type_name -> cerasusV3.Auth
	16, // 3: cerasusV3.RequestByIDS.auth:type_name -> cerasusV3.Auth
	16, // 4: cerasusV3.RequestByDates.auth:type_name -> cerasusV3.Auth
	1,  // 5: cerasusV3.StatusReply.status:type_name -> cerasusV3.Status
	19, // 6: cerasusV3.Auth.roles:type_name -> cerasusV3.Role
	17, // 7: cerasusV3.CompanyList.companies:type_name -> cerasusV3.Company
	12, // 8: cerasusV3.CompanyList.pagination:type_name -> cerasusV3.Pagination
	19, // 9: cerasusV3.Roles.roles:type_name -> cerasusV3.Role
	17, // 10: cerasusV3.User.company:type_name -> cerasusV3.Company
	19, // 11: cerasusV3.User.roles:type_name -> cerasusV3.Role
	22, // 12: cerasusV3.Users.users:type_name -> cerasusV3.User
	24, // 13: cerasusV3.Brands.brands:type_name -> cerasusV3.Brand
	27, // 14: cerasusV3.ShopProductLinks.shopProducts:type_name -> cerasusV3.ShopProduct
	28, // 15: cerasusV3.Product.shopProductLinks:type_name -> cerasusV3.ShopProductLinks
	24, // 16: cerasusV3.Product.brand:type_name -> cerasusV3.Brand
	29, // 17: cerasusV3.ProductList.products:type_name -> cerasusV3.Product
	12, // 18: cerasusV3.ProductList.pagination:type_name -> cerasusV3.Pagination
	27, // 19: cerasusV3.ShopProductList.shopProducts:type_name -> cerasusV3.ShopProduct
	33, // 20: cerasusV3.AppShopData.shop:type_name -> cerasusV3.Shop
	34, // 21: cerasusV3.UserAppData.shops:type_name -> cerasusV3.AppShopData
	36, // 22: cerasusV3.Taxes.data:type_name -> cerasusV3.Tax
	36, // 23: cerasusV3.AppTaxes.taxes:type_name -> cerasusV3.Tax
	16, // 24: cerasusV3.ShopProductUrlSetter.auth:type_name -> cerasusV3.Auth
	40, // 25: cerasusV3.GeoPlaceData.country:type_name -> cerasusV3.GeoPlace
	40, // 26: cerasusV3.GeoPlaceData.region:type_name -> cerasusV3.GeoPlace
	40, // 27: cerasusV3.GeoPlaceData.city:type_name -> cerasusV3.GeoPlace
	29, // 28: cerasusV3.Order.product:type_name -> cerasusV3.Product
	27, // 29: cerasusV3.Order.shopProduct:type_name -> cerasusV3.ShopProduct
	41, // 30: cerasusV3.Order.place:type_name -> cerasusV3.GeoPlaceData
	42, // 31: cerasusV3.Orders.orders:type_name -> cerasusV3.Order
	27, // 32: cerasusV3.Sale.shopProduct:type_name -> cerasusV3.ShopProduct
	29, // 33: cerasusV3.Sale.product:type_name -> cerasusV3.Product
	2,  // 34: cerasusV3.Sale.marginalityLevel:type_name -> cerasusV3.Level
	44, // 35: cerasusV3.Sale.details:type_name -> cerasusV3.SaleDetail
	45, // 36: cerasusV3.Sales.sales:type_name -> cerasusV3.Sale
	12, // 37: cerasusV3.Sales.pagination:type_name -> cerasusV3.Pagination
	47, // 38: cerasusV3.Warehouses.warehouses:type_name -> cerasusV3.Warehouse
	49, // 39: cerasusV3.LineGraph.datasets:type_name -> cerasusV3.LineGraphDataset
	50, // 40: cerasusV3.LineGraph.shops:type_name -> cerasusV3.LineGraphShop
	51, // 41: cerasusV3.LineGraphics.graphics:type_name -> cerasusV3.LineGraph
	16, // 42: cerasusV3.LineGraphRequest.auth:type_name -> cerasusV3.Auth
	43, // [43:43] is the sub-list for method output_type
	43, // [43:43] is the sub-list for method input_type
	43, // [43:43] is the sub-list for extension type_name
	43, // [43:43] is the sub-list for extension extendee
	0,  // [0:43] is the sub-list for field type_name
}

func init() { file_cerasusV3_proto_init() }
func file_cerasusV3_proto_init() {
	if File_cerasusV3_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_cerasusV3_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cerasusV3_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PingReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cerasusV3_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cerasusV3_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestByShop); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cerasusV3_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestByID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cerasusV3_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestByIDS); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cerasusV3_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestByDates); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cerasusV3_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cerasusV3_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImageReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cerasusV3_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pagination); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cerasusV3_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueuerJob); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cerasusV3_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Log); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cerasusV3_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatusReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cerasusV3_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Auth); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cerasusV3_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Company); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cerasusV3_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompanyList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cerasusV3_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Role); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cerasusV3_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Roles); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cerasusV3_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Count); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cerasusV3_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cerasusV3_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Users); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cerasusV3_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Brand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cerasusV3_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Brands); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cerasusV3_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplyIDS); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cerasusV3_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShopProduct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cerasusV3_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShopProductLinks); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cerasusV3_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Product); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cerasusV3_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cerasusV3_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Purchase); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cerasusV3_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShopProductList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cerasusV3_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Shop); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cerasusV3_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppShopData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cerasusV3_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAppData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cerasusV3_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tax); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cerasusV3_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Taxes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cerasusV3_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppTaxes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cerasusV3_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShopProductUrlSetter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cerasusV3_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GeoPlace); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cerasusV3_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GeoPlaceData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cerasusV3_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Order); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cerasusV3_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Orders); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cerasusV3_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaleDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cerasusV3_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Sale); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cerasusV3_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Sales); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cerasusV3_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Warehouse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cerasusV3_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Warehouses); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cerasusV3_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LineGraphDataset); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cerasusV3_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LineGraphShop); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cerasusV3_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LineGraph); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cerasusV3_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LineGraphics); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cerasusV3_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LineGraphRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cerasusV3_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   51,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_cerasusV3_proto_goTypes,
		DependencyIndexes: file_cerasusV3_proto_depIdxs,
		EnumInfos:         file_cerasusV3_proto_enumTypes,
		MessageInfos:      file_cerasusV3_proto_msgTypes,
	}.Build()
	File_cerasusV3_proto = out.File
	file_cerasusV3_proto_rawDesc = nil
	file_cerasusV3_proto_goTypes = nil
	file_cerasusV3_proto_depIdxs = nil
}
