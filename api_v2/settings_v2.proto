syntax = "proto3";
import "cerasus_v2.proto";

package cerasusV2;

option go_package = "github.com/ansanych/cerasus-proto";

service Settings {
    rpc Ping (PingRequest) returns (PingReply) {}
    rpc GetUserAppData (Auth) returns (UserAppData) {}
    rpc GetMainGraphic (LineGraphRequest) returns (LineGraph) {}
    rpc GetFlowGraphic (Auth) returns (RoundGraphic) {}
    rpc GetMarginGraphic (Auth) returns (RoundGraphic) {}
    rpc GetWeekGraphic (LineGraphRequest) returns (WeekGraphic) {}
    rpc GetOrderLeaders (Auth) returns (OrderLeaders) {}
    rpc GetCompanyBrands (Auth) returns (Brands) {}
    rpc GetBrand (RequestByID) returns (Brand) {}
    rpc GetProductGraphics (RequestByDates) returns (LineGraphics) {}
    rpc GetTaxes(Auth) returns (Taxes) {}
    rpc GetMarginLevels (Auth) returns (MarginLevels) {}
    rpc GetProductWidget(RequestByDates) returns (ProductWidgets) {}
    rpc GetProductWidgetOrders(RequestByDates) returns (ProductWidgets) {}
    rpc SetGeoPlace(SetGeoPlaceRequest) returns (StatusReply) {}
}

message AppServiceData {
    string code = 1;
    ServiceStatus status = 2;
    string startDate = 3;
    string endDate = 4;
    int32 limit = 5;
    bool access = 6;
}

message UserAppData {
    repeated AppShopData shops = 1;
    repeated AppServiceData services = 2;
}

message MarginLevel {
    Level level = 1;
    float value = 2;
}

message MarginLevelsBrand {
    Brand brand = 1;
    repeated MarginLevel levels = 2;
}

message MarginLevels {
    repeated MarginLevel levels = 1;
    repeated MarginLevelsBrand brandLevels = 2;
}

message SetGeoPlaceRequest {
    repeated GeoPlaceData data = 1;
}