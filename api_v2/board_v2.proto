syntax = "proto3";
import "cerasus_v2.proto";

package cerasusV2;

option go_package = "github.com/ansanych/cerasus-proto";

service Board {
    rpc Ping (PingRequest) returns (PingReply) {}
    rpc GetQueues (QueuesRequest) returns (Queues) {}
    rpc GetQueue (QueueRequest) returns (Queue) {}
    rpc ReQueue (ReQueueRequest) returns (StatusReply) {}
    rpc SetQueueParams (QueueParamsSet) returns (StatusReply) {}
    rpc GetLogsCount (RequestByDates) returns (Count) {}
    rpc GetCompanies (BoardCompaniesRequest) returns (CompanyList) {}
    rpc SearchCompanies (SearchRequest) returns (CompanyList) {}
    rpc GetCompany (RequestByID) returns (BoardCompanyData) {}
    rpc UpdateCompany (UpdateBoardCompanyRequest) returns (StatusReply) {}
    rpc UpdateCompanyCounter (UpdateBoardCompanyServiceRequest) returns (StatusReply) {}
    rpc UpdateCompanyPricer (UpdateBoardCompanyServiceRequest) returns (StatusReply) {}
    rpc SearchProduct (SearchProductRequest) returns (BoardProductData) {}
}

message SearchProductRequest {
    int64 ID = 1;
    string shop = 2;
    string url = 3;
    string shopID = 4;
    string article = 5;
    string name = 6;
}

message BoardProduct {
    int64 ID = 1;
    string title = 2;
    string comment = 3;
    bool active = 4;
    string preview = 5;
    string updated = 6;
}

message BoardShopProduct {
    string shop = 1;
    ShopProduct shopProduct = 2;
    int32 files = 3;
    bool isSales = 4;
    bool isOrders = 5;
}

message BoardProductPricer {
    string shop = 1;
    bool active = 2;
}

message BoardProductCounterQueueData {
    int64 shopProductID = 1;
    int32 count = 2;
    int32 mpCount = 3;
}

message BoardProductCounter {
    string shop = 1;
    bool active = 2;
    int32 count = 3;
    repeated BoardProductCounterQueueData shopProductsCount = 4;
}

message BoardProductData {
    BoardProduct product = 1;
    Company company = 2;
    float purchase = 3;
    Brand brand = 4;
    repeated BoardShopProduct shopProducts = 5;
    repeated BoardProductPricer pricerData = 6;
    repeated BoardProductCounter counterData = 7;
}

message UpdateBoardCompanyServiceRequest {
    bool active = 1;
    string end = 2;
    int32 limit = 3;
    string shop = 4;
    int64 companyID = 5;
}

message UpdateBoardCompanyRequest {
    int64 ID = 1;
    bool active = 2;
}

message BoardPricerShop {
    string shop = 1;
    bool active = 2;
    string start = 3;
    string end = 4;
    int32 period = 5;
    int32 productsLimit = 6;
    int32 productsActive = 7;
    int32 queueStatus = 8;
    bool queueError = 9;
    string queueUpdated = 10;
}

message BoardCounterData {
    bool active = 1;
    string start = 2;
    string end = 3;
}

message BoardCompanyData {
    Company company = 1;
    repeated ShopData shopData = 2;
    repeated BoardPricerShop pricerData = 3;
    BoardCounterData counterData = 4;
}

message BoardCompaniesRequest {
    int32 page = 1;
    int32 limit = 2;
}

message ReQueueRequest {
    Auth auth = 1;
    int64 ID = 2;
    string code = 3;
    string msv = 4;
    string action = 5;
}

message QueuesRequest {
    Auth auth = 1;
    int64 companyID = 2;
}

message QueueRequest {
    Auth auth = 1;
    int64 companyID = 2;
    string code = 3;
    string msv = 4;
    bool getAllJobs = 5;
}

message QueueParamsSet {
    QueueParams params = 1;
    string code = 2;
    string msv = 3;
}

message QueueParams {
    int32 period = 1;
    bool autoReset = 2;
    int32 autoResetTime = 3;
    int32 warningTime = 4;
}

message Queue {
    string title = 1;
    string code = 2;
    string msv = 3;
    int32 processing = 4;
    bool errors = 5;
    bool warning = 6;
    string lastDT = 7;
    repeated QueueJob jobs = 8;
    repeated QueueJob jobsError = 9;
    repeated QueueJob jobsWarning = 10;
    QueueParams params = 11;
}

message Queues {
    repeated Queue data = 1;
}

message QueueJob {
    int64 id = 1;
    int64 companyID = 2;
    string shop = 3;
    int32 status = 4;
    bool error = 5;
    string created = 6;
    string updated = 7;
    repeated QueueJobLog logs = 8;
}

message QueueJobLog {
    string datetime = 1;
    string message = 2;
}