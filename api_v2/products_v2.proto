syntax = "proto3";
import "cerasus_v2.proto";

package cerasusV2;

option go_package = "github.com/ansanych/cerasus-proto";

service Products {
    rpc Ping (PingRequest) returns (PingReply) {}
    rpc GetProductsCount (ProductListRequest) returns (Count) {}
    rpc GetProductList (ProductListRequest) returns (ProductList) {}
    rpc GetProductListByID (RequestByIDs) returns (ProductList) {}
    rpc GetProductSearch (SearchRequest) returns (ProductList) {}
    rpc GetProductsByShopIDs (RequestByShopIDs) returns (ProductList) {}
    rpc GetProduct (RequestByID) returns (Product) {}
    rpc GetShopProductsMatch (RequestByShopIDs) returns (ShopProductsMatches) {}
    rpc GetPurchases (RequestByIDs) returns (ProductsPurchases) {}
    rpc GetProductsUnsortedCount (Auth) returns (UnsortedCount) {}
    rpc ConnectUnsorted (ConnectUnsortedRequest) returns (StatusReply) {}
    rpc UpdateProduct (UpdateProductRequest) returns (StatusReply) {}
    rpc GetProductPurchase (RequestByID) returns (ProductPurchases) {}
    rpc SetProductPurchase (SetProductPurchaseRequest) returns (StatusReply) {}
    rpc DeleteProductPurchase (RequestByID) returns (StatusReply) {}
    rpc SetProductBrand (SetProductBrandRequest) returns (StatusReply) {}
    rpc GetProductLinks (RequestByID) returns (ProductLinks) {}
    rpc DeleteProductLink (RequestByID) returns (StatusReply) {}
    rpc GetProductListLinks (RequestByIDs) returns (ProductList) {}
    rpc GetProductsUnsortedList (SearchRequest) returns (ShopProductList) {}
    rpc GetOrderLeaders (SearchRequest) returns (OrderLeaders) {}
    rpc GetProductsUnsortedCountShop (SearchRequest) returns (Count) {}
}

message SetProductPurchaseRequest {
    Auth auth = 1;
    int64 ID = 2;
    float value = 3;
    string date = 4;
}

message SetProductBrandRequest {
    Auth auth = 1;
    int64 ID = 2;
    int64 brandID = 3;
}

message UpdateProductRequest {
    Auth auth = 1;
    int64 ID = 2;
    bool active = 3;
    string title = 4;
    string comment = 5;
}

message RequestByShopIDs {
    Auth auth = 1;
    repeated int64 ID = 2;
    string shop = 3;
}

message ProductListRequest {
    Auth auth = 1;
    string shop = 2;
    repeated int64 brands = 3;
    int32 page = 4;
    string sort = 5;
    SortOrder order = 6;
    int32 limit = 7;
    bool pricer = 8;
    bool counter = 9;
    bool purchase = 10;
}

message ShopProductsMatch {
    int64 productID = 1;
    int64 shopProductID = 2;
}

message ShopProductsMatches {
    string shop = 1;
    repeated ShopProductsMatch data = 2;
}

message ProductPurchases {
    int64 productID = 1;
    repeated Purchase purchase = 2;
    Purchase actual = 3;
}

message ProductsPurchases {
    repeated ProductPurchases data = 1;
}

message ShopUnsortedCount {
    string shop = 1;
    int32 count = 2;
}

message UnsortedCount {
    repeated ShopUnsortedCount data = 1;
}

message ConnectUnsortedRequest {
    Auth auth = 1;
    string name = 2;
    int64 product = 3;
    repeated int64 shopProducts = 4;
    string shop = 5;
}

message ProductLink {
    int64 ID = 1;
    ShopProduct shopProduct = 2;
}

message ProductLinkShop {
    string shop = 1;
    repeated ProductLink links = 2;
}

message ProductLinks {
    repeated ProductLinkShop data = 1;
}