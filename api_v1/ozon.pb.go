// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.12.4
// source: ozon.proto

package cerasus_proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ShopOzonAuth struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientID int32  `protobuf:"varint,1,opt,name=clientID,proto3" json:"clientID,omitempty"`
	ApiKey   string `protobuf:"bytes,2,opt,name=apiKey,proto3" json:"apiKey,omitempty"`
	Error    bool   `protobuf:"varint,3,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *ShopOzonAuth) Reset() {
	*x = ShopOzonAuth{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ozon_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShopOzonAuth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShopOzonAuth) ProtoMessage() {}

func (x *ShopOzonAuth) ProtoReflect() protoreflect.Message {
	mi := &file_ozon_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShopOzonAuth.ProtoReflect.Descriptor instead.
func (*ShopOzonAuth) Descriptor() ([]byte, []int) {
	return file_ozon_proto_rawDescGZIP(), []int{0}
}

func (x *ShopOzonAuth) GetClientID() int32 {
	if x != nil {
		return x.ClientID
	}
	return 0
}

func (x *ShopOzonAuth) GetApiKey() string {
	if x != nil {
		return x.ApiKey
	}
	return ""
}

func (x *ShopOzonAuth) GetError() bool {
	if x != nil {
		return x.Error
	}
	return false
}

type SetOzonAuth struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Auth     *Auth         `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"`
	ShopAuth *ShopOzonAuth `protobuf:"bytes,2,opt,name=shopAuth,proto3" json:"shopAuth,omitempty"`
}

func (x *SetOzonAuth) Reset() {
	*x = SetOzonAuth{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ozon_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetOzonAuth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetOzonAuth) ProtoMessage() {}

func (x *SetOzonAuth) ProtoReflect() protoreflect.Message {
	mi := &file_ozon_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetOzonAuth.ProtoReflect.Descriptor instead.
func (*SetOzonAuth) Descriptor() ([]byte, []int) {
	return file_ozon_proto_rawDescGZIP(), []int{1}
}

func (x *SetOzonAuth) GetAuth() *Auth {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *SetOzonAuth) GetShopAuth() *ShopOzonAuth {
	if x != nil {
		return x.ShopAuth
	}
	return nil
}

var File_ozon_proto protoreflect.FileDescriptor

var file_ozon_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x6f, 0x7a, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x63, 0x65,
	0x72, 0x61, 0x73, 0x75, 0x73, 0x1a, 0x0d, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x58, 0x0a, 0x0c, 0x53, 0x68, 0x6f, 0x70, 0x4f, 0x7a, 0x6f, 0x6e,
	0x41, 0x75, 0x74, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x44,
	0x12, 0x16, 0x0a, 0x06, 0x61, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x61, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x63,
	0x0a, 0x0b, 0x53, 0x65, 0x74, 0x4f, 0x7a, 0x6f, 0x6e, 0x41, 0x75, 0x74, 0x68, 0x12, 0x21, 0x0a,
	0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x65,
	0x72, 0x61, 0x73, 0x75, 0x73, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68,
	0x12, 0x31, 0x0a, 0x08, 0x73, 0x68, 0x6f, 0x70, 0x41, 0x75, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x2e, 0x53, 0x68, 0x6f,
	0x70, 0x4f, 0x7a, 0x6f, 0x6e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x08, 0x73, 0x68, 0x6f, 0x70, 0x41,
	0x75, 0x74, 0x68, 0x32, 0xd7, 0x09, 0x0a, 0x04, 0x4f, 0x7a, 0x6f, 0x6e, 0x12, 0x35, 0x0a, 0x07,
	0x53, 0x65, 0x74, 0x41, 0x75, 0x74, 0x68, 0x12, 0x14, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75,
	0x73, 0x2e, 0x53, 0x65, 0x74, 0x4f, 0x7a, 0x6f, 0x6e, 0x41, 0x75, 0x74, 0x68, 0x1a, 0x12, 0x2e,
	0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x00, 0x12, 0x31, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x41, 0x75, 0x74, 0x68, 0x12, 0x0d,
	0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x1a, 0x15, 0x2e,
	0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x2e, 0x53, 0x68, 0x6f, 0x70, 0x4f, 0x7a, 0x6f, 0x6e,
	0x41, 0x75, 0x74, 0x68, 0x22, 0x00, 0x12, 0x30, 0x0a, 0x09, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x41,
	0x75, 0x74, 0x68, 0x12, 0x0d, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x2e, 0x41, 0x75,
	0x74, 0x68, 0x1a, 0x12, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x2e, 0x42, 0x6f, 0x6f,
	0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x38, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x55,
	0x6e, 0x73, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x0d, 0x2e, 0x63,
	0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x1a, 0x13, 0x2e, 0x63, 0x65,
	0x72, 0x61, 0x73, 0x75, 0x73, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x00, 0x12, 0x53, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x55, 0x6e, 0x73, 0x6f, 0x72, 0x74, 0x65,
	0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1f, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x2e,
	0x53, 0x68, 0x6f, 0x70, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73,
	0x2e, 0x53, 0x68, 0x6f, 0x70, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x37, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x0d, 0x2e, 0x63, 0x65, 0x72,
	0x61, 0x73, 0x75, 0x73, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x1a, 0x13, 0x2e, 0x63, 0x65, 0x72, 0x61,
	0x73, 0x75, 0x73, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00,
	0x12, 0x52, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x1f, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x2e, 0x53, 0x68, 0x6f,
	0x70, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x2e, 0x53, 0x68,
	0x6f, 0x70, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x00, 0x12, 0x41, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x12, 0x1b, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x2e, 0x53, 0x68, 0x6f,
	0x70, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x14, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x2e, 0x53, 0x68, 0x6f, 0x70, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x21, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73,
	0x75, 0x73, 0x2e, 0x53, 0x68, 0x6f, 0x70, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x63, 0x65,
	0x72, 0x61, 0x73, 0x75, 0x73, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x00, 0x12, 0x37, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x44, 0x61, 0x79, 0x53, 0x61, 0x6c, 0x65, 0x73,
	0x12, 0x0d, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x1a,
	0x17, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x2e, 0x44, 0x61, 0x79, 0x73, 0x53, 0x61,
	0x6c, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x38, 0x0a, 0x08, 0x47, 0x65,
	0x74, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x12, 0x15, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73,
	0x2e, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e,
	0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x2e, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x00, 0x12, 0x4b, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x70, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x12, 0x1b, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75,
	0x73, 0x2e, 0x53, 0x68, 0x6f, 0x70, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x2e, 0x53,
	0x68, 0x6f, 0x70, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x00, 0x12, 0x49, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x53, 0x61, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x12, 0x1b, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x2e, 0x53, 0x61, 0x6c,
	0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x19, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x2e, 0x53, 0x61, 0x6c, 0x65, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x0f,
	0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x12,
	0x1c, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e,
	0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x2e, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x00, 0x12, 0x4a, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x69, 0x6e, 0x47,
	0x72, 0x61, 0x70, 0x68, 0x69, 0x63, 0x12, 0x1b, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73,
	0x2e, 0x4d, 0x61, 0x69, 0x6e, 0x47, 0x72, 0x61, 0x70, 0x68, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x2e, 0x4d, 0x61,
	0x69, 0x6e, 0x47, 0x72, 0x61, 0x70, 0x68, 0x69, 0x63, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00,
	0x12, 0x38, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x15, 0x2e, 0x63,
	0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x2e, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x3a, 0x0a, 0x0d, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x53, 0x68, 0x6f, 0x70, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0d, 0x2e, 0x63, 0x65,
	0x72, 0x61, 0x73, 0x75, 0x73, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x1a, 0x18, 0x2e, 0x63, 0x65, 0x72,
	0x61, 0x73, 0x75, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x53, 0x68, 0x6f, 0x70,
	0x44, 0x61, 0x74, 0x61, 0x22, 0x00, 0x12, 0x3a, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x44, 0x6f, 0x6e,
	0x75, 0x74, 0x47, 0x72, 0x61, 0x70, 0x68, 0x69, 0x63, 0x73, 0x12, 0x0d, 0x2e, 0x63, 0x65, 0x72,
	0x61, 0x73, 0x75, 0x73, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x1a, 0x15, 0x2e, 0x63, 0x65, 0x72, 0x61,
	0x73, 0x75, 0x73, 0x2e, 0x44, 0x6f, 0x6e, 0x75, 0x74, 0x47, 0x72, 0x61, 0x70, 0x68, 0x69, 0x63,
	0x22, 0x00, 0x12, 0x39, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x57, 0x65, 0x65, 0x6b, 0x47, 0x72, 0x61,
	0x70, 0x68, 0x69, 0x63, 0x73, 0x12, 0x0d, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x2e,
	0x41, 0x75, 0x74, 0x68, 0x1a, 0x15, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x2e, 0x57,
	0x65, 0x65, 0x6b, 0x47, 0x72, 0x61, 0x70, 0x68, 0x69, 0x63, 0x73, 0x22, 0x00, 0x42, 0x23, 0x5a,
	0x21, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x6e, 0x73, 0x61,
	0x6e, 0x79, 0x63, 0x68, 0x2f, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x2d, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ozon_proto_rawDescOnce sync.Once
	file_ozon_proto_rawDescData = file_ozon_proto_rawDesc
)

func file_ozon_proto_rawDescGZIP() []byte {
	file_ozon_proto_rawDescOnce.Do(func() {
		file_ozon_proto_rawDescData = protoimpl.X.CompressGZIP(file_ozon_proto_rawDescData)
	})
	return file_ozon_proto_rawDescData
}

var file_ozon_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_ozon_proto_goTypes = []interface{}{
	(*ShopOzonAuth)(nil),             // 0: cerasus.ShopOzonAuth
	(*SetOzonAuth)(nil),              // 1: cerasus.SetOzonAuth
	(*Auth)(nil),                     // 2: cerasus.Auth
	(*ShopProductListRequest)(nil),   // 3: cerasus.ShopProductListRequest
	(*ShopProductRequest)(nil),       // 4: cerasus.ShopProductRequest
	(*ShopProductUpdateRequest)(nil), // 5: cerasus.ShopProductUpdateRequest
	(*SalesRequest)(nil),             // 6: cerasus.SalesRequest
	(*ShopServiceRequest)(nil),       // 7: cerasus.ShopServiceRequest
	(*SaleDetailsRequest)(nil),       // 8: cerasus.SaleDetailsRequest
	(*ProductSalesRequest)(nil),      // 9: cerasus.ProductSalesRequest
	(*MainGraphicRequest)(nil),       // 10: cerasus.MainGraphicRequest
	(*ImageRequest)(nil),             // 11: cerasus.ImageRequest
	(*BoolReply)(nil),                // 12: cerasus.BoolReply
	(*CountReply)(nil),               // 13: cerasus.CountReply
	(*ShopProductListReply)(nil),     // 14: cerasus.ShopProductListReply
	(*ShopProduct)(nil),              // 15: cerasus.ShopProduct
	(*DaysSalesReply)(nil),           // 16: cerasus.DaysSalesReply
	(*SalesReply)(nil),               // 17: cerasus.SalesReply
	(*ShopServiceReply)(nil),         // 18: cerasus.ShopServiceReply
	(*SaleDetailsReply)(nil),         // 19: cerasus.SaleDetailsReply
	(*MainGraphicReply)(nil),         // 20: cerasus.MainGraphicReply
	(*ImageReply)(nil),               // 21: cerasus.ImageReply
	(*CompanyShopData)(nil),          // 22: cerasus.CompanyShopData
	(*DonutGraphic)(nil),             // 23: cerasus.DonutGraphic
	(*WeekGraphics)(nil),             // 24: cerasus.WeekGraphics
}
var file_ozon_proto_depIdxs = []int32{
	2,  // 0: cerasus.SetOzonAuth.auth:type_name -> cerasus.Auth
	0,  // 1: cerasus.SetOzonAuth.shopAuth:type_name -> cerasus.ShopOzonAuth
	1,  // 2: cerasus.Ozon.SetAuth:input_type -> cerasus.SetOzonAuth
	2,  // 3: cerasus.Ozon.GetAuth:input_type -> cerasus.Auth
	2,  // 4: cerasus.Ozon.ErrorAuth:input_type -> cerasus.Auth
	2,  // 5: cerasus.Ozon.GetUnsortedCount:input_type -> cerasus.Auth
	3,  // 6: cerasus.Ozon.GetUnsortedList:input_type -> cerasus.ShopProductListRequest
	2,  // 7: cerasus.Ozon.GetProductCount:input_type -> cerasus.Auth
	3,  // 8: cerasus.Ozon.GetProductList:input_type -> cerasus.ShopProductListRequest
	4,  // 9: cerasus.Ozon.GetProduct:input_type -> cerasus.ShopProductRequest
	5,  // 10: cerasus.Ozon.UpdateProduct:input_type -> cerasus.ShopProductUpdateRequest
	2,  // 11: cerasus.Ozon.GetDaySales:input_type -> cerasus.Auth
	6,  // 12: cerasus.Ozon.GetSales:input_type -> cerasus.SalesRequest
	7,  // 13: cerasus.Ozon.GetShopServices:input_type -> cerasus.ShopServiceRequest
	8,  // 14: cerasus.Ozon.GetSaleDetail:input_type -> cerasus.SaleDetailsRequest
	9,  // 15: cerasus.Ozon.GetProductSales:input_type -> cerasus.ProductSalesRequest
	10, // 16: cerasus.Ozon.GetMainGraphic:input_type -> cerasus.MainGraphicRequest
	11, // 17: cerasus.Ozon.GetImage:input_type -> cerasus.ImageRequest
	2,  // 18: cerasus.Ozon.CheckShopData:input_type -> cerasus.Auth
	2,  // 19: cerasus.Ozon.GetDonutGraphics:input_type -> cerasus.Auth
	2,  // 20: cerasus.Ozon.GetWeekGraphics:input_type -> cerasus.Auth
	12, // 21: cerasus.Ozon.SetAuth:output_type -> cerasus.BoolReply
	0,  // 22: cerasus.Ozon.GetAuth:output_type -> cerasus.ShopOzonAuth
	12, // 23: cerasus.Ozon.ErrorAuth:output_type -> cerasus.BoolReply
	13, // 24: cerasus.Ozon.GetUnsortedCount:output_type -> cerasus.CountReply
	14, // 25: cerasus.Ozon.GetUnsortedList:output_type -> cerasus.ShopProductListReply
	13, // 26: cerasus.Ozon.GetProductCount:output_type -> cerasus.CountReply
	14, // 27: cerasus.Ozon.GetProductList:output_type -> cerasus.ShopProductListReply
	15, // 28: cerasus.Ozon.GetProduct:output_type -> cerasus.ShopProduct
	12, // 29: cerasus.Ozon.UpdateProduct:output_type -> cerasus.BoolReply
	16, // 30: cerasus.Ozon.GetDaySales:output_type -> cerasus.DaysSalesReply
	17, // 31: cerasus.Ozon.GetSales:output_type -> cerasus.SalesReply
	18, // 32: cerasus.Ozon.GetShopServices:output_type -> cerasus.ShopServiceReply
	19, // 33: cerasus.Ozon.GetSaleDetail:output_type -> cerasus.SaleDetailsReply
	17, // 34: cerasus.Ozon.GetProductSales:output_type -> cerasus.SalesReply
	20, // 35: cerasus.Ozon.GetMainGraphic:output_type -> cerasus.MainGraphicReply
	21, // 36: cerasus.Ozon.GetImage:output_type -> cerasus.ImageReply
	22, // 37: cerasus.Ozon.CheckShopData:output_type -> cerasus.CompanyShopData
	23, // 38: cerasus.Ozon.GetDonutGraphics:output_type -> cerasus.DonutGraphic
	24, // 39: cerasus.Ozon.GetWeekGraphics:output_type -> cerasus.WeekGraphics
	21, // [21:40] is the sub-list for method output_type
	2,  // [2:21] is the sub-list for method input_type
	2,  // [2:2] is the sub-list for extension type_name
	2,  // [2:2] is the sub-list for extension extendee
	0,  // [0:2] is the sub-list for field type_name
}

func init() { file_ozon_proto_init() }
func file_ozon_proto_init() {
	if File_ozon_proto != nil {
		return
	}
	file_cerasus_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_ozon_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShopOzonAuth); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ozon_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetOzonAuth); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ozon_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_ozon_proto_goTypes,
		DependencyIndexes: file_ozon_proto_depIdxs,
		MessageInfos:      file_ozon_proto_msgTypes,
	}.Build()
	File_ozon_proto = out.File
	file_ozon_proto_rawDesc = nil
	file_ozon_proto_goTypes = nil
	file_ozon_proto_depIdxs = nil
}
