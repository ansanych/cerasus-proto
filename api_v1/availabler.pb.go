// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.12.4
// source: availabler.proto

package cerasus_proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AvailablerSystemSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Period   int32 `protobuf:"varint,1,opt,name=period,proto3" json:"period,omitempty"`
	MinCount int32 `protobuf:"varint,2,opt,name=minCount,proto3" json:"minCount,omitempty"`
	MaxCount int32 `protobuf:"varint,3,opt,name=maxCount,proto3" json:"maxCount,omitempty"`
}

func (x *AvailablerSystemSettings) Reset() {
	*x = AvailablerSystemSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_availabler_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvailablerSystemSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvailablerSystemSettings) ProtoMessage() {}

func (x *AvailablerSystemSettings) ProtoReflect() protoreflect.Message {
	mi := &file_availabler_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvailablerSystemSettings.ProtoReflect.Descriptor instead.
func (*AvailablerSystemSettings) Descriptor() ([]byte, []int) {
	return file_availabler_proto_rawDescGZIP(), []int{0}
}

func (x *AvailablerSystemSettings) GetPeriod() int32 {
	if x != nil {
		return x.Period
	}
	return 0
}

func (x *AvailablerSystemSettings) GetMinCount() int32 {
	if x != nil {
		return x.MinCount
	}
	return 0
}

func (x *AvailablerSystemSettings) GetMaxCount() int32 {
	if x != nil {
		return x.MaxCount
	}
	return 0
}

type AvailablerCompanySettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID        int64  `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	CompanyID int64  `protobuf:"varint,2,opt,name=companyID,proto3" json:"companyID,omitempty"`
	Period    int32  `protobuf:"varint,3,opt,name=period,proto3" json:"period,omitempty"`
	Limit     int32  `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	ShopCode  string `protobuf:"bytes,5,opt,name=shopCode,proto3" json:"shopCode,omitempty"`
}

func (x *AvailablerCompanySettings) Reset() {
	*x = AvailablerCompanySettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_availabler_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvailablerCompanySettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvailablerCompanySettings) ProtoMessage() {}

func (x *AvailablerCompanySettings) ProtoReflect() protoreflect.Message {
	mi := &file_availabler_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvailablerCompanySettings.ProtoReflect.Descriptor instead.
func (*AvailablerCompanySettings) Descriptor() ([]byte, []int) {
	return file_availabler_proto_rawDescGZIP(), []int{1}
}

func (x *AvailablerCompanySettings) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *AvailablerCompanySettings) GetCompanyID() int64 {
	if x != nil {
		return x.CompanyID
	}
	return 0
}

func (x *AvailablerCompanySettings) GetPeriod() int32 {
	if x != nil {
		return x.Period
	}
	return 0
}

func (x *AvailablerCompanySettings) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *AvailablerCompanySettings) GetShopCode() string {
	if x != nil {
		return x.ShopCode
	}
	return ""
}

type AvailablerCompanySettingsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Settings []*AvailablerCompanySettings `protobuf:"bytes,1,rep,name=settings,proto3" json:"settings,omitempty"`
}

func (x *AvailablerCompanySettingsReply) Reset() {
	*x = AvailablerCompanySettingsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_availabler_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvailablerCompanySettingsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvailablerCompanySettingsReply) ProtoMessage() {}

func (x *AvailablerCompanySettingsReply) ProtoReflect() protoreflect.Message {
	mi := &file_availabler_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvailablerCompanySettingsReply.ProtoReflect.Descriptor instead.
func (*AvailablerCompanySettingsReply) Descriptor() ([]byte, []int) {
	return file_availabler_proto_rawDescGZIP(), []int{2}
}

func (x *AvailablerCompanySettingsReply) GetSettings() []*AvailablerCompanySettings {
	if x != nil {
		return x.Settings
	}
	return nil
}

type AvailablerParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID        int64  `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	CompanyID int64  `protobuf:"varint,2,opt,name=companyID,proto3" json:"companyID,omitempty"`
	ProductID int64  `protobuf:"varint,3,opt,name=productID,proto3" json:"productID,omitempty"`
	ShopCode  string `protobuf:"bytes,4,opt,name=shopCode,proto3" json:"shopCode,omitempty"`
	MinCount  int32  `protobuf:"varint,5,opt,name=minCount,proto3" json:"minCount,omitempty"`
	MaxCount  int32  `protobuf:"varint,6,opt,name=maxCount,proto3" json:"maxCount,omitempty"`
	Active    bool   `protobuf:"varint,7,opt,name=active,proto3" json:"active,omitempty"`
}

func (x *AvailablerParam) Reset() {
	*x = AvailablerParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_availabler_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvailablerParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvailablerParam) ProtoMessage() {}

func (x *AvailablerParam) ProtoReflect() protoreflect.Message {
	mi := &file_availabler_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvailablerParam.ProtoReflect.Descriptor instead.
func (*AvailablerParam) Descriptor() ([]byte, []int) {
	return file_availabler_proto_rawDescGZIP(), []int{3}
}

func (x *AvailablerParam) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *AvailablerParam) GetCompanyID() int64 {
	if x != nil {
		return x.CompanyID
	}
	return 0
}

func (x *AvailablerParam) GetProductID() int64 {
	if x != nil {
		return x.ProductID
	}
	return 0
}

func (x *AvailablerParam) GetShopCode() string {
	if x != nil {
		return x.ShopCode
	}
	return ""
}

func (x *AvailablerParam) GetMinCount() int32 {
	if x != nil {
		return x.MinCount
	}
	return 0
}

func (x *AvailablerParam) GetMaxCount() int32 {
	if x != nil {
		return x.MaxCount
	}
	return 0
}

func (x *AvailablerParam) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

type SetAvailablerParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Auth   *Auth              `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"`
	Params []*AvailablerParam `protobuf:"bytes,2,rep,name=params,proto3" json:"params,omitempty"`
}

func (x *SetAvailablerParams) Reset() {
	*x = SetAvailablerParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_availabler_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetAvailablerParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetAvailablerParams) ProtoMessage() {}

func (x *SetAvailablerParams) ProtoReflect() protoreflect.Message {
	mi := &file_availabler_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetAvailablerParams.ProtoReflect.Descriptor instead.
func (*SetAvailablerParams) Descriptor() ([]byte, []int) {
	return file_availabler_proto_rawDescGZIP(), []int{4}
}

func (x *SetAvailablerParams) GetAuth() *Auth {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *SetAvailablerParams) GetParams() []*AvailablerParam {
	if x != nil {
		return x.Params
	}
	return nil
}

type AvailablerParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Params []*AvailablerParam `protobuf:"bytes,1,rep,name=params,proto3" json:"params,omitempty"`
}

func (x *AvailablerParams) Reset() {
	*x = AvailablerParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_availabler_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvailablerParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvailablerParams) ProtoMessage() {}

func (x *AvailablerParams) ProtoReflect() protoreflect.Message {
	mi := &file_availabler_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvailablerParams.ProtoReflect.Descriptor instead.
func (*AvailablerParams) Descriptor() ([]byte, []int) {
	return file_availabler_proto_rawDescGZIP(), []int{5}
}

func (x *AvailablerParams) GetParams() []*AvailablerParam {
	if x != nil {
		return x.Params
	}
	return nil
}

var File_availabler_proto protoreflect.FileDescriptor

var file_availabler_proto_rawDesc = []byte{
	0x0a, 0x10, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x07, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x1a, 0x0d, 0x63, 0x65, 0x72,
	0x61, 0x73, 0x75, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x6a, 0x0a, 0x18, 0x41, 0x76,
	0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x72, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x6d, 0x69, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x6d, 0x69, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x61,
	0x78, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6d, 0x61,
	0x78, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x93, 0x01, 0x0a, 0x19, 0x41, 0x76, 0x61, 0x69, 0x6c,
	0x61, 0x62, 0x6c, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49,
	0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x73, 0x68, 0x6f, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x73, 0x68, 0x6f, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x60, 0x0a, 0x1e,
	0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x3e,
	0x0a, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x22, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x2e, 0x41, 0x76, 0x61, 0x69, 0x6c,
	0x61, 0x62, 0x6c, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x52, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x22, 0xc9,
	0x01, 0x0a, 0x0f, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x72, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x44,
	0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x12, 0x1a,
	0x0a, 0x08, 0x73, 0x68, 0x6f, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x73, 0x68, 0x6f, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x69,
	0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6d, 0x69,
	0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x61, 0x78, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x22, 0x6a, 0x0a, 0x13, 0x53, 0x65,
	0x74, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x12, 0x21, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x04,
	0x61, 0x75, 0x74, 0x68, 0x12, 0x30, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x2e, 0x41,
	0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x06,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x44, 0x0a, 0x10, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61,
	0x62, 0x6c, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x30, 0x0a, 0x06, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x65, 0x72,
	0x61, 0x73, 0x75, 0x73, 0x2e, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x72, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x32, 0xff, 0x03, 0x0a,
	0x0a, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x72, 0x12, 0x4c, 0x0a, 0x11, 0x53,
	0x65, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x12, 0x21, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x2e, 0x41, 0x76, 0x61, 0x69, 0x6c,
	0x61, 0x62, 0x6c, 0x65, 0x72, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x1a, 0x12, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x2e, 0x42, 0x6f,
	0x6f, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x11, 0x47, 0x65, 0x74,
	0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x0d,
	0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x1a, 0x21, 0x2e,
	0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x2e, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c,
	0x65, 0x72, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x22, 0x00, 0x12, 0x4e, 0x0a, 0x12, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x22, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73,
	0x75, 0x73, 0x2e, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x72, 0x43, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x1a, 0x12, 0x2e, 0x63,
	0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x00, 0x12, 0x4e, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x0d, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73,
	0x75, 0x73, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x1a, 0x27, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75,
	0x73, 0x2e, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x00, 0x12, 0x46, 0x0a, 0x10, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x1c, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73,
	0x2e, 0x53, 0x65, 0x74, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x72, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x1a, 0x12, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x2e, 0x42,
	0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x3e, 0x0a, 0x10, 0x47, 0x65,
	0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x0d,
	0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x1a, 0x19, 0x2e,
	0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x2e, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c,
	0x65, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x00, 0x12, 0x32, 0x0a, 0x04, 0x50, 0x69,
	0x6e, 0x67, 0x12, 0x14, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x2e, 0x50, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73,
	0x75, 0x73, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x42, 0x23,
	0x5a, 0x21, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x6e, 0x73,
	0x61, 0x6e, 0x79, 0x63, 0x68, 0x2f, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x2d, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_availabler_proto_rawDescOnce sync.Once
	file_availabler_proto_rawDescData = file_availabler_proto_rawDesc
)

func file_availabler_proto_rawDescGZIP() []byte {
	file_availabler_proto_rawDescOnce.Do(func() {
		file_availabler_proto_rawDescData = protoimpl.X.CompressGZIP(file_availabler_proto_rawDescData)
	})
	return file_availabler_proto_rawDescData
}

var file_availabler_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_availabler_proto_goTypes = []interface{}{
	(*AvailablerSystemSettings)(nil),       // 0: cerasus.AvailablerSystemSettings
	(*AvailablerCompanySettings)(nil),      // 1: cerasus.AvailablerCompanySettings
	(*AvailablerCompanySettingsReply)(nil), // 2: cerasus.AvailablerCompanySettingsReply
	(*AvailablerParam)(nil),                // 3: cerasus.AvailablerParam
	(*SetAvailablerParams)(nil),            // 4: cerasus.SetAvailablerParams
	(*AvailablerParams)(nil),               // 5: cerasus.AvailablerParams
	(*Auth)(nil),                           // 6: cerasus.Auth
	(*PingRequest)(nil),                    // 7: cerasus.PingRequest
	(*BoolReply)(nil),                      // 8: cerasus.BoolReply
	(*PingReply)(nil),                      // 9: cerasus.PingReply
}
var file_availabler_proto_depIdxs = []int32{
	1,  // 0: cerasus.AvailablerCompanySettingsReply.settings:type_name -> cerasus.AvailablerCompanySettings
	6,  // 1: cerasus.SetAvailablerParams.auth:type_name -> cerasus.Auth
	3,  // 2: cerasus.SetAvailablerParams.params:type_name -> cerasus.AvailablerParam
	3,  // 3: cerasus.AvailablerParams.params:type_name -> cerasus.AvailablerParam
	0,  // 4: cerasus.Availabler.SetSystemSettings:input_type -> cerasus.AvailablerSystemSettings
	6,  // 5: cerasus.Availabler.GetSystemSettings:input_type -> cerasus.Auth
	1,  // 6: cerasus.Availabler.SetCompanySettings:input_type -> cerasus.AvailablerCompanySettings
	6,  // 7: cerasus.Availabler.GetCompanySettings:input_type -> cerasus.Auth
	4,  // 8: cerasus.Availabler.SetCompanyParams:input_type -> cerasus.SetAvailablerParams
	6,  // 9: cerasus.Availabler.GetCompanyParams:input_type -> cerasus.Auth
	7,  // 10: cerasus.Availabler.Ping:input_type -> cerasus.PingRequest
	8,  // 11: cerasus.Availabler.SetSystemSettings:output_type -> cerasus.BoolReply
	0,  // 12: cerasus.Availabler.GetSystemSettings:output_type -> cerasus.AvailablerSystemSettings
	8,  // 13: cerasus.Availabler.SetCompanySettings:output_type -> cerasus.BoolReply
	2,  // 14: cerasus.Availabler.GetCompanySettings:output_type -> cerasus.AvailablerCompanySettingsReply
	8,  // 15: cerasus.Availabler.SetCompanyParams:output_type -> cerasus.BoolReply
	5,  // 16: cerasus.Availabler.GetCompanyParams:output_type -> cerasus.AvailablerParams
	9,  // 17: cerasus.Availabler.Ping:output_type -> cerasus.PingReply
	11, // [11:18] is the sub-list for method output_type
	4,  // [4:11] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_availabler_proto_init() }
func file_availabler_proto_init() {
	if File_availabler_proto != nil {
		return
	}
	file_cerasus_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_availabler_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvailablerSystemSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_availabler_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvailablerCompanySettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_availabler_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvailablerCompanySettingsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_availabler_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvailablerParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_availabler_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetAvailablerParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_availabler_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvailablerParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_availabler_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_availabler_proto_goTypes,
		DependencyIndexes: file_availabler_proto_depIdxs,
		MessageInfos:      file_availabler_proto_msgTypes,
	}.Build()
	File_availabler_proto = out.File
	file_availabler_proto_rawDesc = nil
	file_availabler_proto_goTypes = nil
	file_availabler_proto_depIdxs = nil
}
