// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.12.4
// source: products.proto

package cerasus_proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CountData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID    int64 `protobuf:"varint,2,opt,name=ID,proto3" json:"ID,omitempty"`
	Count int64 `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *CountData) Reset() {
	*x = CountData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_products_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountData) ProtoMessage() {}

func (x *CountData) ProtoReflect() protoreflect.Message {
	mi := &file_products_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountData.ProtoReflect.Descriptor instead.
func (*CountData) Descriptor() ([]byte, []int) {
	return file_products_proto_rawDescGZIP(), []int{0}
}

func (x *CountData) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *CountData) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type CountDataSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Auth  *Auth `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"`
	ID    int64 `protobuf:"varint,2,opt,name=ID,proto3" json:"ID,omitempty"`
	Count int64 `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *CountDataSet) Reset() {
	*x = CountDataSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_products_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountDataSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountDataSet) ProtoMessage() {}

func (x *CountDataSet) ProtoReflect() protoreflect.Message {
	mi := &file_products_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountDataSet.ProtoReflect.Descriptor instead.
func (*CountDataSet) Descriptor() ([]byte, []int) {
	return file_products_proto_rawDescGZIP(), []int{1}
}

func (x *CountDataSet) GetAuth() *Auth {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *CountDataSet) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *CountDataSet) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type CountDataGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID []int64 `protobuf:"varint,1,rep,packed,name=ID,proto3" json:"ID,omitempty"`
}

func (x *CountDataGetRequest) Reset() {
	*x = CountDataGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_products_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountDataGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountDataGetRequest) ProtoMessage() {}

func (x *CountDataGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_products_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountDataGetRequest.ProtoReflect.Descriptor instead.
func (*CountDataGetRequest) Descriptor() ([]byte, []int) {
	return file_products_proto_rawDescGZIP(), []int{2}
}

func (x *CountDataGetRequest) GetID() []int64 {
	if x != nil {
		return x.ID
	}
	return nil
}

type CountDataGetReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CountData []*CountData `protobuf:"bytes,1,rep,name=countData,proto3" json:"countData,omitempty"`
}

func (x *CountDataGetReply) Reset() {
	*x = CountDataGetReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_products_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountDataGetReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountDataGetReply) ProtoMessage() {}

func (x *CountDataGetReply) ProtoReflect() protoreflect.Message {
	mi := &file_products_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountDataGetReply.ProtoReflect.Descriptor instead.
func (*CountDataGetReply) Descriptor() ([]byte, []int) {
	return file_products_proto_rawDescGZIP(), []int{3}
}

func (x *CountDataGetReply) GetCountData() []*CountData {
	if x != nil {
		return x.CountData
	}
	return nil
}

type ProductsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Products   []*Product  `protobuf:"bytes,1,rep,name=products,proto3" json:"products,omitempty"`
	Pagination *Pagination `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *ProductsReply) Reset() {
	*x = ProductsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_products_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductsReply) ProtoMessage() {}

func (x *ProductsReply) ProtoReflect() protoreflect.Message {
	mi := &file_products_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductsReply.ProtoReflect.Descriptor instead.
func (*ProductsReply) Descriptor() ([]byte, []int) {
	return file_products_proto_rawDescGZIP(), []int{4}
}

func (x *ProductsReply) GetProducts() []*Product {
	if x != nil {
		return x.Products
	}
	return nil
}

func (x *ProductsReply) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type ProductRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Auth *Auth `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"`
	ID   int64 `protobuf:"varint,2,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *ProductRequest) Reset() {
	*x = ProductRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_products_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductRequest) ProtoMessage() {}

func (x *ProductRequest) ProtoReflect() protoreflect.Message {
	mi := &file_products_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductRequest.ProtoReflect.Descriptor instead.
func (*ProductRequest) Descriptor() ([]byte, []int) {
	return file_products_proto_rawDescGZIP(), []int{5}
}

func (x *ProductRequest) GetAuth() *Auth {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *ProductRequest) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

type ShopProductPurcasesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Auth     *Auth  `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"`
	ID       int64  `protobuf:"varint,2,opt,name=ID,proto3" json:"ID,omitempty"`
	ShopCode string `protobuf:"bytes,3,opt,name=shopCode,proto3" json:"shopCode,omitempty"`
}

func (x *ShopProductPurcasesRequest) Reset() {
	*x = ShopProductPurcasesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_products_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShopProductPurcasesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShopProductPurcasesRequest) ProtoMessage() {}

func (x *ShopProductPurcasesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_products_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShopProductPurcasesRequest.ProtoReflect.Descriptor instead.
func (*ShopProductPurcasesRequest) Descriptor() ([]byte, []int) {
	return file_products_proto_rawDescGZIP(), []int{6}
}

func (x *ShopProductPurcasesRequest) GetAuth() *Auth {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *ShopProductPurcasesRequest) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *ShopProductPurcasesRequest) GetShopCode() string {
	if x != nil {
		return x.ShopCode
	}
	return ""
}

type ProductListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Auth    *Auth      `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"`
	Page    int64      `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	Filters []*Filter  `protobuf:"bytes,3,rep,name=filters,proto3" json:"filters,omitempty"`
	Sort    []*Sorting `protobuf:"bytes,4,rep,name=sort,proto3" json:"sort,omitempty"`
}

func (x *ProductListRequest) Reset() {
	*x = ProductListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_products_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductListRequest) ProtoMessage() {}

func (x *ProductListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_products_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductListRequest.ProtoReflect.Descriptor instead.
func (*ProductListRequest) Descriptor() ([]byte, []int) {
	return file_products_proto_rawDescGZIP(), []int{7}
}

func (x *ProductListRequest) GetAuth() *Auth {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *ProductListRequest) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ProductListRequest) GetFilters() []*Filter {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *ProductListRequest) GetSort() []*Sorting {
	if x != nil {
		return x.Sort
	}
	return nil
}

type ProductLink struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Auth          *Auth   `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"`
	ProductID     int64   `protobuf:"varint,2,opt,name=productID,proto3" json:"productID,omitempty"`
	ShopCode      string  `protobuf:"bytes,3,opt,name=shopCode,proto3" json:"shopCode,omitempty"`
	ShopProductID []int64 `protobuf:"varint,4,rep,packed,name=shopProductID,proto3" json:"shopProductID,omitempty"`
	Name          string  `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *ProductLink) Reset() {
	*x = ProductLink{}
	if protoimpl.UnsafeEnabled {
		mi := &file_products_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductLink) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductLink) ProtoMessage() {}

func (x *ProductLink) ProtoReflect() protoreflect.Message {
	mi := &file_products_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductLink.ProtoReflect.Descriptor instead.
func (*ProductLink) Descriptor() ([]byte, []int) {
	return file_products_proto_rawDescGZIP(), []int{8}
}

func (x *ProductLink) GetAuth() *Auth {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *ProductLink) GetProductID() int64 {
	if x != nil {
		return x.ProductID
	}
	return 0
}

func (x *ProductLink) GetShopCode() string {
	if x != nil {
		return x.ShopCode
	}
	return ""
}

func (x *ProductLink) GetShopProductID() []int64 {
	if x != nil {
		return x.ShopProductID
	}
	return nil
}

func (x *ProductLink) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type ProductsLinks struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Links []*ProductLink `protobuf:"bytes,1,rep,name=links,proto3" json:"links,omitempty"`
}

func (x *ProductsLinks) Reset() {
	*x = ProductsLinks{}
	if protoimpl.UnsafeEnabled {
		mi := &file_products_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductsLinks) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductsLinks) ProtoMessage() {}

func (x *ProductsLinks) ProtoReflect() protoreflect.Message {
	mi := &file_products_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductsLinks.ProtoReflect.Descriptor instead.
func (*ProductsLinks) Descriptor() ([]byte, []int) {
	return file_products_proto_rawDescGZIP(), []int{9}
}

func (x *ProductsLinks) GetLinks() []*ProductLink {
	if x != nil {
		return x.Links
	}
	return nil
}

type CheckLinksReqest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Auth           *Auth   `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"`
	ShopProductsID []int64 `protobuf:"varint,2,rep,packed,name=shopProductsID,proto3" json:"shopProductsID,omitempty"`
	ShopCode       string  `protobuf:"bytes,3,opt,name=shopCode,proto3" json:"shopCode,omitempty"`
}

func (x *CheckLinksReqest) Reset() {
	*x = CheckLinksReqest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_products_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckLinksReqest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckLinksReqest) ProtoMessage() {}

func (x *CheckLinksReqest) ProtoReflect() protoreflect.Message {
	mi := &file_products_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckLinksReqest.ProtoReflect.Descriptor instead.
func (*CheckLinksReqest) Descriptor() ([]byte, []int) {
	return file_products_proto_rawDescGZIP(), []int{10}
}

func (x *CheckLinksReqest) GetAuth() *Auth {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *CheckLinksReqest) GetShopProductsID() []int64 {
	if x != nil {
		return x.ShopProductsID
	}
	return nil
}

func (x *CheckLinksReqest) GetShopCode() string {
	if x != nil {
		return x.ShopCode
	}
	return ""
}

type UpdateProductRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Auth    *Auth  `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"`
	ID      int64  `protobuf:"varint,2,opt,name=ID,proto3" json:"ID,omitempty"`
	Title   string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Comment string `protobuf:"bytes,4,opt,name=comment,proto3" json:"comment,omitempty"`
	Active  bool   `protobuf:"varint,5,opt,name=active,proto3" json:"active,omitempty"`
}

func (x *UpdateProductRequest) Reset() {
	*x = UpdateProductRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_products_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateProductRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProductRequest) ProtoMessage() {}

func (x *UpdateProductRequest) ProtoReflect() protoreflect.Message {
	mi := &file_products_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProductRequest.ProtoReflect.Descriptor instead.
func (*UpdateProductRequest) Descriptor() ([]byte, []int) {
	return file_products_proto_rawDescGZIP(), []int{11}
}

func (x *UpdateProductRequest) GetAuth() *Auth {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *UpdateProductRequest) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *UpdateProductRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UpdateProductRequest) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *UpdateProductRequest) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

type SetProductBrandRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Auth    *Auth `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"`
	ID      int64 `protobuf:"varint,2,opt,name=ID,proto3" json:"ID,omitempty"`
	BrandID int64 `protobuf:"varint,3,opt,name=brandID,proto3" json:"brandID,omitempty"`
}

func (x *SetProductBrandRequest) Reset() {
	*x = SetProductBrandRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_products_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetProductBrandRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetProductBrandRequest) ProtoMessage() {}

func (x *SetProductBrandRequest) ProtoReflect() protoreflect.Message {
	mi := &file_products_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetProductBrandRequest.ProtoReflect.Descriptor instead.
func (*SetProductBrandRequest) Descriptor() ([]byte, []int) {
	return file_products_proto_rawDescGZIP(), []int{12}
}

func (x *SetProductBrandRequest) GetAuth() *Auth {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *SetProductBrandRequest) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *SetProductBrandRequest) GetBrandID() int64 {
	if x != nil {
		return x.BrandID
	}
	return 0
}

type SetProductPurchaseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Auth     *Auth   `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"`
	ID       int64   `protobuf:"varint,2,opt,name=ID,proto3" json:"ID,omitempty"`
	Purchase float32 `protobuf:"fixed32,3,opt,name=purchase,proto3" json:"purchase,omitempty"`
	DateFrom string  `protobuf:"bytes,4,opt,name=dateFrom,proto3" json:"dateFrom,omitempty"`
}

func (x *SetProductPurchaseRequest) Reset() {
	*x = SetProductPurchaseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_products_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetProductPurchaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetProductPurchaseRequest) ProtoMessage() {}

func (x *SetProductPurchaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_products_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetProductPurchaseRequest.ProtoReflect.Descriptor instead.
func (*SetProductPurchaseRequest) Descriptor() ([]byte, []int) {
	return file_products_proto_rawDescGZIP(), []int{13}
}

func (x *SetProductPurchaseRequest) GetAuth() *Auth {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *SetProductPurchaseRequest) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *SetProductPurchaseRequest) GetPurchase() float32 {
	if x != nil {
		return x.Purchase
	}
	return 0
}

func (x *SetProductPurchaseRequest) GetDateFrom() string {
	if x != nil {
		return x.DateFrom
	}
	return ""
}

type ProductPurchase struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PurchaseID int64   `protobuf:"varint,1,opt,name=purchaseID,proto3" json:"purchaseID,omitempty"`
	Purchase   float32 `protobuf:"fixed32,2,opt,name=purchase,proto3" json:"purchase,omitempty"`
	DateFrom   string  `protobuf:"bytes,3,opt,name=dateFrom,proto3" json:"dateFrom,omitempty"`
}

func (x *ProductPurchase) Reset() {
	*x = ProductPurchase{}
	if protoimpl.UnsafeEnabled {
		mi := &file_products_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductPurchase) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductPurchase) ProtoMessage() {}

func (x *ProductPurchase) ProtoReflect() protoreflect.Message {
	mi := &file_products_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductPurchase.ProtoReflect.Descriptor instead.
func (*ProductPurchase) Descriptor() ([]byte, []int) {
	return file_products_proto_rawDescGZIP(), []int{14}
}

func (x *ProductPurchase) GetPurchaseID() int64 {
	if x != nil {
		return x.PurchaseID
	}
	return 0
}

func (x *ProductPurchase) GetPurchase() float32 {
	if x != nil {
		return x.Purchase
	}
	return 0
}

func (x *ProductPurchase) GetDateFrom() string {
	if x != nil {
		return x.DateFrom
	}
	return ""
}

type PurchasesReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Purchases []*ProductPurchase `protobuf:"bytes,1,rep,name=purchases,proto3" json:"purchases,omitempty"`
}

func (x *PurchasesReply) Reset() {
	*x = PurchasesReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_products_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PurchasesReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PurchasesReply) ProtoMessage() {}

func (x *PurchasesReply) ProtoReflect() protoreflect.Message {
	mi := &file_products_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PurchasesReply.ProtoReflect.Descriptor instead.
func (*PurchasesReply) Descriptor() ([]byte, []int) {
	return file_products_proto_rawDescGZIP(), []int{15}
}

func (x *PurchasesReply) GetPurchases() []*ProductPurchase {
	if x != nil {
		return x.Purchases
	}
	return nil
}

type ListIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Auth     *Auth  `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"`
	ShopCode string `protobuf:"bytes,2,opt,name=shopCode,proto3" json:"shopCode,omitempty"`
}

func (x *ListIDRequest) Reset() {
	*x = ListIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_products_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListIDRequest) ProtoMessage() {}

func (x *ListIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_products_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListIDRequest.ProtoReflect.Descriptor instead.
func (*ListIDRequest) Descriptor() ([]byte, []int) {
	return file_products_proto_rawDescGZIP(), []int{16}
}

func (x *ListIDRequest) GetAuth() *Auth {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *ListIDRequest) GetShopCode() string {
	if x != nil {
		return x.ShopCode
	}
	return ""
}

type BrandListIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Auth     *Auth   `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"`
	ShopCode string  `protobuf:"bytes,2,opt,name=shopCode,proto3" json:"shopCode,omitempty"`
	BrandID  []int64 `protobuf:"varint,3,rep,packed,name=brandID,proto3" json:"brandID,omitempty"`
}

func (x *BrandListIDRequest) Reset() {
	*x = BrandListIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_products_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BrandListIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BrandListIDRequest) ProtoMessage() {}

func (x *BrandListIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_products_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BrandListIDRequest.ProtoReflect.Descriptor instead.
func (*BrandListIDRequest) Descriptor() ([]byte, []int) {
	return file_products_proto_rawDescGZIP(), []int{17}
}

func (x *BrandListIDRequest) GetAuth() *Auth {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *BrandListIDRequest) GetShopCode() string {
	if x != nil {
		return x.ShopCode
	}
	return ""
}

func (x *BrandListIDRequest) GetBrandID() []int64 {
	if x != nil {
		return x.BrandID
	}
	return nil
}

type ListID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShopProductID []int64 `protobuf:"varint,1,rep,packed,name=shopProductID,proto3" json:"shopProductID,omitempty"`
}

func (x *ListID) Reset() {
	*x = ListID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_products_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListID) ProtoMessage() {}

func (x *ListID) ProtoReflect() protoreflect.Message {
	mi := &file_products_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListID.ProtoReflect.Descriptor instead.
func (*ListID) Descriptor() ([]byte, []int) {
	return file_products_proto_rawDescGZIP(), []int{18}
}

func (x *ListID) GetShopProductID() []int64 {
	if x != nil {
		return x.ShopProductID
	}
	return nil
}

type ShopProductBrandID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShopProductID int64 `protobuf:"varint,1,opt,name=shopProductID,proto3" json:"shopProductID,omitempty"`
	BrandID       int64 `protobuf:"varint,2,opt,name=brandID,proto3" json:"brandID,omitempty"`
}

func (x *ShopProductBrandID) Reset() {
	*x = ShopProductBrandID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_products_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShopProductBrandID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShopProductBrandID) ProtoMessage() {}

func (x *ShopProductBrandID) ProtoReflect() protoreflect.Message {
	mi := &file_products_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShopProductBrandID.ProtoReflect.Descriptor instead.
func (*ShopProductBrandID) Descriptor() ([]byte, []int) {
	return file_products_proto_rawDescGZIP(), []int{19}
}

func (x *ShopProductBrandID) GetShopProductID() int64 {
	if x != nil {
		return x.ShopProductID
	}
	return 0
}

func (x *ShopProductBrandID) GetBrandID() int64 {
	if x != nil {
		return x.BrandID
	}
	return 0
}

type BrandProductRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Auth          *Auth   `protobuf:"bytes,1,opt,name=auth,proto3" json:"auth,omitempty"`
	ShopCode      string  `protobuf:"bytes,2,opt,name=shopCode,proto3" json:"shopCode,omitempty"`
	ShopProductID []int64 `protobuf:"varint,3,rep,packed,name=shopProductID,proto3" json:"shopProductID,omitempty"`
}

func (x *BrandProductRequest) Reset() {
	*x = BrandProductRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_products_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BrandProductRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BrandProductRequest) ProtoMessage() {}

func (x *BrandProductRequest) ProtoReflect() protoreflect.Message {
	mi := &file_products_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BrandProductRequest.ProtoReflect.Descriptor instead.
func (*BrandProductRequest) Descriptor() ([]byte, []int) {
	return file_products_proto_rawDescGZIP(), []int{20}
}

func (x *BrandProductRequest) GetAuth() *Auth {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *BrandProductRequest) GetShopCode() string {
	if x != nil {
		return x.ShopCode
	}
	return ""
}

func (x *BrandProductRequest) GetShopProductID() []int64 {
	if x != nil {
		return x.ShopProductID
	}
	return nil
}

type BrandListID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*ShopProductBrandID `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *BrandListID) Reset() {
	*x = BrandListID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_products_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BrandListID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BrandListID) ProtoMessage() {}

func (x *BrandListID) ProtoReflect() protoreflect.Message {
	mi := &file_products_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BrandListID.ProtoReflect.Descriptor instead.
func (*BrandListID) Descriptor() ([]byte, []int) {
	return file_products_proto_rawDescGZIP(), []int{21}
}

func (x *BrandListID) GetList() []*ShopProductBrandID {
	if x != nil {
		return x.List
	}
	return nil
}

type ProductByShopRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShopCode      string `protobuf:"bytes,1,opt,name=shopCode,proto3" json:"shopCode,omitempty"`
	ShopProductID int64  `protobuf:"varint,2,opt,name=shopProductID,proto3" json:"shopProductID,omitempty"`
}

func (x *ProductByShopRequest) Reset() {
	*x = ProductByShopRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_products_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductByShopRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductByShopRequest) ProtoMessage() {}

func (x *ProductByShopRequest) ProtoReflect() protoreflect.Message {
	mi := &file_products_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductByShopRequest.ProtoReflect.Descriptor instead.
func (*ProductByShopRequest) Descriptor() ([]byte, []int) {
	return file_products_proto_rawDescGZIP(), []int{22}
}

func (x *ProductByShopRequest) GetShopCode() string {
	if x != nil {
		return x.ShopCode
	}
	return ""
}

func (x *ProductByShopRequest) GetShopProductID() int64 {
	if x != nil {
		return x.ShopProductID
	}
	return 0
}

var File_products_proto protoreflect.FileDescriptor

var file_products_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x07, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x1a, 0x0d, 0x63, 0x65, 0x72, 0x61, 0x73,
	0x75, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x31, 0x0a, 0x09, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x57, 0x0a, 0x0c, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x65, 0x74, 0x12, 0x21, 0x0a, 0x04, 0x61,
	0x75, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x65, 0x72, 0x61,
	0x73, 0x75, 0x73, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x12, 0x0e,
	0x0a, 0x02, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x44, 0x12, 0x14,
	0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x22, 0x25, 0x0a, 0x13, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x02, 0x49, 0x44, 0x22, 0x45, 0x0a, 0x11, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x30, 0x0a, 0x09, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x2e, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x09, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x22, 0x72, 0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x2c, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x2e,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x73, 0x12, 0x33, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x2e,
	0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x43, 0x0a, 0x0e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73,
	0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x12, 0x0e, 0x0a, 0x02, 0x49,
	0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x44, 0x22, 0x6b, 0x0a, 0x1a, 0x53,
	0x68, 0x6f, 0x70, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x50, 0x75, 0x72, 0x63, 0x61, 0x73,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x04, 0x61, 0x75, 0x74,
	0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75,
	0x73, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x12, 0x0e, 0x0a, 0x02,
	0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08,
	0x73, 0x68, 0x6f, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x73, 0x68, 0x6f, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x9c, 0x01, 0x0a, 0x12, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x21, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x04, 0x61, 0x75,
	0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x29, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75,
	0x73, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x73, 0x12, 0x24, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x69, 0x6e,
	0x67, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x22, 0xa4, 0x01, 0x0a, 0x0b, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x21, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x2e,
	0x41, 0x75, 0x74, 0x68, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x68, 0x6f, 0x70,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x68, 0x6f, 0x70,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x68, 0x6f, 0x70, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x49, 0x44, 0x18, 0x04, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0d, 0x73, 0x68, 0x6f,
	0x70, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x3b,
	0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x12,
	0x2a, 0x0a, 0x05, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x05, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x22, 0x79, 0x0a, 0x10, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x65, 0x73, 0x74, 0x12,
	0x21, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x04, 0x61, 0x75,
	0x74, 0x68, 0x12, 0x26, 0x0a, 0x0e, 0x73, 0x68, 0x6f, 0x70, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x73, 0x49, 0x44, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0e, 0x73, 0x68, 0x6f, 0x70,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x68,
	0x6f, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x68,
	0x6f, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x91, 0x01, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x21, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x04, 0x61, 0x75,
	0x74, 0x68, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x22, 0x65, 0x0a, 0x16, 0x53, 0x65,
	0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x2e, 0x41, 0x75, 0x74,
	0x68, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x72, 0x61, 0x6e, 0x64,
	0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x49,
	0x44, 0x22, 0x86, 0x01, 0x0a, 0x19, 0x53, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x21, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x04, 0x61, 0x75,
	0x74, 0x68, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x64, 0x61, 0x74, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x64, 0x61, 0x74, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x22, 0x69, 0x0a, 0x0f, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x49, 0x44, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x08, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74,
	0x65, 0x46, 0x72, 0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74,
	0x65, 0x46, 0x72, 0x6f, 0x6d, 0x22, 0x48, 0x0a, 0x0e, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73,
	0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x36, 0x0a, 0x09, 0x70, 0x75, 0x72, 0x63, 0x68,
	0x61, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x65, 0x72,
	0x61, 0x73, 0x75, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x50, 0x75, 0x72, 0x63,
	0x68, 0x61, 0x73, 0x65, 0x52, 0x09, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x73, 0x22,
	0x4e, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x21, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x04, 0x61,
	0x75, 0x74, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x68, 0x6f, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x68, 0x6f, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x22,
	0x6d, 0x0a, 0x12, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x44, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x2e, 0x41, 0x75,
	0x74, 0x68, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x68, 0x6f, 0x70,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x68, 0x6f, 0x70,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x49, 0x44, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x03, 0x52, 0x07, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x49, 0x44, 0x22, 0x2e,
	0x0a, 0x06, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x44, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x68, 0x6f, 0x70,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52,
	0x0d, 0x73, 0x68, 0x6f, 0x70, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x22, 0x54,
	0x0a, 0x12, 0x53, 0x68, 0x6f, 0x70, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x42, 0x72, 0x61,
	0x6e, 0x64, 0x49, 0x44, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x68, 0x6f, 0x70, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x73, 0x68, 0x6f,
	0x70, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x72,
	0x61, 0x6e, 0x64, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x62, 0x72, 0x61,
	0x6e, 0x64, 0x49, 0x44, 0x22, 0x7a, 0x0a, 0x13, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x04, 0x61,
	0x75, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x65, 0x72, 0x61,
	0x73, 0x75, 0x73, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x12, 0x1a,
	0x0a, 0x08, 0x73, 0x68, 0x6f, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x73, 0x68, 0x6f, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x68,
	0x6f, 0x70, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x03, 0x52, 0x0d, 0x73, 0x68, 0x6f, 0x70, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44,
	0x22, 0x3e, 0x0a, 0x0b, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x44, 0x12,
	0x2f, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x2e, 0x53, 0x68, 0x6f, 0x70, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x49, 0x44, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x22, 0x58, 0x0a, 0x14, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x42, 0x79, 0x53, 0x68, 0x6f,
	0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x68, 0x6f, 0x70,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x68, 0x6f, 0x70,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x68, 0x6f, 0x70, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x73, 0x68, 0x6f,
	0x70, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x32, 0xe4, 0x0c, 0x0a, 0x08, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x12, 0x44, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x12, 0x1b, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73,
	0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x2e, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x39, 0x0a,
	0x0a, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x17, 0x2e, 0x63, 0x65,
	0x72, 0x61, 0x73, 0x75, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x2e, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x22, 0x00, 0x12, 0x3c, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x53, 0x68, 0x6f, 0x70, 0x12, 0x14, 0x2e, 0x63, 0x65, 0x72,
	0x61, 0x73, 0x75, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x69, 0x6e, 0x6b,
	0x1a, 0x12, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x38, 0x0a, 0x0a, 0x4c, 0x69, 0x6e, 0x6b, 0x54, 0x6f,
	0x53, 0x68, 0x6f, 0x70, 0x12, 0x14, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x2e, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x1a, 0x12, 0x2e, 0x63, 0x65, 0x72,
	0x61, 0x73, 0x75, 0x73, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00,
	0x12, 0x3a, 0x0a, 0x0c, 0x55, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x54, 0x6f, 0x53, 0x68, 0x6f, 0x70,
	0x12, 0x14, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x1a, 0x12, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73,
	0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x0d,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x1d, 0x2e,
	0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x63,
	0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x00, 0x12, 0x48, 0x0a, 0x0f, 0x53, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x42, 0x72, 0x61, 0x6e, 0x64, 0x12, 0x1f, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x2e,
	0x53, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73,
	0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x4b, 0x0a, 0x12,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x42, 0x72, 0x61,
	0x6e, 0x64, 0x12, 0x1f, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x2e, 0x53, 0x65, 0x74,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x2e, 0x42, 0x6f,
	0x6f, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x4e, 0x0a, 0x12, 0x53, 0x65, 0x74,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x12,
	0x22, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x2e, 0x53, 0x65, 0x74, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x2e, 0x42, 0x6f,
	0x6f, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x49, 0x0a, 0x12, 0x47, 0x65, 0x74,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x12,
	0x17, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73,
	0x75, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x49, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x73, 0x12, 0x17, 0x2e, 0x63, 0x65,
	0x72, 0x61, 0x73, 0x75, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x2e, 0x50,
	0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12,
	0x45, 0x0a, 0x15, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x12, 0x16, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73,
	0x75, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x12, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x41, 0x0a, 0x0d, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x16, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75,
	0x73, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x16, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x4e, 0x0a, 0x17, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x4c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x53, 0x68, 0x6f, 0x70, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x73, 0x12, 0x19, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x2e, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x65, 0x73, 0x74, 0x1a,
	0x16, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x73, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x22, 0x00, 0x12, 0x4b, 0x0a, 0x16, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x4c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x53, 0x68, 0x6f, 0x70, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x12, 0x19, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x2e, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x65, 0x73, 0x74, 0x1a, 0x14,
	0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x4c, 0x69, 0x6e, 0x6b, 0x22, 0x00, 0x12, 0x41, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x49, 0x44, 0x12, 0x16,
	0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x44, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x44, 0x22, 0x00, 0x12, 0x58, 0x0a, 0x16, 0x47, 0x65, 0x74,
	0x53, 0x68, 0x6f, 0x70, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x50, 0x75, 0x72, 0x63, 0x61,
	0x73, 0x65, 0x73, 0x12, 0x23, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x2e, 0x53, 0x68,
	0x6f, 0x70, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x50, 0x75, 0x72, 0x63, 0x61, 0x73, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73,
	0x75, 0x73, 0x2e, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x42, 0x79, 0x53, 0x68, 0x6f, 0x70, 0x49, 0x44, 0x12, 0x1d, 0x2e, 0x63, 0x65, 0x72, 0x61,
	0x73, 0x75, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x42, 0x79, 0x53, 0x68, 0x6f,
	0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73,
	0x75, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x12,
	0x47, 0x65, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73,
	0x49, 0x44, 0x12, 0x1b, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x2e, 0x42, 0x72, 0x61,
	0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x0f, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x44,
	0x22, 0x00, 0x12, 0x4a, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x73, 0x49,
	0x44, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x1c, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73,
	0x75, 0x73, 0x2e, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73,
	0x2e, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x44, 0x22, 0x00, 0x12, 0x3e,
	0x0a, 0x0f, 0x53, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x15, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x2e, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x65, 0x74, 0x1a, 0x12, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73,
	0x75, 0x73, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x4d,
	0x0a, 0x0f, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x1c, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x2e, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1a, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x32, 0x0a,
	0x04, 0x50, 0x69, 0x6e, 0x67, 0x12, 0x14, 0x2e, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73, 0x2e,
	0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x63, 0x65,
	0x72, 0x61, 0x73, 0x75, 0x73, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x00, 0x42, 0x23, 0x5a, 0x21, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x61, 0x6e, 0x73, 0x61, 0x6e, 0x79, 0x63, 0x68, 0x2f, 0x63, 0x65, 0x72, 0x61, 0x73, 0x75, 0x73,
	0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_products_proto_rawDescOnce sync.Once
	file_products_proto_rawDescData = file_products_proto_rawDesc
)

func file_products_proto_rawDescGZIP() []byte {
	file_products_proto_rawDescOnce.Do(func() {
		file_products_proto_rawDescData = protoimpl.X.CompressGZIP(file_products_proto_rawDescData)
	})
	return file_products_proto_rawDescData
}

var file_products_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_products_proto_goTypes = []interface{}{
	(*CountData)(nil),                  // 0: cerasus.CountData
	(*CountDataSet)(nil),               // 1: cerasus.CountDataSet
	(*CountDataGetRequest)(nil),        // 2: cerasus.CountDataGetRequest
	(*CountDataGetReply)(nil),          // 3: cerasus.CountDataGetReply
	(*ProductsReply)(nil),              // 4: cerasus.ProductsReply
	(*ProductRequest)(nil),             // 5: cerasus.ProductRequest
	(*ShopProductPurcasesRequest)(nil), // 6: cerasus.ShopProductPurcasesRequest
	(*ProductListRequest)(nil),         // 7: cerasus.ProductListRequest
	(*ProductLink)(nil),                // 8: cerasus.ProductLink
	(*ProductsLinks)(nil),              // 9: cerasus.ProductsLinks
	(*CheckLinksReqest)(nil),           // 10: cerasus.CheckLinksReqest
	(*UpdateProductRequest)(nil),       // 11: cerasus.UpdateProductRequest
	(*SetProductBrandRequest)(nil),     // 12: cerasus.SetProductBrandRequest
	(*SetProductPurchaseRequest)(nil),  // 13: cerasus.SetProductPurchaseRequest
	(*ProductPurchase)(nil),            // 14: cerasus.ProductPurchase
	(*PurchasesReply)(nil),             // 15: cerasus.PurchasesReply
	(*ListIDRequest)(nil),              // 16: cerasus.ListIDRequest
	(*BrandListIDRequest)(nil),         // 17: cerasus.BrandListIDRequest
	(*ListID)(nil),                     // 18: cerasus.ListID
	(*ShopProductBrandID)(nil),         // 19: cerasus.ShopProductBrandID
	(*BrandProductRequest)(nil),        // 20: cerasus.BrandProductRequest
	(*BrandListID)(nil),                // 21: cerasus.BrandListID
	(*ProductByShopRequest)(nil),       // 22: cerasus.ProductByShopRequest
	(*Auth)(nil),                       // 23: cerasus.Auth
	(*Product)(nil),                    // 24: cerasus.Product
	(*Pagination)(nil),                 // 25: cerasus.Pagination
	(*Filter)(nil),                     // 26: cerasus.Filter
	(*Sorting)(nil),                    // 27: cerasus.Sorting
	(*DeleteRequest)(nil),              // 28: cerasus.DeleteRequest
	(*SearchRequest)(nil),              // 29: cerasus.SearchRequest
	(*PingRequest)(nil),                // 30: cerasus.PingRequest
	(*BoolReply)(nil),                  // 31: cerasus.BoolReply
	(*PingReply)(nil),                  // 32: cerasus.PingReply
}
var file_products_proto_depIdxs = []int32{
	23, // 0: cerasus.CountDataSet.auth:type_name -> cerasus.Auth
	0,  // 1: cerasus.CountDataGetReply.countData:type_name -> cerasus.CountData
	24, // 2: cerasus.ProductsReply.products:type_name -> cerasus.Product
	25, // 3: cerasus.ProductsReply.pagination:type_name -> cerasus.Pagination
	23, // 4: cerasus.ProductRequest.auth:type_name -> cerasus.Auth
	23, // 5: cerasus.ShopProductPurcasesRequest.auth:type_name -> cerasus.Auth
	23, // 6: cerasus.ProductListRequest.auth:type_name -> cerasus.Auth
	26, // 7: cerasus.ProductListRequest.filters:type_name -> cerasus.Filter
	27, // 8: cerasus.ProductListRequest.sort:type_name -> cerasus.Sorting
	23, // 9: cerasus.ProductLink.auth:type_name -> cerasus.Auth
	8,  // 10: cerasus.ProductsLinks.links:type_name -> cerasus.ProductLink
	23, // 11: cerasus.CheckLinksReqest.auth:type_name -> cerasus.Auth
	23, // 12: cerasus.UpdateProductRequest.auth:type_name -> cerasus.Auth
	23, // 13: cerasus.SetProductBrandRequest.auth:type_name -> cerasus.Auth
	23, // 14: cerasus.SetProductPurchaseRequest.auth:type_name -> cerasus.Auth
	14, // 15: cerasus.PurchasesReply.purchases:type_name -> cerasus.ProductPurchase
	23, // 16: cerasus.ListIDRequest.auth:type_name -> cerasus.Auth
	23, // 17: cerasus.BrandListIDRequest.auth:type_name -> cerasus.Auth
	23, // 18: cerasus.BrandProductRequest.auth:type_name -> cerasus.Auth
	19, // 19: cerasus.BrandListID.list:type_name -> cerasus.ShopProductBrandID
	7,  // 20: cerasus.Products.GetProducts:input_type -> cerasus.ProductListRequest
	5,  // 21: cerasus.Products.GetProduct:input_type -> cerasus.ProductRequest
	8,  // 22: cerasus.Products.CreateFromShop:input_type -> cerasus.ProductLink
	8,  // 23: cerasus.Products.LinkToShop:input_type -> cerasus.ProductLink
	8,  // 24: cerasus.Products.UnlinkToShop:input_type -> cerasus.ProductLink
	11, // 25: cerasus.Products.UpdateProduct:input_type -> cerasus.UpdateProductRequest
	12, // 26: cerasus.Products.SetProductBrand:input_type -> cerasus.SetProductBrandRequest
	12, // 27: cerasus.Products.RemoveProductBrand:input_type -> cerasus.SetProductBrandRequest
	13, // 28: cerasus.Products.SetProductPurchase:input_type -> cerasus.SetProductPurchaseRequest
	5,  // 29: cerasus.Products.GetProductPurchase:input_type -> cerasus.ProductRequest
	5,  // 30: cerasus.Products.GetProductPurchases:input_type -> cerasus.ProductRequest
	28, // 31: cerasus.Products.RemoveProductPurchase:input_type -> cerasus.DeleteRequest
	29, // 32: cerasus.Products.SearchProduct:input_type -> cerasus.SearchRequest
	10, // 33: cerasus.Products.CheckLinkedShopProducts:input_type -> cerasus.CheckLinksReqest
	10, // 34: cerasus.Products.CheckLinkedShopProduct:input_type -> cerasus.CheckLinksReqest
	16, // 35: cerasus.Products.GetCompanyProductsID:input_type -> cerasus.ListIDRequest
	6,  // 36: cerasus.Products.GetShopProductPurcases:input_type -> cerasus.ShopProductPurcasesRequest
	22, // 37: cerasus.Products.GetProductByShopID:input_type -> cerasus.ProductByShopRequest
	17, // 38: cerasus.Products.GetBrandProductsID:input_type -> cerasus.BrandListIDRequest
	20, // 39: cerasus.Products.GetBrandsIDProduct:input_type -> cerasus.BrandProductRequest
	1,  // 40: cerasus.Products.SetProductCount:input_type -> cerasus.CountDataSet
	2,  // 41: cerasus.Products.GetProductCount:input_type -> cerasus.CountDataGetRequest
	30, // 42: cerasus.Products.Ping:input_type -> cerasus.PingRequest
	4,  // 43: cerasus.Products.GetProducts:output_type -> cerasus.ProductsReply
	24, // 44: cerasus.Products.GetProduct:output_type -> cerasus.Product
	31, // 45: cerasus.Products.CreateFromShop:output_type -> cerasus.BoolReply
	31, // 46: cerasus.Products.LinkToShop:output_type -> cerasus.BoolReply
	31, // 47: cerasus.Products.UnlinkToShop:output_type -> cerasus.BoolReply
	31, // 48: cerasus.Products.UpdateProduct:output_type -> cerasus.BoolReply
	31, // 49: cerasus.Products.SetProductBrand:output_type -> cerasus.BoolReply
	31, // 50: cerasus.Products.RemoveProductBrand:output_type -> cerasus.BoolReply
	31, // 51: cerasus.Products.SetProductPurchase:output_type -> cerasus.BoolReply
	14, // 52: cerasus.Products.GetProductPurchase:output_type -> cerasus.ProductPurchase
	15, // 53: cerasus.Products.GetProductPurchases:output_type -> cerasus.PurchasesReply
	31, // 54: cerasus.Products.RemoveProductPurchase:output_type -> cerasus.BoolReply
	4,  // 55: cerasus.Products.SearchProduct:output_type -> cerasus.ProductsReply
	9,  // 56: cerasus.Products.CheckLinkedShopProducts:output_type -> cerasus.ProductsLinks
	8,  // 57: cerasus.Products.CheckLinkedShopProduct:output_type -> cerasus.ProductLink
	18, // 58: cerasus.Products.GetCompanyProductsID:output_type -> cerasus.ListID
	15, // 59: cerasus.Products.GetShopProductPurcases:output_type -> cerasus.PurchasesReply
	24, // 60: cerasus.Products.GetProductByShopID:output_type -> cerasus.Product
	18, // 61: cerasus.Products.GetBrandProductsID:output_type -> cerasus.ListID
	21, // 62: cerasus.Products.GetBrandsIDProduct:output_type -> cerasus.BrandListID
	31, // 63: cerasus.Products.SetProductCount:output_type -> cerasus.BoolReply
	3,  // 64: cerasus.Products.GetProductCount:output_type -> cerasus.CountDataGetReply
	32, // 65: cerasus.Products.Ping:output_type -> cerasus.PingReply
	43, // [43:66] is the sub-list for method output_type
	20, // [20:43] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_products_proto_init() }
func file_products_proto_init() {
	if File_products_proto != nil {
		return
	}
	file_cerasus_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_products_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_products_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountDataSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_products_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountDataGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_products_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountDataGetReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_products_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_products_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_products_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShopProductPurcasesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_products_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_products_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductLink); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_products_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductsLinks); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_products_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckLinksReqest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_products_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateProductRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_products_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetProductBrandRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_products_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetProductPurchaseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_products_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductPurchase); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_products_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PurchasesReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_products_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_products_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BrandListIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_products_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_products_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShopProductBrandID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_products_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BrandProductRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_products_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BrandListID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_products_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductByShopRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_products_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_products_proto_goTypes,
		DependencyIndexes: file_products_proto_depIdxs,
		MessageInfos:      file_products_proto_msgTypes,
	}.Build()
	File_products_proto = out.File
	file_products_proto_rawDesc = nil
	file_products_proto_goTypes = nil
	file_products_proto_depIdxs = nil
}
