syntax = "proto3";
import "cerasus.proto";

package cerasus;

option go_package = "github.com/ansanych/cerasus-proto";

service Products {
    rpc Ping (PingRequest) returns (PingReply) {}
    rpc GetProducts (ProductsRequest) returns (ProductsReply) {}
    rpc GetProduct (RequestByID) returns (Product) {}
    rpc CreateFromShop (ProductLink) returns (StatusReply) {}
    rpc LinkToShop (ProductLink) returns (StatusReply) {}
    rpc UnlinkToShop (ProductLink) returns (StatusReply) {}
    rpc UpdateProduct (UpdateProductRequest) returns (StatusReply) {}
    rpc SetProductBrand (SetProductBrandRequest) returns (StatusReply) {}
    rpc RemoveProductBrand (SetProductBrandRequest) returns (StatusReply) {}
    rpc SetProductPurchase (SetProductPurchaseRequest) returns (StatusReply) {}
    rpc GetProductPurchase (RequestByID) returns (ProductPurchase) {}
    rpc GetProductPurchases (RequestByID) returns (PurchasesReply) {}
    rpc RemoveProductPurchase (RequestByID) returns (StatusReply) {}
    rpc SearchProduct (SearchRequest) returns (ProductsReply) {}
    rpc CheckLinkedShopProducts (CheckLinksReqest) returns (ProductsLinks) {}
    rpc CheckLinkedShopProduct (CheckLinksReqest) returns (ProductLink) {}
    rpc GetProductsByID (RequestByIDs) returns (ProductsReply) {}
    rpc GetProductByShopID (ProductsByShopRequest) returns (Product) {}
    rpc GetCompanyProductsID (ProductsByShopRequest) returns (ListID) {}
    rpc GetShopProductPurcases (ProductsByShopRequest) returns (PurchasesReply) {}
    rpc GetBrandsIDProduct (ProductsByShopRequest) returns (BrandListID) {}
    rpc GetBrandProductsID (BrandListIDRequest) returns (ListID) {}
    rpc GetBrandCompanyProducts (BrandCompanyRequest) returns (BrandCompanyProductsReply) {}
    rpc GetBrandCompanyProduct (RequestByID) returns (BrandCompanyProduct) {}
}

message ProductsRequest {
    Auth auth = 1;
    int64 page = 2;
    repeated FilterParam filters = 3;
    SortParam sort = 4;
}

message ProductsReply {
    repeated Product products = 1;
    Pagination pagination = 2;
}

message ProductLink {
    Auth auth = 1;
    int64 productID = 2;
    string shopCode = 3;
    repeated int64 shopProductID = 4;
    string name = 5;
}

message UpdateProductRequest {
    Auth auth = 1;
    Product data = 2;
}

message SetProductBrandRequest {
    Auth auth = 1;
    int64 productID = 2;
    int64 brandID = 3;
}

message SetProductPurchaseRequest {
    Auth auth = 1;
    int64 productID = 2;
    float purchase = 3;
    string dateFrom = 4;
}

message ProductPurchase {
    int64 purchaseID = 1;
    float purchase = 2;
    string dateFrom = 3;
}

message PurchasesReply {
    repeated ProductPurchase purchases = 1;
}

message CheckLinksReqest {
    Auth auth = 1;
    repeated int64 shopProductsID = 2;
    string shopCode = 3;
}

message ProductsLinks {
    repeated ProductLink links = 1;
}

message ProductsByShopRequest {
    Auth auth = 1;
    string shopCode = 2;
    int64 shopProductID = 3;
    repeated int64 shopProductsID = 4;
}

message ShopProductBrandID {
    int64 shopProductID = 1;
    int64 brandID = 2;
}

message BrandListID {
    repeated ShopProductBrandID list = 1;
}

message BrandListIDRequest {
    Auth auth = 1;
    string shopCode = 2;
    repeated int64 brandID = 3;
}

message BrandCompanyRequest {
    int64 companyID = 1;
    int64 brandID = 2;
}

message BrandCompanyProduct {
    Product product = 1;
    repeated ProductShopUrls urls = 2;
}

message BrandCompanyProductsReply {
    repeated BrandCompanyProduct products = 1;
}
