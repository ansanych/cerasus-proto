syntax = "proto3";
import "cerasus.proto";

package cerasus;

option go_package = "github.com/ansanych/cerasus-proto";

service Ozon {
    rpc SetAuth (SetOzonAuth) returns (BoolReply) {}
    rpc GetAuth (Auth) returns (ShopOzonAuth) {}
    rpc ErrorAuth (Auth) returns (BoolReply) {}
    rpc GetUnsortedCount (Auth) returns (CountReply) {}
    rpc GetUnsortedList (ShopProductListRequest) returns (ShopProductListReply) {}
    rpc GetProductCount (Auth) returns (CountReply) {}
    rpc GetProductList (ShopProductListRequest) returns (ShopProductListReply) {}
    rpc GetProduct (ShopProductRequest) returns (ShopProduct) {}
    rpc UpdateProduct (ShopProductUpdateRequest) returns (BoolReply) {}
    rpc GetDaySales (Auth) returns (DaysSalesReply) {}
    rpc GetSales (SalesRequest) returns (SalesReply) {}
    rpc GetShopServices(ShopServiceRequest) returns (ShopServiceReply) {}
    rpc GetSaleDetail (SaleDetailsRequest) returns (SaleDetailsReply) {}
    rpc GetProductSales (ProductSalesRequest) returns (SalesReply) {}
    rpc GetMainGraphic (MainGraphicRequest) returns (MainGraphicReply) {}
    rpc GetImage(ImageRequest) returns (ImageReply) {}
    rpc CheckShopData(Auth) returns (CompanyShopData) {}
    rpc GetDonutGraphics(Auth) returns (DonutGraphic) {}
    rpc GetWeekGraphics(Auth) returns (WeekGraphics) {}
    rpc ForCounterDataOZ (ForCounterRequestOZ) returns (ForCounterReplyOZ) {}
    rpc Ping (PingRequest) returns (PingReply) {}
}

message ShopOzonAuth {
    int32 clientID = 1;
    string apiKey = 2;
    bool error = 3;
}

message SetOzonAuth {
    Auth auth = 1;
    ShopOzonAuth shopAuth = 2;
}

message ForCounterRequestOZ {
    int64 companyID = 1;
    repeated int64 shopProductID = 2;
}

message ForCounterProductDataOZ {
    int64 shopProductID = 1;
    int64 ozonProductID = 2;
}

message ForCounterReplyOZ {
    ShopOzonAuth shopOzonAuth = 1;
    repeated ForCounterProductDataOZ data = 2;
}