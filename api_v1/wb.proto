syntax = "proto3";
import "cerasus.proto";

package cerasus;

option go_package = "github.com/ansanych/cerasus-proto";

service WB {
    rpc SetAuth (SetWBAuth) returns (BoolReply) {}
    rpc GetAuth (Auth) returns (ShopWBAuth) {}
    rpc ErrorAuth (Auth) returns (BoolReply) {}
    rpc GetUnsortedCount (Auth) returns (CountReply) {}
    rpc GetUnsortedList (ShopProductListRequest) returns (ShopProductListReply) {}
    rpc GetProductCount (Auth) returns (CountReply) {}
    rpc GetProductList (ShopProductListRequest) returns (ShopProductListReply) {}
    rpc GetProduct (ShopProductRequest) returns (ShopProduct) {}
    rpc UpdateProduct (ShopProductUpdateRequest) returns (BoolReply) {}
    rpc GetDaySales (Auth) returns (DaysSalesReply) {}
    rpc GetSales (SalesRequest) returns (SalesReply) {}
    rpc GetShopServices(ShopServiceRequest) returns (ShopServiceReply) {}
    rpc GetSaleDetail (SaleDetailsRequest) returns (SaleDetailsReply) {}
    rpc GetProductSales (ProductSalesRequest) returns (SalesReply) {}
    rpc GetMainGraphic (MainGraphicRequest) returns (MainGraphicReply) {}
    rpc GetImage(ImageRequest) returns (ImageReply) {}
    rpc CheckShopData(Auth) returns (CompanyShopData) {}
    rpc GetDonutGraphics(Auth) returns (DonutGraphic) {}
    rpc GetWeekGraphics(Auth) returns (WeekGraphics) {}
    rpc ForCounterData(ForCounterRequest) returns (ForCounterReply) {}
    rpc Ping (PingRequest) returns (PingReply) {}
}

message ShopWBAuth {
    string token = 1;
    bool error = 2;
}

message SetWBAuth {
    Auth auth = 1;
    ShopWBAuth shopAuth = 2;
}

message ForCounterRequest {
    int64 companyID = 1;
    repeated int64 shopProductID = 2;
}

message ForCounterProductData {
    int64 shopProductID = 1;
    repeated string skus = 2;
    int64 NmID = 3;
}

message CompanyWarehouses {
    int64 ID = 1;
    string name = 2;
    int64 officeID = 3;
    int64 warehouseID = 4;
    int32 cargoType = 5;
    int32 deliveryType = 6;
    bool active = 7;
    string updated = 8;
}

message ForCounterReply {
    ShopWBAuth shopWBAuth = 1;
    repeated ForCounterProductData data = 2;
}